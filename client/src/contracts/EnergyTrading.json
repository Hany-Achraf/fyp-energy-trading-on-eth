{
  "contractName": "EnergyTrading",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountEnergyNeeded",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numOfMins",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sellingPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bidAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "biddingEndedAt",
              "type": "uint256"
            },
            {
              "internalType": "enum Status",
              "name": "status",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct Trade",
          "name": "trade",
          "type": "tuple"
        }
      ],
      "name": "TradeClosed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountEnergyNeeded",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_numOfMins",
          "type": "uint256"
        }
      ],
      "name": "createTrade",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "bid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "withdrawBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "endBidding",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "buyerConfirmSuccessfulTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "buyerMarkFailedTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "buyerClaimMoneyBack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "sellerConfirmFailedTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "sellerMarkConflict",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "sellerClaimMoney",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isSuccessfulTrade",
          "type": "bool"
        }
      ],
      "name": "adminResolveConflict",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "fetchAllOpenedTrades",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountEnergyNeeded",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numOfMins",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sellingPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bidAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "biddingEndedAt",
              "type": "uint256"
            },
            {
              "internalType": "enum Status",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct Trade[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountEnergyNeeded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numOfMins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellingPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"biddingEndedAt\",\"type\":\"uint256\"},{\"internalType\":\"enum Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct Trade\",\"name\":\"trade\",\"type\":\"tuple\"}],\"name\":\"TradeClosed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isSuccessfulTrade\",\"type\":\"bool\"}],\"name\":\"adminResolveConflict\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"buyerClaimMoneyBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"buyerConfirmSuccessfulTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"buyerMarkFailedTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountEnergyNeeded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numOfMins\",\"type\":\"uint256\"}],\"name\":\"createTrade\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"endBidding\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchAllOpenedTrades\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountEnergyNeeded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numOfMins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellingPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"biddingEndedAt\",\"type\":\"uint256\"},{\"internalType\":\"enum Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct Trade[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"sellerClaimMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"sellerConfirmFailedTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"sellerMarkConflict\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EnergyTrading.sol\":\"EnergyTrading\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/EnergyTrading.sol\":{\"keccak256\":\"0xdeed7756f854394ce8c73d946353af38d6baeb29f65dd6dd43e9b834c3e6737b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cc8b5d52ab49f43978d68cb23b324d5cd078849e55369bc5689b06ba8a2d70b\",\"dweb:/ipfs/QmQxaUoVgD4YD9Fh9vozdJZqyVCZ9PfUDnEsCvnU3w3iJh\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613fe0806100606000396000f3fe6080604052600436106100e85760003560e01c80636e82386e1161008a578063b117a10611610059578063b117a1061461028d578063e40ebc3a146102b6578063f6819ecf146102df578063f851a44014610308576100e8565b80636e82386e146101f45780638cb02ef41461021d578063901c947f1461024657806396463fc614610271576100e8565b80630eaaf4c8116100c65780630eaaf4c81461015d57806321af7a81146101865780634f63f69e146101af578063598647f8146101d8576100e8565b80630160a13c146100ed578063093755ad1461011857806309ec6cc714610134575b600080fd5b3480156100f957600080fd5b50610102610333565b60405161010f9190612f31565b60405180910390f35b610132600480360381019061012d9190612f84565b6104b6565b005b34801561014057600080fd5b5061015b60048036038101906101569190612f84565b610757565b005b34801561016957600080fd5b50610184600480360381019061017f9190612f84565b610b52565b005b34801561019257600080fd5b506101ad60048036038101906101a89190612f84565b610ecf565b005b3480156101bb57600080fd5b506101d660048036038101906101d19190612f84565b61126a565b005b6101f260048036038101906101ed9190612fb1565b6115a3565b005b34801561020057600080fd5b5061021b60048036038101906102169190613029565b6118ed565b005b34801561022957600080fd5b50610244600480360381019061023f9190612f84565b611d48565b005b34801561025257600080fd5b5061025b611f60565b6040516102689190613078565b60405180910390f35b61028b60048036038101906102869190612fb1565b611f68565b005b34801561029957600080fd5b506102b460048036038101906102af9190612f84565b612186565b005b3480156102c257600080fd5b506102dd60048036038101906102d89190612f84565b6124a0565b005b3480156102eb57600080fd5b5061030660048036038101906103019190612f84565b612656565b005b34801561031457600080fd5b5061031d612990565b60405161032a91906130a2565b60405180910390f35b60606001805480602002602001604051908101604052809291908181526020016000905b828210156104ad578382906000526020600020906009020160405180610120016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16600681111561048857610487612d7f565b5b600681111561049a57610499612d7f565b5b8152505081526020019060010190610357565b50505050905090565b60006104c1826129b4565b9050600180549050811061050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190613166565b60405180910390fd5b6000600182815481106105205761051f613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990613227565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c906132df565b60405180910390fd5b6000600681111561066957610668612d7f565b5b8160080160009054906101000a900460ff16600681111561068d5761068c612d7f565b5b146106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c49061334b565b60405180910390fd5b80600401543414610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a906133dd565b60405180910390fd5b34816004018190555042816007018190555060028160080160006101000a81548160ff0219169083600681111561074d5761074c612d7f565b5b0217905550505050565b6000610762826129b4565b905060018054905081106107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290613166565b60405180910390fd5b6000600182815481106107c1576107c0613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a90613227565b60405180910390fd5b6000600681111561087757610876612d7f565b5b8160080160009054906101000a900460ff16600681111561089b5761089a612d7f565b5b146108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d29061334b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a1d578060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f00009081150290604051600060405180830381858888f193505050501580156109a5573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f19350505050158015610a17573d6000803e3d6000fd5b50610a91565b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a00009081150290604051600060405180830381858888f19350505050158015610a8f573d6000803e3d6000fd5b505b60018160080160006101000a81548160ff02191690836006811115610ab957610ab8612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c81604051610aed91906135aa565b60405180910390a1610afe82612a12565b600180549050610b0d846129b4565b14610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4490613612565b60405180910390fd5b505050565b6000610b5d826129b4565b90506001805490508110610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d90613166565b60405180910390fd5b600060018281548110610bbc57610bbb613186565b5b906000526020600020906009020190508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5590613227565b60405180910390fd5b60006006811115610c7257610c71612d7f565b5b8160080160009054906101000a900460ff166006811115610c9657610c95612d7f565b5b14610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd9061334b565b60405180910390fd5b60148160060154610ce79190613661565b421015610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d209061379b565b60405180910390fd5b8060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f00009081150290604051600060405180830381858888f19350505050158015610d9b573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f19350505050158015610e0d573d6000803e3d6000fd5b5060018160080160006101000a81548160ff02191690836006811115610e3657610e35612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c81604051610e6a91906135aa565b60405180910390a1610e7b82612a12565b600180549050610e8a846129b4565b14610eca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec190613612565b60405180910390fd5b505050565b6000610eda826129b4565b90506001805490508110610f23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1a90613166565b60405180910390fd5b600060018281548110610f3957610f38613186565b5b906000526020600020906009020190508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd29061382d565b60405180910390fd5b60026006811115610fef57610fee612d7f565b5b8160080160009054906101000a900460ff16600681111561101357611012612d7f565b5b14611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a906138e5565b60405180910390fd5b603c81600301546110649190613905565b81600701546110739190613661565b4210156110b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ac90613a8f565b60405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f19350505050158015611126573d6000803e3d6000fd5b508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f0000836004015461117d9190613661565b9081150290604051600060405180830381858888f193505050501580156111a8573d6000803e3d6000fd5b5060058160080160006101000a81548160ff021916908360068111156111d1576111d0612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c8160405161120591906135aa565b60405180910390a161121682612a12565b600180549050611225846129b4565b14611265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125c90613612565b60405180910390fd5b505050565b6000611275826129b4565b905060018054905081106112be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b590613166565b60405180910390fd5b6000600182815481106112d4576112d3613186565b5b906000526020600020906009020190508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136d9061382d565b60405180910390fd5b6003600681111561138a57611389612d7f565b5b8160080160009054906101000a900460ff1660068111156113ae576113ad612d7f565b5b146113ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e5906138e5565b60405180910390fd5b8060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f1935050505015801561145f573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f000083600401546114b69190613661565b9081150290604051600060405180830381858888f193505050501580156114e1573d6000803e3d6000fd5b5060068160080160006101000a81548160ff0219169083600681111561150a57611509612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c8160405161153e91906135aa565b60405180910390a161154f82612a12565b60018054905061155e846129b4565b1461159e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159590613612565b60405180910390fd5b505050565b60006115ae836129b4565b905060018054905081106115f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ee90613166565b60405180910390fd5b60006001828154811061160d5761160c613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036116af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a690613b21565b60405180910390fd5b600060068111156116c3576116c2612d7f565b5b8160080160009054906101000a900460ff1660068111156116e7576116e6612d7f565b5b14611727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171e9061334b565b60405180910390fd5b60008160040154148061173d5750828160040154115b61177c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177390613bb3565b60405180910390fd5b67016345785d8a000034146117c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bd90613c45565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611892578060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a00009081150290604051600060405180830381858888f19350505050158015611890573d6000803e3d6000fd5b505b828160040181905550338160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042816006018190555050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461197b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197290613cd7565b60405180910390fd5b6000611986836129b4565b905060018054905081106119cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c690613166565b60405180910390fd5b6000600182815481106119e5576119e4613186565b5b9060005260206000209060090201905060046006811115611a0957611a08612d7f565b5b8160080160009054906101000a900460ff166006811115611a2d57611a2c612d7f565b5b14611a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a64906138e5565b60405180910390fd5b8215611b955760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f19350505050158015611ae0573d6000803e3d6000fd5b508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f00008360040154611b379190613661565b9081150290604051600060405180830381858888f19350505050158015611b62573d6000803e3d6000fd5b5060058160080160006101000a81548160ff02191690836006811115611b8b57611b8a612d7f565b5b0217905550611cb3565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f19350505050158015611c02573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f00008360040154611c599190613661565b9081150290604051600060405180830381858888f19350505050158015611c84573d6000803e3d6000fd5b5060068160080160006101000a81548160ff02191690836006811115611cad57611cac612d7f565b5b02179055505b7f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c81604051611ce291906135aa565b60405180910390a1611cf382612a12565b600180549050611d02856129b4565b14611d42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3990613612565b60405180910390fd5b50505050565b6000611d53826129b4565b90506001805490508110611d9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9390613166565b60405180910390fd5b600060018281548110611db257611db1613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4b9061382d565b60405180910390fd5b60026006811115611e6857611e67612d7f565b5b8160080160009054906101000a900460ff166006811115611e8c57611e8b612d7f565b5b14611ecc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec3906138e5565b60405180910390fd5b603c8160030154611edd9190613905565b8160070154611eec9190613661565b421015611f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2590613ddb565b60405180910390fd5b60038160080160006101000a81548160ff02191690836006811115611f5657611f55612d7f565b5b0217905550505050565b600047905090565b67016345785d8a00003414611fb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa990613c45565b60405180910390fd5b611fba612c6f565b60026000815480929190611fcd90613dfb565b9190505581600001818152505033816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281604001818152505081816060018181525050600081610100019060068111156120405761203f612d7f565b5b9081600681111561205457612053612d7f565b5b8152505060018190806001815401808255809150506001900390600052602060002090600902016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff0219169083600681111561217a57612179612d7f565b5b02179055505050505050565b6000612191826129b4565b905060018054905081106121da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d190613166565b60405180910390fd5b6000600182815481106121f0576121ef613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612292576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122899061382d565b60405180910390fd5b600360068111156122a6576122a5612d7f565b5b8160080160009054906101000a900460ff1660068111156122ca576122c9612d7f565b5b1461230a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612301906138e5565b60405180910390fd5b60b4816007015461231b9190613661565b42101561235d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235490613f27565b60405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6702c68af0bb14000083600401546123b39190613661565b9081150290604051600060405180830381858888f193505050501580156123de573d6000803e3d6000fd5b5060068160080160006101000a81548160ff0219169083600681111561240757612406612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c8160405161243b91906135aa565b60405180910390a161244c82612a12565b60018054905061245b846129b4565b1461249b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249290613612565b60405180910390fd5b505050565b60006124ab826129b4565b905060018054905081106124f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124eb90613166565b60405180910390fd5b60006001828154811061250a57612509613186565b5b906000526020600020906009020190508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146125ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125a39061382d565b60405180910390fd5b600360068111156125c0576125bf612d7f565b5b8160080160009054906101000a900460ff1660068111156125e4576125e3612d7f565b5b14612624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161261b906138e5565b60405180910390fd5b60048160080160006101000a81548160ff0219169083600681111561264c5761264b612d7f565b5b0217905550505050565b6000612661826129b4565b905060018054905081106126aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126a190613166565b60405180910390fd5b6000600182815481106126c0576126bf613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612762576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127599061382d565b60405180910390fd5b6002600681111561277657612775612d7f565b5b8160080160009054906101000a900460ff16600681111561279a57612799612d7f565b5b146127da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127d1906138e5565b60405180910390fd5b8060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a000083600401546128309190613661565b9081150290604051600060405180830381858888f1935050505015801561285b573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a00009081150290604051600060405180830381858888f193505050501580156128ce573d6000803e3d6000fd5b5060058160080160006101000a81548160ff021916908360068111156128f7576128f6612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c8160405161292b91906135aa565b60405180910390a161293c82612a12565b60018054905061294b846129b4565b1461298b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161298290613612565b60405180910390fd5b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090505b600180549050811015612a095782600182815481106129de576129dd613186565b5b9060005260206000209060090201600001540315612a09578080612a0190613dfb565b9150506129bc565b80915050919050565b6001808080549050612a249190613f47565b81548110612a3557612a34613186565b5b906000526020600020906009020160018281548110612a5757612a56613186565b5b9060005260206000209060090201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820154816002015560038201548160030155600482015481600401556005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060068201548160060155600782015481600701556008820160009054906101000a900460ff168160080160006101000a81548160ff02191690836006811115612ba757612ba6612d7f565b5b02179055509050506001805480612bc157612bc0613f7b565b5b60019003818190600052602060002090600902016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160009055600382016000905560048201600090556005820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600682016000905560078201600090556008820160006101000a81549060ff02191690555050905550565b60405180610120016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160006006811115612cf357612cf2612d7f565b5b81525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b612d3881612d25565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d6982612d3e565b9050919050565b612d7981612d5e565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110612dbf57612dbe612d7f565b5b50565b6000819050612dd082612dae565b919050565b6000612de082612dc2565b9050919050565b612df081612dd5565b82525050565b61012082016000820151612e0d6000850182612d2f565b506020820151612e206020850182612d70565b506040820151612e336040850182612d2f565b506060820151612e466060850182612d2f565b506080820151612e596080850182612d2f565b5060a0820151612e6c60a0850182612d70565b5060c0820151612e7f60c0850182612d2f565b5060e0820151612e9260e0850182612d2f565b50610100820151612ea7610100850182612de7565b50505050565b6000612eb98383612df6565b6101208301905092915050565b6000602082019050919050565b6000612ede82612cf9565b612ee88185612d04565b9350612ef383612d15565b8060005b83811015612f24578151612f0b8882612ead565b9750612f1683612ec6565b925050600181019050612ef7565b5085935050505092915050565b60006020820190508181036000830152612f4b8184612ed3565b905092915050565b600080fd5b612f6181612d25565b8114612f6c57600080fd5b50565b600081359050612f7e81612f58565b92915050565b600060208284031215612f9a57612f99612f53565b5b6000612fa884828501612f6f565b91505092915050565b60008060408385031215612fc857612fc7612f53565b5b6000612fd685828601612f6f565b9250506020612fe785828601612f6f565b9150509250929050565b60008115159050919050565b61300681612ff1565b811461301157600080fd5b50565b60008135905061302381612ffd565b92915050565b600080604083850312156130405761303f612f53565b5b600061304e85828601612f6f565b925050602061305f85828601613014565b9150509250929050565b61307281612d25565b82525050565b600060208201905061308d6000830184613069565b92915050565b61309c81612d5e565b82525050565b60006020820190506130b76000830184613093565b92915050565b600082825260208201905092915050565b7f5472616465204e6f7420466f756e6420284d6f73742070726f6261626c79206960008201527f742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f7360208201527f6564207472616465732129000000000000000000000000000000000000000000604082015250565b6000613150604b836130bd565b915061315b826130ce565b606082019050919050565b6000602082019050818103600083015261317f81613143565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f596f75206172656e277420616c6c6f77656420746f20706572666f726d20746860008201527f697320616374696f6e0000000000000000000000000000000000000000000000602082015250565b60006132116029836130bd565b915061321c826131b5565b604082019050919050565b6000602082019050818103600083015261324081613204565b9050919050565b7f596f752063616e6e6f7420656e642062696464696e6720696620796f7520686160008201527f76656e277420726563656976656420616e79206269642e20557365202243616e60208201527f63656c2220696e73746561640000000000000000000000000000000000000000604082015250565b60006132c9604c836130bd565b91506132d482613247565b606082019050919050565b600060208201905081810360008301526132f8816132bc565b9050919050565b7f5468652062696464696e672068617320616c726561647920656e646564000000600082015250565b6000613335601d836130bd565b9150613340826132ff565b602082019050919050565b6000602082019050818103600083015261336481613328565b9050919050565b7f596f75206d757374207472616e7366657220746865206d6f6e657920696e206160008201527f6476616e63650000000000000000000000000000000000000000000000000000602082015250565b60006133c76026836130bd565b91506133d28261336b565b604082019050919050565b600060208201905081810360008301526133f6816133ba565b9050919050565b60008160001c9050919050565b6000819050919050565b6000613427613422836133fd565b61340a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061346161345c836133fd565b61342e565b9050919050565b600060ff82169050919050565b6000613488613483836133fd565b613468565b9050919050565b610120820160008083015490506134a581613414565b6134b26000860182612d2f565b50600183015490506134c38161344e565b6134d06020860182612d70565b50600283015490506134e181613414565b6134ee6040860182612d2f565b50600383015490506134ff81613414565b61350c6060860182612d2f565b506004830154905061351d81613414565b61352a6080860182612d2f565b506005830154905061353b8161344e565b61354860a0860182612d70565b506006830154905061355981613414565b61356660c0860182612d2f565b506007830154905061357781613414565b61358460e0860182612d2f565b506008830154905061359581613475565b6135a3610100860182612de7565b5050505050565b6000610120820190506135c0600083018461348f565b92915050565b7f4552524f523a205472616e736174696f6e2072657665727465642e0000000000600082015250565b60006135fc601b836130bd565b9150613607826135c6565b602082019050919050565b6000602082019050818103600083015261362b816135ef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061366c82612d25565b915061367783612d25565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156136ac576136ab613632565b5b828201905092915050565b7f596f752063616e20776974686472617720796f757220626964204f4e4c59206960008201527f66207468652063726561746f72206f66207468697320747261646520646f657360208201527f6e277420656e642062696464696e672077697468696e2031206d696e7574652060408201527f66726f6d207468652074696d6520796f75207375636365737366756c6c79207060608201527f6c6163656420796f757220626964000000000000000000000000000000000000608082015250565b6000613785608e836130bd565b9150613790826136b7565b60a082019050919050565b600060208201905081810360008301526137b481613778565b9050919050565b7f596f75277265206e6f7420616c6c6f77656420746f20706572666f726d20746860008201527f697320616374696f6e2100000000000000000000000000000000000000000000602082015250565b6000613817602a836130bd565b9150613822826137bb565b604082019050919050565b600060208201905081810360008301526138468161380a565b9050919050565b7f5468652063757272656e7420737461747573206f66207468652074726164652060008201527f646f65736e2774207065726d697420796f7520746f20706572666f726d20746860208201527f697320616374696f6e0000000000000000000000000000000000000000000000604082015250565b60006138cf6049836130bd565b91506138da8261384d565b606082019050919050565b600060208201905081810360008301526138fe816138c2565b9050919050565b600061391082612d25565b915061391b83612d25565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561395457613953613632565b5b828202905092915050565b7f596f752063616e20636c61696d20796f7572206d6f6e6579206261636b206f6e60008201527f6c792069662074686520627579657220646f65736e277420636f6e6669726d2060208201527f73756363657373206e6f72206d61726b2074686520747261646520617320612060408201527f6661696c6564206f6e652077697468696e20746865206e756d626572206f662060608201527f6d696e757465732073706563696669656420696e20746865207472616465207360808201527f74617274696e672066726f6d207468652074696d6520686520656e646564207460a08201527f68652062696464696e670000000000000000000000000000000000000000000060c082015250565b6000613a7960ca836130bd565b9150613a848261395f565b60e082019050919050565b60006020820190508181036000830152613aa881613a6c565b9050919050565b7f596f752063616e277420626964206f6e206120747261646520796f752068617660008201527f6520637265617465642121000000000000000000000000000000000000000000602082015250565b6000613b0b602b836130bd565b9150613b1682613aaf565b604082019050919050565b60006020820190508181036000830152613b3a81613afe565b9050919050565b7f546865726520697320616c72656164792061206c6f776572206f72206571756160008201527f6c20626964210000000000000000000000000000000000000000000000000000602082015250565b6000613b9d6026836130bd565b9150613ba882613b41565b604082019050919050565b60006020820190508181036000830152613bcc81613b90565b9050919050565b7f596f75206d7573742073656e6420612076616c7565206f6620302e312045544860008201527f206173206465706f736974210000000000000000000000000000000000000000602082015250565b6000613c2f602c836130bd565b9150613c3a82613bd3565b604082019050919050565b60006020820190508181036000830152613c5e81613c22565b9050919050565b7f4f6e6c792061646d696e20697320616c6c6f77656420746f20706572666f726d60008201527f207468697320616374696f6e2100000000000000000000000000000000000000602082015250565b6000613cc1602d836130bd565b9150613ccc82613c65565b604082019050919050565b60006020820190508181036000830152613cf081613cb4565b9050919050565b7f596f752063616e2774206d61726b2061207472616465206173204641494c454460008201527f206265666f726520746865206e756d626572206f66206d696e7574657320737060208201527f6563696669656420696e20746865207472616465207374617274696e6720667260408201527f6f6d207468652074696d6520796f7520656e646564207468652062696464696e60608201527f6700000000000000000000000000000000000000000000000000000000000000608082015250565b6000613dc56081836130bd565b9150613dd082613cf7565b60a082019050919050565b60006020820190508181036000830152613df481613db8565b9050919050565b6000613e0682612d25565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613e3857613e37613632565b5b600182019050919050565b7f596f752063616e20636c61696d20796f7572206d6f6e6579206261636b206f6e60008201527f6c79206966207468652073656c6c657220646f65736e277420636f6e6669726d60208201527f206661696c757265206e6f7220726571756573742061646d696e277320696e7460408201527f657276656e74696f6e2077697468696e2033206d696e757465732066726f6d2060608201527f7468652074696d6520686520776f6e207468652062696464696e670000000000608082015250565b6000613f11609b836130bd565b9150613f1c82613e43565b60a082019050919050565b60006020820190508181036000830152613f4081613f04565b9050919050565b6000613f5282612d25565b9150613f5d83612d25565b925082821015613f7057613f6f613632565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122092db17fb4a88f1dc5074b01bc2c474f857bb7408f7c674cd0c1ed204c9d92af164736f6c634300080e0033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80636e82386e1161008a578063b117a10611610059578063b117a1061461028d578063e40ebc3a146102b6578063f6819ecf146102df578063f851a44014610308576100e8565b80636e82386e146101f45780638cb02ef41461021d578063901c947f1461024657806396463fc614610271576100e8565b80630eaaf4c8116100c65780630eaaf4c81461015d57806321af7a81146101865780634f63f69e146101af578063598647f8146101d8576100e8565b80630160a13c146100ed578063093755ad1461011857806309ec6cc714610134575b600080fd5b3480156100f957600080fd5b50610102610333565b60405161010f9190612f31565b60405180910390f35b610132600480360381019061012d9190612f84565b6104b6565b005b34801561014057600080fd5b5061015b60048036038101906101569190612f84565b610757565b005b34801561016957600080fd5b50610184600480360381019061017f9190612f84565b610b52565b005b34801561019257600080fd5b506101ad60048036038101906101a89190612f84565b610ecf565b005b3480156101bb57600080fd5b506101d660048036038101906101d19190612f84565b61126a565b005b6101f260048036038101906101ed9190612fb1565b6115a3565b005b34801561020057600080fd5b5061021b60048036038101906102169190613029565b6118ed565b005b34801561022957600080fd5b50610244600480360381019061023f9190612f84565b611d48565b005b34801561025257600080fd5b5061025b611f60565b6040516102689190613078565b60405180910390f35b61028b60048036038101906102869190612fb1565b611f68565b005b34801561029957600080fd5b506102b460048036038101906102af9190612f84565b612186565b005b3480156102c257600080fd5b506102dd60048036038101906102d89190612f84565b6124a0565b005b3480156102eb57600080fd5b5061030660048036038101906103019190612f84565b612656565b005b34801561031457600080fd5b5061031d612990565b60405161032a91906130a2565b60405180910390f35b60606001805480602002602001604051908101604052809291908181526020016000905b828210156104ad578382906000526020600020906009020160405180610120016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16600681111561048857610487612d7f565b5b600681111561049a57610499612d7f565b5b8152505081526020019060010190610357565b50505050905090565b60006104c1826129b4565b9050600180549050811061050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190613166565b60405180910390fd5b6000600182815481106105205761051f613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990613227565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c906132df565b60405180910390fd5b6000600681111561066957610668612d7f565b5b8160080160009054906101000a900460ff16600681111561068d5761068c612d7f565b5b146106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c49061334b565b60405180910390fd5b80600401543414610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a906133dd565b60405180910390fd5b34816004018190555042816007018190555060028160080160006101000a81548160ff0219169083600681111561074d5761074c612d7f565b5b0217905550505050565b6000610762826129b4565b905060018054905081106107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290613166565b60405180910390fd5b6000600182815481106107c1576107c0613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a90613227565b60405180910390fd5b6000600681111561087757610876612d7f565b5b8160080160009054906101000a900460ff16600681111561089b5761089a612d7f565b5b146108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d29061334b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a1d578060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f00009081150290604051600060405180830381858888f193505050501580156109a5573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f19350505050158015610a17573d6000803e3d6000fd5b50610a91565b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a00009081150290604051600060405180830381858888f19350505050158015610a8f573d6000803e3d6000fd5b505b60018160080160006101000a81548160ff02191690836006811115610ab957610ab8612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c81604051610aed91906135aa565b60405180910390a1610afe82612a12565b600180549050610b0d846129b4565b14610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4490613612565b60405180910390fd5b505050565b6000610b5d826129b4565b90506001805490508110610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d90613166565b60405180910390fd5b600060018281548110610bbc57610bbb613186565b5b906000526020600020906009020190508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5590613227565b60405180910390fd5b60006006811115610c7257610c71612d7f565b5b8160080160009054906101000a900460ff166006811115610c9657610c95612d7f565b5b14610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd9061334b565b60405180910390fd5b60148160060154610ce79190613661565b421015610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d209061379b565b60405180910390fd5b8060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f00009081150290604051600060405180830381858888f19350505050158015610d9b573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f19350505050158015610e0d573d6000803e3d6000fd5b5060018160080160006101000a81548160ff02191690836006811115610e3657610e35612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c81604051610e6a91906135aa565b60405180910390a1610e7b82612a12565b600180549050610e8a846129b4565b14610eca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec190613612565b60405180910390fd5b505050565b6000610eda826129b4565b90506001805490508110610f23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1a90613166565b60405180910390fd5b600060018281548110610f3957610f38613186565b5b906000526020600020906009020190508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd29061382d565b60405180910390fd5b60026006811115610fef57610fee612d7f565b5b8160080160009054906101000a900460ff16600681111561101357611012612d7f565b5b14611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a906138e5565b60405180910390fd5b603c81600301546110649190613905565b81600701546110739190613661565b4210156110b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ac90613a8f565b60405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f19350505050158015611126573d6000803e3d6000fd5b508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f0000836004015461117d9190613661565b9081150290604051600060405180830381858888f193505050501580156111a8573d6000803e3d6000fd5b5060058160080160006101000a81548160ff021916908360068111156111d1576111d0612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c8160405161120591906135aa565b60405180910390a161121682612a12565b600180549050611225846129b4565b14611265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125c90613612565b60405180910390fd5b505050565b6000611275826129b4565b905060018054905081106112be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b590613166565b60405180910390fd5b6000600182815481106112d4576112d3613186565b5b906000526020600020906009020190508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136d9061382d565b60405180910390fd5b6003600681111561138a57611389612d7f565b5b8160080160009054906101000a900460ff1660068111156113ae576113ad612d7f565b5b146113ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e5906138e5565b60405180910390fd5b8060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f1935050505015801561145f573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f000083600401546114b69190613661565b9081150290604051600060405180830381858888f193505050501580156114e1573d6000803e3d6000fd5b5060068160080160006101000a81548160ff0219169083600681111561150a57611509612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c8160405161153e91906135aa565b60405180910390a161154f82612a12565b60018054905061155e846129b4565b1461159e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159590613612565b60405180910390fd5b505050565b60006115ae836129b4565b905060018054905081106115f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ee90613166565b60405180910390fd5b60006001828154811061160d5761160c613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036116af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a690613b21565b60405180910390fd5b600060068111156116c3576116c2612d7f565b5b8160080160009054906101000a900460ff1660068111156116e7576116e6612d7f565b5b14611727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171e9061334b565b60405180910390fd5b60008160040154148061173d5750828160040154115b61177c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177390613bb3565b60405180910390fd5b67016345785d8a000034146117c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bd90613c45565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611892578060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a00009081150290604051600060405180830381858888f19350505050158015611890573d6000803e3d6000fd5b505b828160040181905550338160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042816006018190555050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461197b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197290613cd7565b60405180910390fd5b6000611986836129b4565b905060018054905081106119cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c690613166565b60405180910390fd5b6000600182815481106119e5576119e4613186565b5b9060005260206000209060090201905060046006811115611a0957611a08612d7f565b5b8160080160009054906101000a900460ff166006811115611a2d57611a2c612d7f565b5b14611a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a64906138e5565b60405180910390fd5b8215611b955760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f19350505050158015611ae0573d6000803e3d6000fd5b508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f00008360040154611b379190613661565b9081150290604051600060405180830381858888f19350505050158015611b62573d6000803e3d6000fd5b5060058160080160006101000a81548160ff02191690836006811115611b8b57611b8a612d7f565b5b0217905550611cb3565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc66b1a2bc2ec500009081150290604051600060405180830381858888f19350505050158015611c02573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670214e8348c4f00008360040154611c599190613661565b9081150290604051600060405180830381858888f19350505050158015611c84573d6000803e3d6000fd5b5060068160080160006101000a81548160ff02191690836006811115611cad57611cac612d7f565b5b02179055505b7f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c81604051611ce291906135aa565b60405180910390a1611cf382612a12565b600180549050611d02856129b4565b14611d42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3990613612565b60405180910390fd5b50505050565b6000611d53826129b4565b90506001805490508110611d9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9390613166565b60405180910390fd5b600060018281548110611db257611db1613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4b9061382d565b60405180910390fd5b60026006811115611e6857611e67612d7f565b5b8160080160009054906101000a900460ff166006811115611e8c57611e8b612d7f565b5b14611ecc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec3906138e5565b60405180910390fd5b603c8160030154611edd9190613905565b8160070154611eec9190613661565b421015611f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2590613ddb565b60405180910390fd5b60038160080160006101000a81548160ff02191690836006811115611f5657611f55612d7f565b5b0217905550505050565b600047905090565b67016345785d8a00003414611fb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa990613c45565b60405180910390fd5b611fba612c6f565b60026000815480929190611fcd90613dfb565b9190505581600001818152505033816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281604001818152505081816060018181525050600081610100019060068111156120405761203f612d7f565b5b9081600681111561205457612053612d7f565b5b8152505060018190806001815401808255809150506001900390600052602060002090600902016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff0219169083600681111561217a57612179612d7f565b5b02179055505050505050565b6000612191826129b4565b905060018054905081106121da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d190613166565b60405180910390fd5b6000600182815481106121f0576121ef613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612292576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122899061382d565b60405180910390fd5b600360068111156122a6576122a5612d7f565b5b8160080160009054906101000a900460ff1660068111156122ca576122c9612d7f565b5b1461230a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612301906138e5565b60405180910390fd5b60b4816007015461231b9190613661565b42101561235d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235490613f27565b60405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6702c68af0bb14000083600401546123b39190613661565b9081150290604051600060405180830381858888f193505050501580156123de573d6000803e3d6000fd5b5060068160080160006101000a81548160ff0219169083600681111561240757612406612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c8160405161243b91906135aa565b60405180910390a161244c82612a12565b60018054905061245b846129b4565b1461249b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161249290613612565b60405180910390fd5b505050565b60006124ab826129b4565b905060018054905081106124f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124eb90613166565b60405180910390fd5b60006001828154811061250a57612509613186565b5b906000526020600020906009020190508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146125ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125a39061382d565b60405180910390fd5b600360068111156125c0576125bf612d7f565b5b8160080160009054906101000a900460ff1660068111156125e4576125e3612d7f565b5b14612624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161261b906138e5565b60405180910390fd5b60048160080160006101000a81548160ff0219169083600681111561264c5761264b612d7f565b5b0217905550505050565b6000612661826129b4565b905060018054905081106126aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126a190613166565b60405180910390fd5b6000600182815481106126c0576126bf613186565b5b906000526020600020906009020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612762576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127599061382d565b60405180910390fd5b6002600681111561277657612775612d7f565b5b8160080160009054906101000a900460ff16600681111561279a57612799612d7f565b5b146127da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127d1906138e5565b60405180910390fd5b8060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a000083600401546128309190613661565b9081150290604051600060405180830381858888f1935050505015801561285b573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc67016345785d8a00009081150290604051600060405180830381858888f193505050501580156128ce573d6000803e3d6000fd5b5060058160080160006101000a81548160ff021916908360068111156128f7576128f6612d7f565b5b02179055507f970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c8160405161292b91906135aa565b60405180910390a161293c82612a12565b60018054905061294b846129b4565b1461298b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161298290613612565b60405180910390fd5b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090505b600180549050811015612a095782600182815481106129de576129dd613186565b5b9060005260206000209060090201600001540315612a09578080612a0190613dfb565b9150506129bc565b80915050919050565b6001808080549050612a249190613f47565b81548110612a3557612a34613186565b5b906000526020600020906009020160018281548110612a5757612a56613186565b5b9060005260206000209060090201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820154816002015560038201548160030155600482015481600401556005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060068201548160060155600782015481600701556008820160009054906101000a900460ff168160080160006101000a81548160ff02191690836006811115612ba757612ba6612d7f565b5b02179055509050506001805480612bc157612bc0613f7b565b5b60019003818190600052602060002090600902016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160009055600382016000905560048201600090556005820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600682016000905560078201600090556008820160006101000a81549060ff02191690555050905550565b60405180610120016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160006006811115612cf357612cf2612d7f565b5b81525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b612d3881612d25565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d6982612d3e565b9050919050565b612d7981612d5e565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110612dbf57612dbe612d7f565b5b50565b6000819050612dd082612dae565b919050565b6000612de082612dc2565b9050919050565b612df081612dd5565b82525050565b61012082016000820151612e0d6000850182612d2f565b506020820151612e206020850182612d70565b506040820151612e336040850182612d2f565b506060820151612e466060850182612d2f565b506080820151612e596080850182612d2f565b5060a0820151612e6c60a0850182612d70565b5060c0820151612e7f60c0850182612d2f565b5060e0820151612e9260e0850182612d2f565b50610100820151612ea7610100850182612de7565b50505050565b6000612eb98383612df6565b6101208301905092915050565b6000602082019050919050565b6000612ede82612cf9565b612ee88185612d04565b9350612ef383612d15565b8060005b83811015612f24578151612f0b8882612ead565b9750612f1683612ec6565b925050600181019050612ef7565b5085935050505092915050565b60006020820190508181036000830152612f4b8184612ed3565b905092915050565b600080fd5b612f6181612d25565b8114612f6c57600080fd5b50565b600081359050612f7e81612f58565b92915050565b600060208284031215612f9a57612f99612f53565b5b6000612fa884828501612f6f565b91505092915050565b60008060408385031215612fc857612fc7612f53565b5b6000612fd685828601612f6f565b9250506020612fe785828601612f6f565b9150509250929050565b60008115159050919050565b61300681612ff1565b811461301157600080fd5b50565b60008135905061302381612ffd565b92915050565b600080604083850312156130405761303f612f53565b5b600061304e85828601612f6f565b925050602061305f85828601613014565b9150509250929050565b61307281612d25565b82525050565b600060208201905061308d6000830184613069565b92915050565b61309c81612d5e565b82525050565b60006020820190506130b76000830184613093565b92915050565b600082825260208201905092915050565b7f5472616465204e6f7420466f756e6420284d6f73742070726f6261626c79206960008201527f742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f7360208201527f6564207472616465732129000000000000000000000000000000000000000000604082015250565b6000613150604b836130bd565b915061315b826130ce565b606082019050919050565b6000602082019050818103600083015261317f81613143565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f596f75206172656e277420616c6c6f77656420746f20706572666f726d20746860008201527f697320616374696f6e0000000000000000000000000000000000000000000000602082015250565b60006132116029836130bd565b915061321c826131b5565b604082019050919050565b6000602082019050818103600083015261324081613204565b9050919050565b7f596f752063616e6e6f7420656e642062696464696e6720696620796f7520686160008201527f76656e277420726563656976656420616e79206269642e20557365202243616e60208201527f63656c2220696e73746561640000000000000000000000000000000000000000604082015250565b60006132c9604c836130bd565b91506132d482613247565b606082019050919050565b600060208201905081810360008301526132f8816132bc565b9050919050565b7f5468652062696464696e672068617320616c726561647920656e646564000000600082015250565b6000613335601d836130bd565b9150613340826132ff565b602082019050919050565b6000602082019050818103600083015261336481613328565b9050919050565b7f596f75206d757374207472616e7366657220746865206d6f6e657920696e206160008201527f6476616e63650000000000000000000000000000000000000000000000000000602082015250565b60006133c76026836130bd565b91506133d28261336b565b604082019050919050565b600060208201905081810360008301526133f6816133ba565b9050919050565b60008160001c9050919050565b6000819050919050565b6000613427613422836133fd565b61340a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061346161345c836133fd565b61342e565b9050919050565b600060ff82169050919050565b6000613488613483836133fd565b613468565b9050919050565b610120820160008083015490506134a581613414565b6134b26000860182612d2f565b50600183015490506134c38161344e565b6134d06020860182612d70565b50600283015490506134e181613414565b6134ee6040860182612d2f565b50600383015490506134ff81613414565b61350c6060860182612d2f565b506004830154905061351d81613414565b61352a6080860182612d2f565b506005830154905061353b8161344e565b61354860a0860182612d70565b506006830154905061355981613414565b61356660c0860182612d2f565b506007830154905061357781613414565b61358460e0860182612d2f565b506008830154905061359581613475565b6135a3610100860182612de7565b5050505050565b6000610120820190506135c0600083018461348f565b92915050565b7f4552524f523a205472616e736174696f6e2072657665727465642e0000000000600082015250565b60006135fc601b836130bd565b9150613607826135c6565b602082019050919050565b6000602082019050818103600083015261362b816135ef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061366c82612d25565b915061367783612d25565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156136ac576136ab613632565b5b828201905092915050565b7f596f752063616e20776974686472617720796f757220626964204f4e4c59206960008201527f66207468652063726561746f72206f66207468697320747261646520646f657360208201527f6e277420656e642062696464696e672077697468696e2031206d696e7574652060408201527f66726f6d207468652074696d6520796f75207375636365737366756c6c79207060608201527f6c6163656420796f757220626964000000000000000000000000000000000000608082015250565b6000613785608e836130bd565b9150613790826136b7565b60a082019050919050565b600060208201905081810360008301526137b481613778565b9050919050565b7f596f75277265206e6f7420616c6c6f77656420746f20706572666f726d20746860008201527f697320616374696f6e2100000000000000000000000000000000000000000000602082015250565b6000613817602a836130bd565b9150613822826137bb565b604082019050919050565b600060208201905081810360008301526138468161380a565b9050919050565b7f5468652063757272656e7420737461747573206f66207468652074726164652060008201527f646f65736e2774207065726d697420796f7520746f20706572666f726d20746860208201527f697320616374696f6e0000000000000000000000000000000000000000000000604082015250565b60006138cf6049836130bd565b91506138da8261384d565b606082019050919050565b600060208201905081810360008301526138fe816138c2565b9050919050565b600061391082612d25565b915061391b83612d25565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561395457613953613632565b5b828202905092915050565b7f596f752063616e20636c61696d20796f7572206d6f6e6579206261636b206f6e60008201527f6c792069662074686520627579657220646f65736e277420636f6e6669726d2060208201527f73756363657373206e6f72206d61726b2074686520747261646520617320612060408201527f6661696c6564206f6e652077697468696e20746865206e756d626572206f662060608201527f6d696e757465732073706563696669656420696e20746865207472616465207360808201527f74617274696e672066726f6d207468652074696d6520686520656e646564207460a08201527f68652062696464696e670000000000000000000000000000000000000000000060c082015250565b6000613a7960ca836130bd565b9150613a848261395f565b60e082019050919050565b60006020820190508181036000830152613aa881613a6c565b9050919050565b7f596f752063616e277420626964206f6e206120747261646520796f752068617660008201527f6520637265617465642121000000000000000000000000000000000000000000602082015250565b6000613b0b602b836130bd565b9150613b1682613aaf565b604082019050919050565b60006020820190508181036000830152613b3a81613afe565b9050919050565b7f546865726520697320616c72656164792061206c6f776572206f72206571756160008201527f6c20626964210000000000000000000000000000000000000000000000000000602082015250565b6000613b9d6026836130bd565b9150613ba882613b41565b604082019050919050565b60006020820190508181036000830152613bcc81613b90565b9050919050565b7f596f75206d7573742073656e6420612076616c7565206f6620302e312045544860008201527f206173206465706f736974210000000000000000000000000000000000000000602082015250565b6000613c2f602c836130bd565b9150613c3a82613bd3565b604082019050919050565b60006020820190508181036000830152613c5e81613c22565b9050919050565b7f4f6e6c792061646d696e20697320616c6c6f77656420746f20706572666f726d60008201527f207468697320616374696f6e2100000000000000000000000000000000000000602082015250565b6000613cc1602d836130bd565b9150613ccc82613c65565b604082019050919050565b60006020820190508181036000830152613cf081613cb4565b9050919050565b7f596f752063616e2774206d61726b2061207472616465206173204641494c454460008201527f206265666f726520746865206e756d626572206f66206d696e7574657320737060208201527f6563696669656420696e20746865207472616465207374617274696e6720667260408201527f6f6d207468652074696d6520796f7520656e646564207468652062696464696e60608201527f6700000000000000000000000000000000000000000000000000000000000000608082015250565b6000613dc56081836130bd565b9150613dd082613cf7565b60a082019050919050565b60006020820190508181036000830152613df481613db8565b9050919050565b6000613e0682612d25565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613e3857613e37613632565b5b600182019050919050565b7f596f752063616e20636c61696d20796f7572206d6f6e6579206261636b206f6e60008201527f6c79206966207468652073656c6c657220646f65736e277420636f6e6669726d60208201527f206661696c757265206e6f7220726571756573742061646d696e277320696e7460408201527f657276656e74696f6e2077697468696e2033206d696e757465732066726f6d2060608201527f7468652074696d6520686520776f6e207468652062696464696e670000000000608082015250565b6000613f11609b836130bd565b9150613f1c82613e43565b60a082019050919050565b60006020820190508181036000830152613f4081613f04565b9050919050565b6000613f5282612d25565b9150613f5d83612d25565b925082821015613f7057613f6f613632565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122092db17fb4a88f1dc5074b01bc2c474f857bb7408f7c674cd0c1ed204c9d92af164736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:31749:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "102:40:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "113:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "129:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "123:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "123:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "113:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "85:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "95:6:2",
                "type": ""
              }
            ],
            "src": "7:135:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "280:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "297:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "302:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "290:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "290:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "290:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "318:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "337:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "342:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "333:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "333:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "318:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "252:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "257:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "268:11:2",
                "type": ""
              }
            ],
            "src": "148:205:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "452:60:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "462:11:2",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "470:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "462:4:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "483:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "495:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "500:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "491:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "491:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "483:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "439:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "447:4:2",
                "type": ""
              }
            ],
            "src": "359:153:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "563:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "573:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "584:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "573:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "545:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "555:7:2",
                "type": ""
              }
            ],
            "src": "518:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "656:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "673:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "696:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "678:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "678:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "666:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "666:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "644:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "651:3:2",
                "type": ""
              }
            ],
            "src": "601:108:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "760:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "770:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "785:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "792:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "781:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "770:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "752:7:2",
                "type": ""
              }
            ],
            "src": "715:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "892:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "902:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "931:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "913:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "913:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "902:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "874:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "884:7:2",
                "type": ""
              }
            ],
            "src": "847:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1004:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1021:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1044:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1026:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1026:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1014:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1014:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1014:37:2"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "992:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "999:3:2",
                "type": ""
              }
            ],
            "src": "949:108:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1091:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1108:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1111:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1101:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1101:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1101:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1205:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1208:4:2",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1198:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1198:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1198:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1229:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1232:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1222:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1222:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1222:15:2"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1063:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1300:62:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1334:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1336:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1336:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1336:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1323:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1330:1:2",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1320:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1320:12:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1313:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1313:20:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1310:46:2"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Status_$9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1293:5:2",
                "type": ""
              }
            ],
            "src": "1249:113:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1421:74:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1431:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1442:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1431:7:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1483:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Status_$9",
                      "nodeType": "YulIdentifier",
                      "src": "1448:34:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1448:41:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1448:41:2"
                }
              ]
            },
            "name": "cleanup_t_enum$_Status_$9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1403:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1413:7:2",
                "type": ""
              }
            ],
            "src": "1368:127:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:61:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1577:45:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1616:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Status_$9",
                      "nodeType": "YulIdentifier",
                      "src": "1590:25:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1590:32:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1577:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Status_$9_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1547:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1557:9:2",
                "type": ""
              }
            ],
            "src": "1501:127:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1695:72:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1712:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1754:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Status_$9_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1717:36:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1717:43:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1705:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1705:56:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1705:56:2"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Status_$9_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1683:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1690:3:2",
                "type": ""
              }
            ],
            "src": "1634:133:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1907:1662:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1917:28:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1933:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1938:6:2",
                        "type": "",
                        "value": "0x0120"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1929:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1929:16:2"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "1921:4:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1955:162:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1988:43:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2018:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2025:4:2",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2014:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2014:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2008:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2008:23:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "1992:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2078:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2096:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2101:4:2",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2092:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2092:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2044:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2044:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2044:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2127:165:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2163:43:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2193:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2200:4:2",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2189:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2189:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2183:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2183:23:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2167:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2253:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2271:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2276:4:2",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2267:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2267:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2219:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2219:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2219:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2302:178:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2351:43:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2381:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2388:4:2",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2377:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2377:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2371:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2371:23:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2355:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2441:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2459:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2464:4:2",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2455:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2455:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2407:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2407:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2407:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2490:169:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2530:43:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2560:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2567:4:2",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2556:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2556:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2550:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2550:23:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2534:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2620:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2638:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2643:4:2",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2634:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2634:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2586:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2586:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2586:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2669:172:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2712:43:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2742:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2749:4:2",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2738:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2738:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2732:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2732:23:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2716:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2802:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2820:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2825:4:2",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2816:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2816:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2768:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2768:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2768:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2851:166:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2888:43:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2918:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2925:4:2",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2914:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2914:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2908:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2908:23:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2892:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2978:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2996:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3001:4:2",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2992:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2992:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2944:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2944:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2944:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3027:165:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3063:43:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3093:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3100:4:2",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3089:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3089:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3083:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3083:23:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3067:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3153:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3171:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3176:4:2",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3167:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3167:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3119:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3119:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3119:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3202:174:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3247:43:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3277:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3284:4:2",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3273:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3273:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3267:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3267:23:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3251:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3337:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3355:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3360:4:2",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3351:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3351:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3303:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3303:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3303:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3386:176:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3423:45:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3453:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3460:6:2",
                                "type": "",
                                "value": "0x0100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3449:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3449:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3443:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3443:25:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3427:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3521:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3539:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3544:6:2",
                                "type": "",
                                "value": "0x0100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3535:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3535:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_enum$_Status_$9_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3481:39:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3481:71:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3481:71:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Trade_$29_memory_ptr_to_t_struct$_Trade_$29_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1894:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1901:3:2",
                "type": ""
              }
            ],
            "src": "1809:1760:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3697:143:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3783:6:2"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3791:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Trade_$29_memory_ptr_to_t_struct$_Trade_$29_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3707:75:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3707:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3707:88:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3804:30:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3822:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3827:6:2",
                        "type": "",
                        "value": "0x0120"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3818:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3818:16:2"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "3804:10:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_Trade_$29_memory_ptr_to_t_struct$_Trade_$29_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3670:6:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3678:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "3686:10:2",
                "type": ""
              }
            ],
            "src": "3575:265:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3942:38:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3952:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "3964:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3969:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3960:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3960:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "3952:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "3929:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "3937:4:2",
                "type": ""
              }
            ],
            "src": "3846:134:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4192:734:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4202:89:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4285:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4216:68:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4216:75:2"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4206:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4300:114:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4402:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4407:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4307:94:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4307:107:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4300:3:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4423:92:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4509:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4438:70:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4438:77:2"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "4427:7:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4524:21:2",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "4538:7:2"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4528:6:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4614:287:2",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4628:34:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4655:6:2"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4649:5:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4649:13:2"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "4632:13:2",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4675:112:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "4768:13:2"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4783:3:2"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_Trade_$29_memory_ptr_to_t_struct$_Trade_$29_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4682:85:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4682:105:2"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4675:3:2"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4800:91:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4884:6:2"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4810:73:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4810:81:2"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4800:6:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4576:1:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4579:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4573:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4573:13:2"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4587:18:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4589:14:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4598:1:2"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4601:1:2",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4594:3:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4594:9:2"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4589:1:2"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4558:14:2",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4560:10:2",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4569:1:2",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "4564:1:2",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "4554:347:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4910:10:2",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4917:3:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4910:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4171:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4178:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4187:3:2",
                "type": ""
              }
            ],
            "src": "4026:900:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5122:267:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5132:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5144:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5155:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5140:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5140:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5132:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5179:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5190:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5175:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5175:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5198:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5204:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5194:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5194:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5168:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5168:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5168:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5224:158:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5368:6:2"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5377:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5232:135:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5232:150:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5224:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5094:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5106:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5117:4:2",
                "type": ""
              }
            ],
            "src": "4932:457:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5435:35:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5445:19:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5461:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5455:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5455:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5445:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5428:6:2",
                "type": ""
              }
            ],
            "src": "5395:75:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5565:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5582:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5585:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5575:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5575:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5575:12:2"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "5476:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5688:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5705:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5708:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5698:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5698:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5698:12:2"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "5599:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5765:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5822:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5831:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5834:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5824:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5824:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5824:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5788:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5813:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "5795:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5795:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5785:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5785:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5778:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5778:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "5775:63:2"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5758:5:2",
                "type": ""
              }
            ],
            "src": "5722:122:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5902:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5912:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5934:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5921:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5921:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5912:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5977:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5950:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5950:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5950:33:2"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5880:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5888:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5896:5:2",
                "type": ""
              }
            ],
            "src": "5850:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6061:263:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6107:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6109:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6109:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6109:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6082:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6091:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6078:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6078:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6103:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6074:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6074:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "6071:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6200:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6215:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6229:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6219:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6244:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6279:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6290:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6275:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6275:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6299:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6254:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6254:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6244:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6031:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6042:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6054:6:2",
                "type": ""
              }
            ],
            "src": "5995:329:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6413:391:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6459:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6461:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6461:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6461:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6434:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6443:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6430:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6430:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6455:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6426:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6426:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "6423:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6552:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6567:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6581:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6571:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6596:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6631:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6642:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6627:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6627:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6651:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6606:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6606:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6596:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6679:118:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6694:16:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6708:2:2",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6698:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6724:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6759:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6770:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6755:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6755:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6779:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6734:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6734:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6724:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6375:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6386:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6398:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6406:6:2",
                "type": ""
              }
            ],
            "src": "6330:474:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6852:48:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6862:32:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6887:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6880:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6880:13:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6873:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6873:21:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6862:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6834:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6844:7:2",
                "type": ""
              }
            ],
            "src": "6810:90:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6946:76:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7000:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7009:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7012:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7002:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7002:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7002:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6969:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6991:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "6976:14:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6976:21:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6966:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6966:32:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6959:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6959:40:2"
                  },
                  "nodeType": "YulIf",
                  "src": "6956:60:2"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6939:5:2",
                "type": ""
              }
            ],
            "src": "6906:116:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7077:84:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7087:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7109:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7096:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7096:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7087:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7149:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7125:23:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7125:30:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7125:30:2"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7055:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7063:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7071:5:2",
                "type": ""
              }
            ],
            "src": "7028:133:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7247:388:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7293:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7295:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7295:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7295:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7268:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7277:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7264:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7264:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7289:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7260:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7260:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "7257:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7386:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7401:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7415:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7405:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7430:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7465:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7476:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7461:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7461:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7485:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7440:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7440:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7430:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7513:115:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7528:16:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7542:2:2",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7532:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7558:60:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7590:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7601:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7586:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7586:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7610:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "7568:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7568:50:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7558:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7209:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7220:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7232:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7240:6:2",
                "type": ""
              }
            ],
            "src": "7167:468:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7706:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7723:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7746:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7728:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7728:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7716:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7716:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7716:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7694:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7701:3:2",
                "type": ""
              }
            ],
            "src": "7641:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7863:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7873:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7885:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7896:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7881:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7881:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7873:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7953:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7966:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7977:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7962:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7962:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7909:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7909:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7909:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7835:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7847:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7858:4:2",
                "type": ""
              }
            ],
            "src": "7765:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8058:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8075:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8098:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8080:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8080:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8068:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8068:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8068:37:2"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8046:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8053:3:2",
                "type": ""
              }
            ],
            "src": "7993:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8215:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8225:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8237:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8248:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8233:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8233:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8225:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8305:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8318:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8329:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8314:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8314:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8261:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8261:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8261:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8187:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8199:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8210:4:2",
                "type": ""
              }
            ],
            "src": "8117:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8441:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8458:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8463:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8451:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8451:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8451:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8479:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8498:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8503:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8494:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8494:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8479:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8413:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8418:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8429:11:2",
                "type": ""
              }
            ],
            "src": "8345:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8626:197:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8648:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8656:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8644:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8644:14:2"
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8660:34:2",
                        "type": "",
                        "value": "Trade Not Found (Most probably i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8637:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8637:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8637:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8720:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8728:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8716:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8716:15:2"
                      },
                      {
                        "hexValue": "742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8733:34:2",
                        "type": "",
                        "value": "t's no longer opened, check clos"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8709:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8709:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8709:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8789:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8797:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8785:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8785:15:2"
                      },
                      {
                        "hexValue": "6564207472616465732129",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8802:13:2",
                        "type": "",
                        "value": "ed trades!)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8778:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8778:38:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8778:38:2"
                }
              ]
            },
            "name": "store_literal_in_memory_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8618:6:2",
                "type": ""
              }
            ],
            "src": "8520:303:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8975:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8985:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9051:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9056:2:2",
                        "type": "",
                        "value": "75"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8992:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8992:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8985:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9157:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                      "nodeType": "YulIdentifier",
                      "src": "9068:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9068:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9068:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9170:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9181:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9186:2:2",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9177:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9177:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9170:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8963:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8971:3:2",
                "type": ""
              }
            ],
            "src": "8829:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9372:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9382:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9394:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9405:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9390:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9390:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9382:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9429:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9440:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9425:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9425:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9448:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9454:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9444:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9444:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9418:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9418:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9418:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9474:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9608:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9482:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9482:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9474:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9352:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9367:4:2",
                "type": ""
              }
            ],
            "src": "9201:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9654:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9671:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9674:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9664:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9664:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9664:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9768:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9771:4:2",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9761:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9761:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9761:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9792:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9795:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9785:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9785:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9785:15:2"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "9626:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9918:122:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9940:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9948:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9936:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9936:14:2"
                      },
                      {
                        "hexValue": "596f75206172656e277420616c6c6f77656420746f20706572666f726d207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9952:34:2",
                        "type": "",
                        "value": "You aren't allowed to perform th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9929:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9929:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9929:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10008:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10016:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10004:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10004:15:2"
                      },
                      {
                        "hexValue": "697320616374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10021:11:2",
                        "type": "",
                        "value": "is action"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9997:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9997:36:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9997:36:2"
                }
              ]
            },
            "name": "store_literal_in_memory_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9910:6:2",
                "type": ""
              }
            ],
            "src": "9812:228:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10192:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10202:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10268:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10273:2:2",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10209:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10209:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10202:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10374:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                      "nodeType": "YulIdentifier",
                      "src": "10285:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10285:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10285:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10387:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10398:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10403:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10394:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10394:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10387:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10180:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10188:3:2",
                "type": ""
              }
            ],
            "src": "10046:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10589:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10599:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10611:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10622:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10607:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10607:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10599:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10646:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10657:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10642:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10642:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10665:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10671:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10661:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10661:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10635:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10635:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10635:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10691:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10825:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10699:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10699:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10691:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10569:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10584:4:2",
                "type": ""
              }
            ],
            "src": "10418:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10949:278:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10971:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10979:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10967:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10967:14:2"
                      },
                      {
                        "hexValue": "596f752063616e6e6f7420656e642062696464696e6720696620796f75206861",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10983:34:2",
                        "type": "",
                        "value": "You cannot end bidding if you ha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10960:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10960:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10960:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11039:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11047:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11035:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11035:15:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11052:66:2",
                        "type": "",
                        "value": "0x76656e277420726563656976656420616e79206269642e20557365202243616e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11028:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11028:91:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11028:91:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11140:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11148:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11136:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11136:15:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11153:66:2",
                        "type": "",
                        "value": "0x63656c2220696e73746561640000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11129:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11129:91:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11129:91:2"
                }
              ]
            },
            "name": "store_literal_in_memory_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10941:6:2",
                "type": ""
              }
            ],
            "src": "10843:384:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11379:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11389:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11455:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11460:2:2",
                        "type": "",
                        "value": "76"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11396:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11396:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11389:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11561:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988",
                      "nodeType": "YulIdentifier",
                      "src": "11472:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11472:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11472:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11574:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11585:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11590:2:2",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11581:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11581:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11574:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11367:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11375:3:2",
                "type": ""
              }
            ],
            "src": "11233:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11776:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11786:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11798:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11809:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11794:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11794:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11786:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11833:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11844:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11829:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11829:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11852:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11858:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11848:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11848:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11822:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11822:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11822:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11878:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12012:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11886:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11886:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11878:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11756:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11771:4:2",
                "type": ""
              }
            ],
            "src": "11605:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12136:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12158:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12166:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12154:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12154:14:2"
                      },
                      {
                        "hexValue": "5468652062696464696e672068617320616c726561647920656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12170:31:2",
                        "type": "",
                        "value": "The bidding has already ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12147:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12147:55:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12147:55:2"
                }
              ]
            },
            "name": "store_literal_in_memory_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12128:6:2",
                "type": ""
              }
            ],
            "src": "12030:179:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12361:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12371:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12437:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12442:2:2",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12378:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12378:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12371:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12543:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                      "nodeType": "YulIdentifier",
                      "src": "12454:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12454:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12454:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12556:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12567:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12572:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12563:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12563:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12556:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12349:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12357:3:2",
                "type": ""
              }
            ],
            "src": "12215:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12758:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12768:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12780:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12791:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12776:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12776:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12768:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12815:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12826:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12811:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12811:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12834:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12840:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12830:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12830:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12804:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12804:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12804:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12860:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12994:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12868:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12868:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12860:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12738:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12753:4:2",
                "type": ""
              }
            ],
            "src": "12587:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13118:119:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13140:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13148:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13136:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13136:14:2"
                      },
                      {
                        "hexValue": "596f75206d757374207472616e7366657220746865206d6f6e657920696e2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13152:34:2",
                        "type": "",
                        "value": "You must transfer the money in a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13129:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13129:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13129:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13208:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13216:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13204:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13204:15:2"
                      },
                      {
                        "hexValue": "6476616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13221:8:2",
                        "type": "",
                        "value": "dvance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13197:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13197:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13197:33:2"
                }
              ]
            },
            "name": "store_literal_in_memory_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13110:6:2",
                "type": ""
              }
            ],
            "src": "13012:225:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13389:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13399:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13465:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13470:2:2",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13406:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13406:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13399:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13571:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27",
                      "nodeType": "YulIdentifier",
                      "src": "13482:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13482:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13482:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13584:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13595:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13600:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13591:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13591:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13584:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13377:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13385:3:2",
                "type": ""
              }
            ],
            "src": "13243:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13786:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13796:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13808:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13819:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13804:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13804:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13796:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13843:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13854:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13839:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13839:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13862:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13868:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13858:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13858:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13832:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13832:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13832:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13888:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14022:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13896:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13896:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13888:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13766:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13781:4:2",
                "type": ""
              }
            ],
            "src": "13615:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14091:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14101:34:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14126:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14129:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "14122:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14122:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "14101:8:2"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_0_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14072:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "14082:8:2",
                "type": ""
              }
            ],
            "src": "14040:102:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14206:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14216:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "14227:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14216:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_from_storage_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14188:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14198:7:2",
                "type": ""
              }
            ],
            "src": "14148:90:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14319:91:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14329:75:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulIdentifier",
                            "src": "14392:10:2"
                          }
                        ],
                        "functionName": {
                          "name": "shift_right_0_unsigned",
                          "nodeType": "YulIdentifier",
                          "src": "14369:22:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14369:34:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_from_storage_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14338:30:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14338:66:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "14329:5:2"
                    }
                  ]
                }
              ]
            },
            "name": "extract_from_storage_value_offset_0t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot_value",
                "nodeType": "YulTypedName",
                "src": "14298:10:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14313:5:2",
                "type": ""
              }
            ],
            "src": "14244:166:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14474:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14484:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14499:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14506:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14495:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14495:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14484:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_from_storage_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14456:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14466:7:2",
                "type": ""
              }
            ],
            "src": "14416:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14636:91:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14646:75:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulIdentifier",
                            "src": "14709:10:2"
                          }
                        ],
                        "functionName": {
                          "name": "shift_right_0_unsigned",
                          "nodeType": "YulIdentifier",
                          "src": "14686:22:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14686:34:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_from_storage_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "14655:30:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14655:66:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "14646:5:2"
                    }
                  ]
                }
              ]
            },
            "name": "extract_from_storage_value_offset_0t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot_value",
                "nodeType": "YulTypedName",
                "src": "14615:10:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14630:5:2",
                "type": ""
              }
            ],
            "src": "14561:166:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14799:43:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14809:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14824:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14831:4:2",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14820:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14820:16:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14809:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_from_storage_t_enum$_Status_$9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14781:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14791:7:2",
                "type": ""
              }
            ],
            "src": "14733:109:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14931:99:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14941:83:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "slot_value",
                            "nodeType": "YulIdentifier",
                            "src": "15012:10:2"
                          }
                        ],
                        "functionName": {
                          "name": "shift_right_0_unsigned",
                          "nodeType": "YulIdentifier",
                          "src": "14989:22:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14989:34:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_from_storage_t_enum$_Status_$9",
                      "nodeType": "YulIdentifier",
                      "src": "14950:38:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14950:74:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "14941:5:2"
                    }
                  ]
                }
              ]
            },
            "name": "extract_from_storage_value_offset_0t_enum$_Status_$9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot_value",
                "nodeType": "YulTypedName",
                "src": "14910:10:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14925:5:2",
                "type": ""
              }
            ],
            "src": "14848:182:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15181:2415:2",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15191:28:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15207:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15212:6:2",
                        "type": "",
                        "value": "0x0120"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15203:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15203:16:2"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "15195:4:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15228:18:2",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15245:1:2",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "15232:9:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "15256:242:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "15288:36:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15311:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15318:4:2",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15307:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15307:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "15301:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15301:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulIdentifier",
                          "src": "15288:9:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15337:75:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "15402:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "extract_from_storage_value_offset_0t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "15357:44:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15357:55:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "15341:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "15459:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15477:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15482:4:2",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15473:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15473:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "15425:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15425:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15425:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "15508:245:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "15543:36:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15566:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15573:4:2",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15562:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15562:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "15556:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15556:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulIdentifier",
                          "src": "15543:9:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15592:75:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "15657:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "extract_from_storage_value_offset_0t_address",
                          "nodeType": "YulIdentifier",
                          "src": "15612:44:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15612:55:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "15596:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "15714:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15732:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15737:4:2",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15728:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15728:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "15680:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15680:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15680:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "15763:258:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "15811:36:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15834:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15841:4:2",
                                "type": "",
                                "value": "0x02"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15830:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15830:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "15824:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15824:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulIdentifier",
                          "src": "15811:9:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15860:75:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "15925:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "extract_from_storage_value_offset_0t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "15880:44:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15880:55:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "15864:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "15982:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16000:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16005:4:2",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15996:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15996:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "15948:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15948:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15948:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16031:249:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "16070:36:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16093:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16100:4:2",
                                "type": "",
                                "value": "0x03"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16089:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16089:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "16083:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16083:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulIdentifier",
                          "src": "16070:9:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16119:75:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "16184:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "extract_from_storage_value_offset_0t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16139:44:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16139:55:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16123:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "16241:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16259:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16264:4:2",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16255:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16255:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16207:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16207:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16207:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16290:252:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "16332:36:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16355:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16362:4:2",
                                "type": "",
                                "value": "0x04"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16351:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16351:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "16345:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16345:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulIdentifier",
                          "src": "16332:9:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16381:75:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "16446:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "extract_from_storage_value_offset_0t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16401:44:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16401:55:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16385:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "16503:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16521:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16526:4:2",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16517:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16517:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16469:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16469:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16469:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16552:246:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "16588:36:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16611:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16618:4:2",
                                "type": "",
                                "value": "0x05"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16607:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16607:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "16601:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16601:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulIdentifier",
                          "src": "16588:9:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16637:75:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "16702:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "extract_from_storage_value_offset_0t_address",
                          "nodeType": "YulIdentifier",
                          "src": "16657:44:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16657:55:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16641:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "16759:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16777:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16782:4:2",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16773:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16773:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "16725:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16725:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16725:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16808:245:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "16843:36:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16866:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16873:4:2",
                                "type": "",
                                "value": "0x06"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16862:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16862:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "16856:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16856:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulIdentifier",
                          "src": "16843:9:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16892:75:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "16957:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "extract_from_storage_value_offset_0t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16912:44:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16912:55:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "16896:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "17014:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17032:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17037:4:2",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17028:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17028:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16980:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16980:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16980:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "17063:254:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "17107:36:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17130:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17137:4:2",
                                "type": "",
                                "value": "0x07"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17126:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17126:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "17120:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17120:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulIdentifier",
                          "src": "17107:9:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "17156:75:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "17221:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "extract_from_storage_value_offset_0t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "17176:44:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17176:55:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "17160:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "17278:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17296:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17301:4:2",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17292:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17292:14:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "17244:33:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17244:63:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17244:63:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "17327:262:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "17363:36:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17386:5:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17393:4:2",
                                "type": "",
                                "value": "0x08"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17382:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17382:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "17376:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17376:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "slotValue",
                          "nodeType": "YulIdentifier",
                          "src": "17363:9:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "17412:83:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "17485:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "extract_from_storage_value_offset_0t_enum$_Status_$9",
                          "nodeType": "YulIdentifier",
                          "src": "17432:52:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17432:63:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "17416:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "17548:12:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17566:3:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17571:6:2",
                                "type": "",
                                "value": "0x0100"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17562:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17562:16:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_enum$_Status_$9_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "17508:39:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17508:71:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "17508:71:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Trade_$29_storage_ptr_to_t_struct$_Trade_$29_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15168:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15175:3:2",
                "type": ""
              }
            ],
            "src": "15072:2524:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17743:168:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17753:27:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17765:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17776:3:2",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17761:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17761:19:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17753:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17877:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17890:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17901:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17886:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17886:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Trade_$29_storage_ptr_to_t_struct$_Trade_$29_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17790:86:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17790:114:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17790:114:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Trade_$29_storage_ptr__to_t_struct$_Trade_$29_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17715:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17727:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17738:4:2",
                "type": ""
              }
            ],
            "src": "17602:309:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18023:71:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18045:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18053:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18041:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18041:14:2"
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18057:29:2",
                        "type": "",
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18034:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18034:53:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18034:53:2"
                }
              ]
            },
            "name": "store_literal_in_memory_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18015:6:2",
                "type": ""
              }
            ],
            "src": "17917:177:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18246:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18256:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18322:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18327:2:2",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18263:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18263:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18256:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18428:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                      "nodeType": "YulIdentifier",
                      "src": "18339:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18339:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18339:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18441:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18452:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18457:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18448:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18448:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18441:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18234:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18242:3:2",
                "type": ""
              }
            ],
            "src": "18100:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18643:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18653:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18665:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18676:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18661:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18661:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18653:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18700:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18711:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18696:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18696:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18719:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18725:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18715:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18715:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18689:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18689:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18689:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18745:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18879:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18753:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18753:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18745:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18623:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18638:4:2",
                "type": ""
              }
            ],
            "src": "18472:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18925:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18942:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18945:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18935:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18935:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18935:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19039:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19042:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19032:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19032:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19032:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19063:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19066:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19056:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19056:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19056:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "18897:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19127:261:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19137:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19160:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19142:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19142:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "19137:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19171:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19194:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19176:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19176:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "19171:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19334:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19336:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19336:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19336:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19255:1:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19262:66:2",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "19330:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19258:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19258:74:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19252:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19252:81:2"
                  },
                  "nodeType": "YulIf",
                  "src": "19249:107:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19366:16:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19377:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19380:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19373:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19373:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "19366:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19114:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19117:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "19123:3:2",
                "type": ""
              }
            ],
            "src": "19083:305:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19500:335:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19522:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19530:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19518:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19518:14:2"
                      },
                      {
                        "hexValue": "596f752063616e20776974686472617720796f757220626964204f4e4c592069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19534:34:2",
                        "type": "",
                        "value": "You can withdraw your bid ONLY i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19511:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19511:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19511:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19590:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19598:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19586:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19586:15:2"
                      },
                      {
                        "hexValue": "66207468652063726561746f72206f66207468697320747261646520646f6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19603:34:2",
                        "type": "",
                        "value": "f the creator of this trade does"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19579:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19579:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19579:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19659:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19667:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19655:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19655:15:2"
                      },
                      {
                        "hexValue": "6e277420656e642062696464696e672077697468696e2031206d696e75746520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19672:34:2",
                        "type": "",
                        "value": "n't end bidding within 1 minute "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19648:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19648:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19648:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19728:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19736:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19724:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19724:15:2"
                      },
                      {
                        "hexValue": "66726f6d207468652074696d6520796f75207375636365737366756c6c792070",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19741:34:2",
                        "type": "",
                        "value": "from the time you successfully p"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19717:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19717:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19717:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19797:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19805:3:2",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19793:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19793:16:2"
                      },
                      {
                        "hexValue": "6c6163656420796f757220626964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19811:16:2",
                        "type": "",
                        "value": "laced your bid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19786:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19786:42:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19786:42:2"
                }
              ]
            },
            "name": "store_literal_in_memory_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19492:6:2",
                "type": ""
              }
            ],
            "src": "19394:441:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19987:222:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19997:75:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20063:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20068:3:2",
                        "type": "",
                        "value": "142"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20004:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20004:68:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "19997:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20170:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde",
                      "nodeType": "YulIdentifier",
                      "src": "20081:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20081:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20081:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20183:20:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20194:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20199:3:2",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20190:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20190:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20183:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19975:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19983:3:2",
                "type": ""
              }
            ],
            "src": "19841:368:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20386:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20396:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20408:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20419:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20404:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20404:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20396:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20443:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20454:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20439:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20439:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20462:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20468:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20458:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20458:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20432:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20432:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20432:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20488:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20622:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20496:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20496:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20488:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20366:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20381:4:2",
                "type": ""
              }
            ],
            "src": "20215:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20746:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20768:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20776:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20764:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20764:14:2"
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20780:34:2",
                        "type": "",
                        "value": "You're not allowed to perform th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20757:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20757:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20757:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20836:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20844:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20832:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20832:15:2"
                      },
                      {
                        "hexValue": "697320616374696f6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20849:12:2",
                        "type": "",
                        "value": "is action!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20825:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20825:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20825:37:2"
                }
              ]
            },
            "name": "store_literal_in_memory_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20738:6:2",
                "type": ""
              }
            ],
            "src": "20640:229:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21021:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21031:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21097:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21102:2:2",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21038:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21038:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21031:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21203:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                      "nodeType": "YulIdentifier",
                      "src": "21114:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21114:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21114:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21216:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21227:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21232:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21223:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21223:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21216:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21009:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21017:3:2",
                "type": ""
              }
            ],
            "src": "20875:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21418:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21428:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21440:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21451:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21436:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21436:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21428:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21475:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21486:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21471:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21471:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21494:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21500:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21490:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21490:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21464:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21464:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21464:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21520:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21654:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21528:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21528:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21520:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21398:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21413:4:2",
                "type": ""
              }
            ],
            "src": "21247:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21778:191:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21800:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21808:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21796:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21796:14:2"
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21812:34:2",
                        "type": "",
                        "value": "The current status of the trade "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21789:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21789:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21789:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21868:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21876:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21864:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21864:15:2"
                      },
                      {
                        "hexValue": "646f65736e2774207065726d697420796f7520746f20706572666f726d207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21881:34:2",
                        "type": "",
                        "value": "doesn't permit you to perform th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21857:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21857:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21857:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21937:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21945:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21933:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21933:15:2"
                      },
                      {
                        "hexValue": "697320616374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21950:11:2",
                        "type": "",
                        "value": "is action"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21926:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21926:36:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21926:36:2"
                }
              ]
            },
            "name": "store_literal_in_memory_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "21770:6:2",
                "type": ""
              }
            ],
            "src": "21672:297:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22121:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22131:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22197:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22202:2:2",
                        "type": "",
                        "value": "73"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22138:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22138:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22131:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22303:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                      "nodeType": "YulIdentifier",
                      "src": "22214:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22214:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22214:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22316:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22327:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22332:2:2",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22323:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22323:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22316:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22109:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22117:3:2",
                "type": ""
              }
            ],
            "src": "21975:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22518:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22528:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22540:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22551:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22536:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22536:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22528:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22575:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22586:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22571:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22571:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "22594:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22600:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22590:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22590:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22564:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22564:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22564:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22620:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "22754:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22628:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22628:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22620:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22498:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22513:4:2",
                "type": ""
              }
            ],
            "src": "22347:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22820:300:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22830:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22853:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22835:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22835:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "22830:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22864:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22887:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "22869:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22869:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "22864:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23062:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "23064:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23064:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23064:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "22974:1:2"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "22967:6:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22967:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "22960:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22960:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "22982:1:2"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22989:66:2",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "23057:1:2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "22985:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22985:74:2"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "22979:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22979:81:2"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "22956:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22956:105:2"
                  },
                  "nodeType": "YulIf",
                  "src": "22953:131:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23094:20:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23109:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23112:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "23105:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23105:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "23094:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22803:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22806:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "22812:7:2",
                "type": ""
              }
            ],
            "src": "22772:348:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23232:471:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23254:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23262:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23250:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23250:14:2"
                      },
                      {
                        "hexValue": "596f752063616e20636c61696d20796f7572206d6f6e6579206261636b206f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23266:34:2",
                        "type": "",
                        "value": "You can claim your money back on"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23243:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23243:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23243:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23322:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23330:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23318:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23318:15:2"
                      },
                      {
                        "hexValue": "6c792069662074686520627579657220646f65736e277420636f6e6669726d20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23335:34:2",
                        "type": "",
                        "value": "ly if the buyer doesn't confirm "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23311:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23311:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23311:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23391:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23399:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23387:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23387:15:2"
                      },
                      {
                        "hexValue": "73756363657373206e6f72206d61726b20746865207472616465206173206120",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23404:34:2",
                        "type": "",
                        "value": "success nor mark the trade as a "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23380:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23380:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23380:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23460:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23468:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23456:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23456:15:2"
                      },
                      {
                        "hexValue": "6661696c6564206f6e652077697468696e20746865206e756d626572206f6620",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23473:34:2",
                        "type": "",
                        "value": "failed one within the number of "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23449:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23449:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23449:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23529:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23537:3:2",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23525:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23525:16:2"
                      },
                      {
                        "hexValue": "6d696e757465732073706563696669656420696e207468652074726164652073",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23543:34:2",
                        "type": "",
                        "value": "minutes specified in the trade s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23518:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23518:60:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23518:60:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23599:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23607:3:2",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23595:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23595:16:2"
                      },
                      {
                        "hexValue": "74617274696e672066726f6d207468652074696d6520686520656e6465642074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23613:34:2",
                        "type": "",
                        "value": "tarting from the time he ended t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23588:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23588:60:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23588:60:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23669:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23677:3:2",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23665:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23665:16:2"
                      },
                      {
                        "hexValue": "68652062696464696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23683:12:2",
                        "type": "",
                        "value": "he bidding"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23658:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23658:38:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23658:38:2"
                }
              ]
            },
            "name": "store_literal_in_memory_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "23224:6:2",
                "type": ""
              }
            ],
            "src": "23126:577:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23855:222:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23865:75:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23931:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23936:3:2",
                        "type": "",
                        "value": "202"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23872:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23872:68:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "23865:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24038:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0",
                      "nodeType": "YulIdentifier",
                      "src": "23949:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23949:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23949:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24051:20:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24062:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24067:3:2",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24058:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24058:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "24051:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23843:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "23851:3:2",
                "type": ""
              }
            ],
            "src": "23709:368:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24254:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24264:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24276:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24287:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24272:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24272:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24264:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24311:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24322:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24307:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24307:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "24330:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24336:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24326:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24326:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24300:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24300:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24300:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24356:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "24490:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24364:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24364:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24356:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24234:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24249:4:2",
                "type": ""
              }
            ],
            "src": "24083:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24614:124:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24636:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24644:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24632:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24632:14:2"
                      },
                      {
                        "hexValue": "596f752063616e277420626964206f6e206120747261646520796f7520686176",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24648:34:2",
                        "type": "",
                        "value": "You can't bid on a trade you hav"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24625:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24625:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24625:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24704:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24712:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24700:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24700:15:2"
                      },
                      {
                        "hexValue": "6520637265617465642121",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24717:13:2",
                        "type": "",
                        "value": "e created!!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24693:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24693:38:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24693:38:2"
                }
              ]
            },
            "name": "store_literal_in_memory_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "24606:6:2",
                "type": ""
              }
            ],
            "src": "24508:230:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24890:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24900:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24966:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24971:2:2",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24907:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24907:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "24900:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25072:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a",
                      "nodeType": "YulIdentifier",
                      "src": "24983:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24983:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24983:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25085:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25096:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25101:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25092:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25092:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "25085:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "24878:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "24886:3:2",
                "type": ""
              }
            ],
            "src": "24744:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25287:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25297:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25309:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25320:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25305:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25305:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25297:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25344:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25355:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25340:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25340:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25363:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25369:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25359:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25359:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25333:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25333:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25333:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25389:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25523:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25397:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25397:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25389:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25267:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25282:4:2",
                "type": ""
              }
            ],
            "src": "25116:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25647:119:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25669:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25677:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25665:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25665:14:2"
                      },
                      {
                        "hexValue": "546865726520697320616c72656164792061206c6f776572206f722065717561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25681:34:2",
                        "type": "",
                        "value": "There is already a lower or equa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25658:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25658:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25658:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25737:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25745:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25733:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25733:15:2"
                      },
                      {
                        "hexValue": "6c2062696421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25750:8:2",
                        "type": "",
                        "value": "l bid!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25726:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25726:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25726:33:2"
                }
              ]
            },
            "name": "store_literal_in_memory_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "25639:6:2",
                "type": ""
              }
            ],
            "src": "25541:225:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25918:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25928:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25994:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25999:2:2",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25935:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25935:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "25928:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26100:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7",
                      "nodeType": "YulIdentifier",
                      "src": "26011:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26011:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26011:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26113:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26124:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26129:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26120:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26120:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "26113:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25906:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25914:3:2",
                "type": ""
              }
            ],
            "src": "25772:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26315:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26325:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26337:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26348:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26333:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26333:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26325:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26372:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26383:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26368:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26368:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26391:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26397:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26387:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26387:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26361:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26361:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26361:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26417:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "26551:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26425:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26425:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26417:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26295:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26310:4:2",
                "type": ""
              }
            ],
            "src": "26144:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26675:125:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26697:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26705:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26693:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26693:14:2"
                      },
                      {
                        "hexValue": "596f75206d7573742073656e6420612076616c7565206f6620302e3120455448",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26709:34:2",
                        "type": "",
                        "value": "You must send a value of 0.1 ETH"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26686:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26686:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26686:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26765:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26773:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26761:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26761:15:2"
                      },
                      {
                        "hexValue": "206173206465706f73697421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26778:14:2",
                        "type": "",
                        "value": " as deposit!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26754:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26754:39:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26754:39:2"
                }
              ]
            },
            "name": "store_literal_in_memory_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26667:6:2",
                "type": ""
              }
            ],
            "src": "26569:231:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26952:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26962:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27028:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27033:2:2",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26969:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26969:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "26962:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27134:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3",
                      "nodeType": "YulIdentifier",
                      "src": "27045:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27045:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27045:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27147:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27158:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27163:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27154:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27154:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "27147:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "26940:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "26948:3:2",
                "type": ""
              }
            ],
            "src": "26806:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27349:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27359:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27371:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27382:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27367:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27367:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27359:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27406:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27417:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27402:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27402:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "27425:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27431:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27421:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27421:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27395:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27395:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27395:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27451:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27585:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27459:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27459:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27451:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27329:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27344:4:2",
                "type": ""
              }
            ],
            "src": "27178:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27709:126:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27731:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27739:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27727:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27727:14:2"
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e20697320616c6c6f77656420746f20706572666f726d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27743:34:2",
                        "type": "",
                        "value": "Only admin is allowed to perform"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27720:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27720:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27720:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27799:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27807:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27795:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27795:15:2"
                      },
                      {
                        "hexValue": "207468697320616374696f6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27812:15:2",
                        "type": "",
                        "value": " this action!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27788:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27788:40:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27788:40:2"
                }
              ]
            },
            "name": "store_literal_in_memory_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27701:6:2",
                "type": ""
              }
            ],
            "src": "27603:232:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27987:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27997:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28063:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28068:2:2",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28004:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28004:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "27997:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28169:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef",
                      "nodeType": "YulIdentifier",
                      "src": "28080:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28080:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28080:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28182:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28193:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28198:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28189:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28189:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "28182:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "27975:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "27983:3:2",
                "type": ""
              }
            ],
            "src": "27841:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28384:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28394:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28406:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28417:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28402:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28402:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28394:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28441:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28452:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28437:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28437:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28460:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28466:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28456:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28456:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28430:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28430:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28430:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28486:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "28620:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28494:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28494:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28486:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28364:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28379:4:2",
                "type": ""
              }
            ],
            "src": "28213:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28744:322:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28766:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28774:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28762:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28762:14:2"
                      },
                      {
                        "hexValue": "596f752063616e2774206d61726b2061207472616465206173204641494c4544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28778:34:2",
                        "type": "",
                        "value": "You can't mark a trade as FAILED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28755:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28755:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28755:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28834:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28842:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28830:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28830:15:2"
                      },
                      {
                        "hexValue": "206265666f726520746865206e756d626572206f66206d696e75746573207370",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28847:34:2",
                        "type": "",
                        "value": " before the number of minutes sp"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28823:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28823:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28823:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28903:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28911:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28899:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28899:15:2"
                      },
                      {
                        "hexValue": "6563696669656420696e20746865207472616465207374617274696e67206672",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28916:34:2",
                        "type": "",
                        "value": "ecified in the trade starting fr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28892:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28892:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28892:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28972:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28980:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28968:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28968:15:2"
                      },
                      {
                        "hexValue": "6f6d207468652074696d6520796f7520656e646564207468652062696464696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28985:34:2",
                        "type": "",
                        "value": "om the time you ended the biddin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28961:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28961:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28961:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "29041:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29049:3:2",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29037:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29037:16:2"
                      },
                      {
                        "hexValue": "67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29055:3:2",
                        "type": "",
                        "value": "g"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29030:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29030:29:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29030:29:2"
                }
              ]
            },
            "name": "store_literal_in_memory_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "28736:6:2",
                "type": ""
              }
            ],
            "src": "28638:428:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29218:222:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29228:75:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29294:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29299:3:2",
                        "type": "",
                        "value": "129"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29235:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29235:68:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "29228:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29401:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629",
                      "nodeType": "YulIdentifier",
                      "src": "29312:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29312:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29312:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29414:20:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29425:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29430:3:2",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29421:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29421:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "29414:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "29206:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "29214:3:2",
                "type": ""
              }
            ],
            "src": "29072:368:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29617:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29627:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29639:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29650:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29635:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29635:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29627:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29674:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29685:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29670:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29670:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "29693:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29699:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29689:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29689:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29663:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29663:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29663:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29719:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "29853:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29727:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29727:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29719:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29597:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29612:4:2",
                "type": ""
              }
            ],
            "src": "29446:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29914:190:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29924:33:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "29951:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "29933:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29933:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "29924:5:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "30047:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "30049:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "30049:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "30049:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "29972:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29979:66:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "29969:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29969:77:2"
                  },
                  "nodeType": "YulIf",
                  "src": "29966:103:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30078:20:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "30089:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30096:1:2",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30085:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30085:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "30078:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "29900:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "29910:3:2",
                "type": ""
              }
            ],
            "src": "29871:233:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30216:348:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "30238:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30246:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30234:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30234:14:2"
                      },
                      {
                        "hexValue": "596f752063616e20636c61696d20796f7572206d6f6e6579206261636b206f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30250:34:2",
                        "type": "",
                        "value": "You can claim your money back on"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30227:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30227:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30227:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "30306:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30314:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30302:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30302:15:2"
                      },
                      {
                        "hexValue": "6c79206966207468652073656c6c657220646f65736e277420636f6e6669726d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30319:34:2",
                        "type": "",
                        "value": "ly if the seller doesn't confirm"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30295:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30295:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30295:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "30375:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30383:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30371:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30371:15:2"
                      },
                      {
                        "hexValue": "206661696c757265206e6f7220726571756573742061646d696e277320696e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30388:34:2",
                        "type": "",
                        "value": " failure nor request admin's int"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30364:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30364:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30364:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "30444:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30452:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30440:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30440:15:2"
                      },
                      {
                        "hexValue": "657276656e74696f6e2077697468696e2033206d696e757465732066726f6d20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30457:34:2",
                        "type": "",
                        "value": "ervention within 3 minutes from "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30433:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30433:59:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30433:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "30513:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30521:3:2",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30509:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30509:16:2"
                      },
                      {
                        "hexValue": "7468652074696d6520686520776f6e207468652062696464696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30527:29:2",
                        "type": "",
                        "value": "the time he won the bidding"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30502:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30502:55:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30502:55:2"
                }
              ]
            },
            "name": "store_literal_in_memory_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "30208:6:2",
                "type": ""
              }
            ],
            "src": "30110:454:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30716:222:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "30726:75:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "30792:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30797:3:2",
                        "type": "",
                        "value": "155"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "30733:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30733:68:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "30726:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "30899:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf",
                      "nodeType": "YulIdentifier",
                      "src": "30810:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30810:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30810:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30912:20:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "30923:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30928:3:2",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30919:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30919:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "30912:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "30704:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "30712:3:2",
                "type": ""
              }
            ],
            "src": "30570:368:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31115:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31125:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31137:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31148:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31133:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31133:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31125:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31172:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31183:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31168:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31168:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "31191:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31197:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "31187:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31187:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31161:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31161:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31161:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31217:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "31351:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "31225:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31225:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31217:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31095:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "31110:4:2",
                "type": ""
              }
            ],
            "src": "30944:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31414:146:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "31424:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "31447:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "31429:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31429:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "31424:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31458:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "31481:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "31463:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31463:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "31458:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "31505:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "31507:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "31507:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "31507:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "31499:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "31502:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "31496:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31496:8:2"
                  },
                  "nodeType": "YulIf",
                  "src": "31493:34:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31537:17:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "31549:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "31552:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "31545:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31545:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "31537:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "31400:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "31403:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "31409:4:2",
                "type": ""
              }
            ],
            "src": "31369:191:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31594:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31611:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31614:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31604:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31604:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31604:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31708:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31711:4:2",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31701:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31701:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31701:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31732:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31735:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "31725:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31725:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31725:15:2"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "31566:180:2"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$9(value) {\n        if iszero(lt(value, 7)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$9(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$9(value)\n    }\n\n    function convert_t_enum$_Status_$9_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$9(value)\n    }\n\n    function abi_encode_t_enum$_Status_$9_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$9_to_t_uint8(value))\n    }\n\n    // struct Trade -> struct Trade\n    function abi_encode_t_struct$_Trade_$29_memory_ptr_to_t_struct$_Trade_$29_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // buyer\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amountEnergyNeeded\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // numOfMins\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // sellingPrice\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // bidAt\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // biddingEndedAt\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // status\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_enum$_Status_$9_to_t_uint8(memberValue0, add(pos, 0x0100))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Trade_$29_memory_ptr_to_t_struct$_Trade_$29_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Trade_$29_memory_ptr_to_t_struct$_Trade_$29_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x0120)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Trade[] -> struct Trade[]\n    function abi_encode_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Trade_$29_memory_ptr_to_t_struct$_Trade_$29_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trade Not Found (Most probably i\")\n\n            mstore(add(memPtr, 32), \"t's no longer opened, check clos\")\n\n        mstore(add(memPtr, 64), \"ed trades!)\")\n\n    }\n\n    function abi_encode_t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 75)\n        store_literal_in_memory_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e(memPtr) {\n\n        mstore(add(memPtr, 0), \"You aren't allowed to perform th\")\n\n        mstore(add(memPtr, 32), \"is action\")\n\n    }\n\n    function abi_encode_t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988(memPtr) {\n\n        mstore(add(memPtr, 0), \"You cannot end bidding if you ha\")\n\n        mstore(add(memPtr, 32), 0x76656e277420726563656976656420616e79206269642e20557365202243616e)\n\n        mstore(add(memPtr, 64), 0x63656c2220696e73746561640000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 76)\n        store_literal_in_memory_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46(memPtr) {\n\n        mstore(add(memPtr, 0), \"The bidding has already ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must transfer the money in a\")\n\n        mstore(add(memPtr, 32), \"dvance\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function cleanup_from_storage_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_from_storage_value_offset_0t_uint256(slot_value) -> value {\n        value := cleanup_from_storage_t_uint256(shift_right_0_unsigned(slot_value))\n    }\n\n    function cleanup_from_storage_t_address(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function extract_from_storage_value_offset_0t_address(slot_value) -> value {\n        value := cleanup_from_storage_t_address(shift_right_0_unsigned(slot_value))\n    }\n\n    function cleanup_from_storage_t_enum$_Status_$9(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function extract_from_storage_value_offset_0t_enum$_Status_$9(slot_value) -> value {\n        value := cleanup_from_storage_t_enum$_Status_$9(shift_right_0_unsigned(slot_value))\n    }\n\n    // struct Trade -> struct Trade\n    function abi_encode_t_struct$_Trade_$29_storage_ptr_to_t_struct$_Trade_$29_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n        let slotValue := 0\n\n        {\n            // id\n            slotValue := sload(add(value, 0x00))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // buyer\n            slotValue := sload(add(value, 0x01))\n            let memberValue0 := extract_from_storage_value_offset_0t_address(slotValue)\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amountEnergyNeeded\n            slotValue := sload(add(value, 0x02))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // numOfMins\n            slotValue := sload(add(value, 0x03))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // sellingPrice\n            slotValue := sload(add(value, 0x04))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // seller\n            slotValue := sload(add(value, 0x05))\n            let memberValue0 := extract_from_storage_value_offset_0t_address(slotValue)\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // bidAt\n            slotValue := sload(add(value, 0x06))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // biddingEndedAt\n            slotValue := sload(add(value, 0x07))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint256(slotValue)\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // status\n            slotValue := sload(add(value, 0x08))\n            let memberValue0 := extract_from_storage_value_offset_0t_enum$_Status_$9(slotValue)\n            abi_encode_t_enum$_Status_$9_to_t_uint8(memberValue0, add(pos, 0x0100))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Trade_$29_storage_ptr__to_t_struct$_Trade_$29_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_struct$_Trade_$29_storage_ptr_to_t_struct$_Trade_$29_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: Transation reverted.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can withdraw your bid ONLY i\")\n\n        mstore(add(memPtr, 32), \"f the creator of this trade does\")\n\n        mstore(add(memPtr, 64), \"n't end bidding within 1 minute \")\n\n        mstore(add(memPtr, 96), \"from the time you successfully p\")\n\n        mstore(add(memPtr, 128), \"laced your bid\")\n\n    }\n\n    function abi_encode_t_stringliteral_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 142)\n        store_literal_in_memory_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde(pos)\n        end := add(pos, 160)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"You're not allowed to perform th\")\n\n        mstore(add(memPtr, 32), \"is action!\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d(memPtr) {\n\n        mstore(add(memPtr, 0), \"The current status of the trade \")\n\n        mstore(add(memPtr, 32), \"doesn't permit you to perform th\")\n\n        mstore(add(memPtr, 64), \"is action\")\n\n    }\n\n    function abi_encode_t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 73)\n        store_literal_in_memory_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can claim your money back on\")\n\n        mstore(add(memPtr, 32), \"ly if the buyer doesn't confirm \")\n\n        mstore(add(memPtr, 64), \"success nor mark the trade as a \")\n\n        mstore(add(memPtr, 96), \"failed one within the number of \")\n\n        mstore(add(memPtr, 128), \"minutes specified in the trade s\")\n\n        mstore(add(memPtr, 160), \"tarting from the time he ended t\")\n\n        mstore(add(memPtr, 192), \"he bidding\")\n\n    }\n\n    function abi_encode_t_stringliteral_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 202)\n        store_literal_in_memory_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0(pos)\n        end := add(pos, 224)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't bid on a trade you hav\")\n\n        mstore(add(memPtr, 32), \"e created!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7(memPtr) {\n\n        mstore(add(memPtr, 0), \"There is already a lower or equa\")\n\n        mstore(add(memPtr, 32), \"l bid!\")\n\n    }\n\n    function abi_encode_t_stringliteral_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must send a value of 0.1 ETH\")\n\n        mstore(add(memPtr, 32), \" as deposit!\")\n\n    }\n\n    function abi_encode_t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin is allowed to perform\")\n\n        mstore(add(memPtr, 32), \" this action!\")\n\n    }\n\n    function abi_encode_t_stringliteral_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't mark a trade as FAILED\")\n\n        mstore(add(memPtr, 32), \" before the number of minutes sp\")\n\n        mstore(add(memPtr, 64), \"ecified in the trade starting fr\")\n\n        mstore(add(memPtr, 96), \"om the time you ended the biddin\")\n\n        mstore(add(memPtr, 128), \"g\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 129)\n        store_literal_in_memory_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629(pos)\n        end := add(pos, 160)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can claim your money back on\")\n\n        mstore(add(memPtr, 32), \"ly if the seller doesn't confirm\")\n\n        mstore(add(memPtr, 64), \" failure nor request admin's int\")\n\n        mstore(add(memPtr, 96), \"ervention within 3 minutes from \")\n\n        mstore(add(memPtr, 128), \"the time he won the bidding\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 155)\n        store_literal_in_memory_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf(pos)\n        end := add(pos, 160)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "410:13864:0:-:0;;;465:37;;;;;;;;;;489:10;481:5;;:18;;;;;;;;;;;;;;;;;;410:13864;;;;;;",
  "deployedSourceMap": "410:13864:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14178:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4408:1057;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1293:1026;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3334:1068;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10624:1664;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8981:1039;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2325:1003;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12294:1331;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6490:1080;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14080:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;754:533;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7576:1399;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10026:592;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5471:1013;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;439:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14178:94;14232:14;14257:12;14250:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14178:94;:::o;4408:1057::-;4465:15;4483:14;4493:3;4483:9;:14::i;:::-;4465:32;;4528:12;:19;;;;4515:10;:32;4507:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;4637:27;4667:12;4680:10;4667:24;;;;;;;;:::i;:::-;;;;;;;;;;;;4637:54;;4723:13;:19;;;;;;;;;;;;4709:33;;:10;:33;;;4701:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4838:1;4806:34;;:13;:20;;;;;;;;;;;;:34;;;4798:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;4965:14;4941:38;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:38;;;;;;;;:::i;:::-;;;4933:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5044:13;:26;;;5031:9;:39;5023:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;5153:9;5124:13;:26;;:38;;;;5203:15;5172:13;:28;;:46;;;;5251:33;5228:13;:20;;;:56;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4455:1010;;4408:1057;:::o;1293:1026::-;1343:15;1361:14;1371:3;1361:9;:14::i;:::-;1343:32;;1406:12;:19;;;;1393:10;:32;1385:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;1515:27;1545:12;1558:10;1545:24;;;;;;;;:::i;:::-;;;;;;;;;;;;1515:54;;1601:13;:19;;;;;;;;;;;;1587:33;;:10;:33;;;1579:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1708:14;1684:38;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:38;;;;;;;;:::i;:::-;;;1676:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1803:1;1771:34;;:13;:20;;;;;;;;;;;;:34;;;1767:316;;1829:13;:20;;;;;;;;;;;;1821:38;;:58;1860:18;1821:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1913:13;:19;;;;;;;;;;;;1905:37;;:56;1943:17;1905:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:316;;;2012:13;:19;;;;;;;;;;;;2004:37;;:57;2042:18;2004:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:316;2115:15;2092:13;:20;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2145:35;2165:13;2145:35;;;;;;:::i;:::-;;;;;;;;2190:34;2213:10;2190:22;:34::i;:::-;2261:12;:19;;;;2243:14;2253:3;2243:9;:14::i;:::-;:37;2235:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1333:986;;1293:1026;:::o;3334:1068::-;3384:15;3402:14;3412:3;3402:9;:14::i;:::-;3384:32;;3447:12;:19;;;;3434:10;:32;3426:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;3556:27;3586:12;3599:10;3586:24;;;;;;;;:::i;:::-;;;;;;;;;;;;3556:54;;3642:13;:20;;;;;;;;;;;;3628:34;;:10;:34;;;3620:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3750:14;3726:38;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:38;;;;;;;;:::i;:::-;;;3718:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;3857:2;3835:13;:19;;;:24;;;;:::i;:::-;3816:15;:43;;3808:198;;;;;;;;;;;;:::i;:::-;;;;;;;;;4025:13;:20;;;;;;;;;;;;4017:38;;:58;4056:18;4017:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4105:13;:19;;;;;;;;;;;;4097:37;;:56;4135:17;4097:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4198:15;4175:13;:20;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4228:35;4248:13;4228:35;;;;;;:::i;:::-;;;;;;;;4273:34;4296:10;4273:22;:34::i;:::-;4344:12;:19;;;;4326:14;4336:3;4326:9;:14::i;:::-;:37;4318:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3374:1028;;3334:1068;:::o;10624:1664::-;10679:15;10697:14;10707:3;10697:9;:14::i;:::-;10679:32;;10742:12;:19;;;;10729:10;:32;10721:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;10860:27;10890:12;10903:10;10890:24;;;;;;;;:::i;:::-;;;;;;;;;;;;10860:54;;10946:13;:20;;;;;;;;;;;;10932:34;;:10;:34;;;10924:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;11055:33;11031:57;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:57;;;;;;;;:::i;:::-;;;11023:143;;;;;;;;;;;;:::i;:::-;;;;;;;;;11572:2;11546:13;:23;;;:28;;;;:::i;:::-;11515:13;:28;;;:59;;;;:::i;:::-;11496:15;:78;;11488:293;;;;;;;;;;;;:::i;:::-;;;;;;;;;11800:13;:19;;;;;;;;;;;;11792:37;;:56;11830:17;11792:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11901:13;:20;;;;;;;;;;;;11893:38;;:87;11961:18;11932:13;:26;;;:47;;;;:::i;:::-;11893:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12081:17;12058:13;:20;;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;12113:35;12133:13;12113:35;;;;;;:::i;:::-;;;;;;;;12158:34;12181:10;12158:22;:34::i;:::-;12229:12;:19;;;;12211:14;12221:3;12211:9;:14::i;:::-;:37;12203:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;10669:1619;;10624:1664;:::o;8981:1039::-;9044:15;9062:14;9072:3;9062:9;:14::i;:::-;9044:32;;9107:12;:19;;;;9094:10;:32;9086:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;9216:27;9246:12;9259:10;9246:24;;;;;;;;:::i;:::-;;;;;;;;;;;;9216:54;;9302:13;:20;;;;;;;;;;;;9288:34;;:10;:34;;;9280:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;9411:34;9387:58;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:58;;;;;;;;:::i;:::-;;;9379:144;;;;;;;;;;;;:::i;:::-;;;;;;;;;9542:13;:20;;;;;;;;;;;;9534:38;;:57;9573:17;9534:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9645:13;:19;;;;;;;;;;;;9637:37;;:86;9704:18;9675:13;:26;;;:47;;;;:::i;:::-;9637:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9817:13;9794;:20;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;9845:35;9865:13;9845:35;;;;;;:::i;:::-;;;;;;;;9890:34;9913:10;9890:22;:34::i;:::-;9961:12;:19;;;;9943:14;9953:3;9943:9;:14::i;:::-;:37;9935:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;9034:986;;8981:1039;:::o;2325:1003::-;2388:15;2406:14;2416:3;2406:9;:14::i;:::-;2388:32;;2451:12;:19;;;;2438:10;:32;2430:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;2560:27;2590:12;2603:10;2590:24;;;;;;;;:::i;:::-;;;;;;;;;;;;2560:54;;2646:13;:19;;;;;;;;;;;;2632:33;;:10;:33;;;2624:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;2755:14;2731:38;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:38;;;;;;;;:::i;:::-;;;2723:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2851:1;2821:13;:26;;;:31;:70;;;;2885:6;2856:13;:26;;;:35;2821:70;2813:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2965:18;2952:9;:31;2944:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3079:1;3047:34;;:13;:20;;;;;;;;;;;;:34;;;3043:144;;3105:13;:20;;;;;;;;;;;;3097:38;;:58;3136:18;3097:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3043:144;3225:6;3196:13;:26;;:35;;;;3264:10;3241:13;:20;;;:33;;;;;;;;;;;;;;;;;;3306:15;3284:13;:19;;:37;;;;2378:950;;2325:1003;;:::o;12294:1331::-;561:5;;;;;;;;;;547:19;;:10;:19;;;539:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;12388:15:::1;12406:14;12416:3;12406:9;:14::i;:::-;12388:32;;12451:12;:19;;;;12438:10;:32;12430:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;12560:27;12590:12;12603:10;12590:24;;;;;;;;:::i;:::-;;;;;;;;;;;;12560:54;;12656:15;12632:39;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:39;;;;;;;;:::i;:::-;;;12624:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;12772:18;12768:669;;;12814:5;::::0;::::1;;;;;;;;12806:23;;:42;12830:17;12806:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;12905:13;:20;;;;;;;;;;;;12897:38;;:87;12965:18;12936:13;:26;;;:47;;;;:::i;:::-;12897:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;13089:17;13066:13;:20;;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;12768:669;;;13145:5;::::0;::::1;;;;;;;;13137:23;;:42;13161:17;13137:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;13237:13;:19;;;;;;;;;;;;13229:37;;:86;13296:18;13267:13;:26;;;:47;;;;:::i;:::-;13229:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;13413:13;13390;:20;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;12768:669;13451:35;13471:13;13451:35;;;;;;:::i;:::-;;;;;;;;13496:34;13519:10;13496:22;:34::i;:::-;13567:12;:19;;;;13549:14;13559:3;13549:9;:14::i;:::-;:37;13541:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;12378:1247;;12294:1331:::0;;:::o;6490:1080::-;6549:15;6567:14;6577:3;6567:9;:14::i;:::-;6549:32;;6612:12;:19;;;;6599:10;:32;6591:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;6721:27;6751:12;6764:10;6751:24;;;;;;;;:::i;:::-;;;;;;;;;;;;6721:54;;6807:13;:19;;;;;;;;;;;;6793:33;;:10;:33;;;6785:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;6915:33;6891:57;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:57;;;;;;;;:::i;:::-;;;6883:143;;;;;;;;;;;;:::i;:::-;;;;;;;;;7359:2;7333:13;:23;;;:28;;;;:::i;:::-;7302:13;:28;;;:59;;;;:::i;:::-;7283:15;:78;;7275:220;;;;;;;;;;;;:::i;:::-;;;;;;;;;7529:34;7506:13;:20;;;:57;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;6539:1031;;6490:1080;:::o;14080:92::-;14133:4;14148:21;14141:28;;14080:92;:::o;754:533::-;881:18;868:9;:31;860:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;958:21;;:::i;:::-;1003;;:23;;;;;;;;;:::i;:::-;;;;;989:8;:11;;:37;;;;;1053:10;1036:8;:14;;:27;;;;;;;;;;;1103:19;1073:8;:27;;:49;;;;;1153:10;1132:8;:18;;:31;;;;;1229:14;1211:8;:15;;:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;1253:12;1271:8;1253:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;835:452;754:533;;:::o;7576:1399::-;7634:15;7652:14;7662:3;7652:9;:14::i;:::-;7634:32;;7697:12;:19;;;;7684:10;:32;7676:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;7806:27;7836:12;7849:10;7836:24;;;;;;;;:::i;:::-;;;;;;;;;;;;7806:54;;7892:13;:19;;;;;;;;;;;;7878:33;;:10;:33;;;7870:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;8000:34;7976:58;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:58;;;;;;;;:::i;:::-;;;7968:144;;;;;;;;;;;;:::i;:::-;;;;;;;;;8422:6;8391:13;:28;;;:37;;;;:::i;:::-;8372:15;:56;;8364:224;;;;;;;;;;;;:::i;:::-;;;;;;;;;8607:13;:19;;;;;;;;;;;;8599:37;;:86;8666:18;8637:13;:26;;;:47;;;;:::i;:::-;8599:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8762:13;8739;:20;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;8790:35;8810:13;8790:35;;;;;;:::i;:::-;;;;;;;;8835:34;8858:10;8835:22;:34::i;:::-;8906:12;:19;;;;8888:14;8898:3;8888:9;:14::i;:::-;:37;8880:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;7624:1351;;7576:1399;:::o;10026:592::-;10083:15;10101:14;10111:3;10101:9;:14::i;:::-;10083:32;;10146:12;:19;;;;10133:10;:32;10125:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;10255:27;10285:12;10298:10;10285:24;;;;;;;;:::i;:::-;;;;;;;;;;;;10255:54;;10341:13;:20;;;;;;;;;;;;10327:34;;:10;:34;;;10319:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;10450:34;10426:58;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:58;;;;;;;;:::i;:::-;;;10418:144;;;;;;;;;;;;:::i;:::-;;;;;;;;;10596:15;10573:13;:20;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;10073:545;;10026:592;:::o;5471:1013::-;5537:15;5555:14;5565:3;5555:9;:14::i;:::-;5537:32;;5600:12;:19;;;;5587:10;:32;5579:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;5709:27;5739:12;5752:10;5739:24;;;;;;;;:::i;:::-;;;;;;;;;;;;5709:54;;5795:13;:19;;;;;;;;;;;;5781:33;;:10;:33;;;5773:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;5903:33;5879:57;;;;;;;;:::i;:::-;;:13;:20;;;;;;;;;;;;:57;;;;;;;;:::i;:::-;;;5871:143;;;;;;;;;;;;:::i;:::-;;;;;;;;;6033:13;:20;;;;;;;;;;;;6025:38;;:87;6093:18;6064:13;:26;;;:47;;;;:::i;:::-;6025:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6167:13;:19;;;;;;;;;;;;6159:37;;:57;6197:18;6159:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6270:17;6247:13;:20;;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;6302:35;6322:13;6302:35;;;;;;:::i;:::-;;;;;;;;6347:34;6370:10;6347:22;:34::i;:::-;6418:12;:19;;;;6400:14;6410:3;6400:9;:14::i;:::-;:37;6392:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;5527:957;;5471:1013;:::o;439:20::-;;;;;;;;;;;;:::o;13631:247::-;13682:4;13698:6;13707:1;13698:10;;13718:136;13729:12;:19;;;;13725:1;:23;13718:136;;;13795:3;13773:12;13786:1;13773:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:18;;;:25;13769:69;13818:5;13769:69;13750:3;;;;;:::i;:::-;;;;13718:136;;;13870:1;13863:8;;;13631:247;;;:::o;13884:159::-;13971:12;14006:1;13984:12;:19;;;;:23;;;;:::i;:::-;13971:37;;;;;;;;:::i;:::-;;;;;;;;;;;;13948:12;13961:6;13948:20;;;;;;;;:::i;:::-;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;14018:12;:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13884:159;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;7:135:2:-;95:6;129:5;123:12;113:22;;7:135;;;:::o;148:205::-;268:11;302:6;297:3;290:19;342:4;337:3;333:14;318:29;;148:205;;;;:::o;359:153::-;447:4;470:3;462:11;;500:4;495:3;491:14;483:22;;359:153;;;:::o;518:77::-;555:7;584:5;573:16;;518:77;;;:::o;601:108::-;678:24;696:5;678:24;:::i;:::-;673:3;666:37;601:108;;:::o;715:126::-;752:7;792:42;785:5;781:54;770:65;;715:126;;;:::o;847:96::-;884:7;913:24;931:5;913:24;:::i;:::-;902:35;;847:96;;;:::o;949:108::-;1026:24;1044:5;1026:24;:::i;:::-;1021:3;1014:37;949:108;;:::o;1063:180::-;1111:77;1108:1;1101:88;1208:4;1205:1;1198:15;1232:4;1229:1;1222:15;1249:113;1330:1;1323:5;1320:12;1310:46;;1336:18;;:::i;:::-;1310:46;1249:113;:::o;1368:127::-;1413:7;1442:5;1431:16;;1448:41;1483:5;1448:41;:::i;:::-;1368:127;;;:::o;1501:::-;1557:9;1590:32;1616:5;1590:32;:::i;:::-;1577:45;;1501:127;;;:::o;1634:133::-;1717:43;1754:5;1717:43;:::i;:::-;1712:3;1705:56;1634:133;;:::o;1809:1760::-;1938:6;1933:3;1929:16;2025:4;2018:5;2014:16;2008:23;2044:63;2101:4;2096:3;2092:14;2078:12;2044:63;:::i;:::-;1955:162;2200:4;2193:5;2189:16;2183:23;2219:63;2276:4;2271:3;2267:14;2253:12;2219:63;:::i;:::-;2127:165;2388:4;2381:5;2377:16;2371:23;2407:63;2464:4;2459:3;2455:14;2441:12;2407:63;:::i;:::-;2302:178;2567:4;2560:5;2556:16;2550:23;2586:63;2643:4;2638:3;2634:14;2620:12;2586:63;:::i;:::-;2490:169;2749:4;2742:5;2738:16;2732:23;2768:63;2825:4;2820:3;2816:14;2802:12;2768:63;:::i;:::-;2669:172;2925:4;2918:5;2914:16;2908:23;2944:63;3001:4;2996:3;2992:14;2978:12;2944:63;:::i;:::-;2851:166;3100:4;3093:5;3089:16;3083:23;3119:63;3176:4;3171:3;3167:14;3153:12;3119:63;:::i;:::-;3027:165;3284:4;3277:5;3273:16;3267:23;3303:63;3360:4;3355:3;3351:14;3337:12;3303:63;:::i;:::-;3202:174;3460:6;3453:5;3449:18;3443:25;3481:71;3544:6;3539:3;3535:16;3521:12;3481:71;:::i;:::-;3386:176;1907:1662;1809:1760;;:::o;3575:265::-;3686:10;3707:88;3791:3;3783:6;3707:88;:::i;:::-;3827:6;3822:3;3818:16;3804:30;;3575:265;;;;:::o;3846:134::-;3937:4;3969;3964:3;3960:14;3952:22;;3846:134;;;:::o;4026:900::-;4187:3;4216:75;4285:5;4216:75;:::i;:::-;4307:107;4407:6;4402:3;4307:107;:::i;:::-;4300:114;;4438:77;4509:5;4438:77;:::i;:::-;4538:7;4569:1;4554:347;4579:6;4576:1;4573:13;4554:347;;;4655:6;4649:13;4682:105;4783:3;4768:13;4682:105;:::i;:::-;4675:112;;4810:81;4884:6;4810:81;:::i;:::-;4800:91;;4614:287;4601:1;4598;4594:9;4589:14;;4554:347;;;4558:14;4917:3;4910:10;;4192:734;;;4026:900;;;;:::o;4932:457::-;5117:4;5155:2;5144:9;5140:18;5132:26;;5204:9;5198:4;5194:20;5190:1;5179:9;5175:17;5168:47;5232:150;5377:4;5368:6;5232:150;:::i;:::-;5224:158;;4932:457;;;;:::o;5476:117::-;5585:1;5582;5575:12;5722:122;5795:24;5813:5;5795:24;:::i;:::-;5788:5;5785:35;5775:63;;5834:1;5831;5824:12;5775:63;5722:122;:::o;5850:139::-;5896:5;5934:6;5921:20;5912:29;;5950:33;5977:5;5950:33;:::i;:::-;5850:139;;;;:::o;5995:329::-;6054:6;6103:2;6091:9;6082:7;6078:23;6074:32;6071:119;;;6109:79;;:::i;:::-;6071:119;6229:1;6254:53;6299:7;6290:6;6279:9;6275:22;6254:53;:::i;:::-;6244:63;;6200:117;5995:329;;;;:::o;6330:474::-;6398:6;6406;6455:2;6443:9;6434:7;6430:23;6426:32;6423:119;;;6461:79;;:::i;:::-;6423:119;6581:1;6606:53;6651:7;6642:6;6631:9;6627:22;6606:53;:::i;:::-;6596:63;;6552:117;6708:2;6734:53;6779:7;6770:6;6759:9;6755:22;6734:53;:::i;:::-;6724:63;;6679:118;6330:474;;;;;:::o;6810:90::-;6844:7;6887:5;6880:13;6873:21;6862:32;;6810:90;;;:::o;6906:116::-;6976:21;6991:5;6976:21;:::i;:::-;6969:5;6966:32;6956:60;;7012:1;7009;7002:12;6956:60;6906:116;:::o;7028:133::-;7071:5;7109:6;7096:20;7087:29;;7125:30;7149:5;7125:30;:::i;:::-;7028:133;;;;:::o;7167:468::-;7232:6;7240;7289:2;7277:9;7268:7;7264:23;7260:32;7257:119;;;7295:79;;:::i;:::-;7257:119;7415:1;7440:53;7485:7;7476:6;7465:9;7461:22;7440:53;:::i;:::-;7430:63;;7386:117;7542:2;7568:50;7610:7;7601:6;7590:9;7586:22;7568:50;:::i;:::-;7558:60;;7513:115;7167:468;;;;;:::o;7641:118::-;7728:24;7746:5;7728:24;:::i;:::-;7723:3;7716:37;7641:118;;:::o;7765:222::-;7858:4;7896:2;7885:9;7881:18;7873:26;;7909:71;7977:1;7966:9;7962:17;7953:6;7909:71;:::i;:::-;7765:222;;;;:::o;7993:118::-;8080:24;8098:5;8080:24;:::i;:::-;8075:3;8068:37;7993:118;;:::o;8117:222::-;8210:4;8248:2;8237:9;8233:18;8225:26;;8261:71;8329:1;8318:9;8314:17;8305:6;8261:71;:::i;:::-;8117:222;;;;:::o;8345:169::-;8429:11;8463:6;8458:3;8451:19;8503:4;8498:3;8494:14;8479:29;;8345:169;;;;:::o;8520:303::-;8660:34;8656:1;8648:6;8644:14;8637:58;8733:34;8728:2;8720:6;8716:15;8709:59;8802:13;8797:2;8789:6;8785:15;8778:38;8520:303;:::o;8829:366::-;8971:3;8992:67;9056:2;9051:3;8992:67;:::i;:::-;8985:74;;9068:93;9157:3;9068:93;:::i;:::-;9186:2;9181:3;9177:12;9170:19;;8829:366;;;:::o;9201:419::-;9367:4;9405:2;9394:9;9390:18;9382:26;;9454:9;9448:4;9444:20;9440:1;9429:9;9425:17;9418:47;9482:131;9608:4;9482:131;:::i;:::-;9474:139;;9201:419;;;:::o;9626:180::-;9674:77;9671:1;9664:88;9771:4;9768:1;9761:15;9795:4;9792:1;9785:15;9812:228;9952:34;9948:1;9940:6;9936:14;9929:58;10021:11;10016:2;10008:6;10004:15;9997:36;9812:228;:::o;10046:366::-;10188:3;10209:67;10273:2;10268:3;10209:67;:::i;:::-;10202:74;;10285:93;10374:3;10285:93;:::i;:::-;10403:2;10398:3;10394:12;10387:19;;10046:366;;;:::o;10418:419::-;10584:4;10622:2;10611:9;10607:18;10599:26;;10671:9;10665:4;10661:20;10657:1;10646:9;10642:17;10635:47;10699:131;10825:4;10699:131;:::i;:::-;10691:139;;10418:419;;;:::o;10843:384::-;10983:34;10979:1;10971:6;10967:14;10960:58;11052:66;11047:2;11039:6;11035:15;11028:91;11153:66;11148:2;11140:6;11136:15;11129:91;10843:384;:::o;11233:366::-;11375:3;11396:67;11460:2;11455:3;11396:67;:::i;:::-;11389:74;;11472:93;11561:3;11472:93;:::i;:::-;11590:2;11585:3;11581:12;11574:19;;11233:366;;;:::o;11605:419::-;11771:4;11809:2;11798:9;11794:18;11786:26;;11858:9;11852:4;11848:20;11844:1;11833:9;11829:17;11822:47;11886:131;12012:4;11886:131;:::i;:::-;11878:139;;11605:419;;;:::o;12030:179::-;12170:31;12166:1;12158:6;12154:14;12147:55;12030:179;:::o;12215:366::-;12357:3;12378:67;12442:2;12437:3;12378:67;:::i;:::-;12371:74;;12454:93;12543:3;12454:93;:::i;:::-;12572:2;12567:3;12563:12;12556:19;;12215:366;;;:::o;12587:419::-;12753:4;12791:2;12780:9;12776:18;12768:26;;12840:9;12834:4;12830:20;12826:1;12815:9;12811:17;12804:47;12868:131;12994:4;12868:131;:::i;:::-;12860:139;;12587:419;;;:::o;13012:225::-;13152:34;13148:1;13140:6;13136:14;13129:58;13221:8;13216:2;13208:6;13204:15;13197:33;13012:225;:::o;13243:366::-;13385:3;13406:67;13470:2;13465:3;13406:67;:::i;:::-;13399:74;;13482:93;13571:3;13482:93;:::i;:::-;13600:2;13595:3;13591:12;13584:19;;13243:366;;;:::o;13615:419::-;13781:4;13819:2;13808:9;13804:18;13796:26;;13868:9;13862:4;13858:20;13854:1;13843:9;13839:17;13832:47;13896:131;14022:4;13896:131;:::i;:::-;13888:139;;13615:419;;;:::o;14040:102::-;14082:8;14129:5;14126:1;14122:13;14101:34;;14040:102;;;:::o;14148:90::-;14198:7;14227:5;14216:16;;14148:90;;;:::o;14244:166::-;14313:5;14338:66;14369:34;14392:10;14369:34;:::i;:::-;14338:66;:::i;:::-;14329:75;;14244:166;;;:::o;14416:139::-;14466:7;14506:42;14499:5;14495:54;14484:65;;14416:139;;;:::o;14561:166::-;14630:5;14655:66;14686:34;14709:10;14686:34;:::i;:::-;14655:66;:::i;:::-;14646:75;;14561:166;;;:::o;14733:109::-;14791:7;14831:4;14824:5;14820:16;14809:27;;14733:109;;;:::o;14848:182::-;14925:5;14950:74;14989:34;15012:10;14989:34;:::i;:::-;14950:74;:::i;:::-;14941:83;;14848:182;;;:::o;15072:2524::-;15212:6;15207:3;15203:16;15245:1;15318:4;15311:5;15307:16;15301:23;15288:36;;15357:55;15402:9;15357:55;:::i;:::-;15425:63;15482:4;15477:3;15473:14;15459:12;15425:63;:::i;:::-;15256:242;15573:4;15566:5;15562:16;15556:23;15543:36;;15612:55;15657:9;15612:55;:::i;:::-;15680:63;15737:4;15732:3;15728:14;15714:12;15680:63;:::i;:::-;15508:245;15841:4;15834:5;15830:16;15824:23;15811:36;;15880:55;15925:9;15880:55;:::i;:::-;15948:63;16005:4;16000:3;15996:14;15982:12;15948:63;:::i;:::-;15763:258;16100:4;16093:5;16089:16;16083:23;16070:36;;16139:55;16184:9;16139:55;:::i;:::-;16207:63;16264:4;16259:3;16255:14;16241:12;16207:63;:::i;:::-;16031:249;16362:4;16355:5;16351:16;16345:23;16332:36;;16401:55;16446:9;16401:55;:::i;:::-;16469:63;16526:4;16521:3;16517:14;16503:12;16469:63;:::i;:::-;16290:252;16618:4;16611:5;16607:16;16601:23;16588:36;;16657:55;16702:9;16657:55;:::i;:::-;16725:63;16782:4;16777:3;16773:14;16759:12;16725:63;:::i;:::-;16552:246;16873:4;16866:5;16862:16;16856:23;16843:36;;16912:55;16957:9;16912:55;:::i;:::-;16980:63;17037:4;17032:3;17028:14;17014:12;16980:63;:::i;:::-;16808:245;17137:4;17130:5;17126:16;17120:23;17107:36;;17176:55;17221:9;17176:55;:::i;:::-;17244:63;17301:4;17296:3;17292:14;17278:12;17244:63;:::i;:::-;17063:254;17393:4;17386:5;17382:16;17376:23;17363:36;;17432:63;17485:9;17432:63;:::i;:::-;17508:71;17571:6;17566:3;17562:16;17548:12;17508:71;:::i;:::-;17327:262;15181:2415;;15072:2524;;:::o;17602:309::-;17738:4;17776:3;17765:9;17761:19;17753:27;;17790:114;17901:1;17890:9;17886:17;17877:6;17790:114;:::i;:::-;17602:309;;;;:::o;17917:177::-;18057:29;18053:1;18045:6;18041:14;18034:53;17917:177;:::o;18100:366::-;18242:3;18263:67;18327:2;18322:3;18263:67;:::i;:::-;18256:74;;18339:93;18428:3;18339:93;:::i;:::-;18457:2;18452:3;18448:12;18441:19;;18100:366;;;:::o;18472:419::-;18638:4;18676:2;18665:9;18661:18;18653:26;;18725:9;18719:4;18715:20;18711:1;18700:9;18696:17;18689:47;18753:131;18879:4;18753:131;:::i;:::-;18745:139;;18472:419;;;:::o;18897:180::-;18945:77;18942:1;18935:88;19042:4;19039:1;19032:15;19066:4;19063:1;19056:15;19083:305;19123:3;19142:20;19160:1;19142:20;:::i;:::-;19137:25;;19176:20;19194:1;19176:20;:::i;:::-;19171:25;;19330:1;19262:66;19258:74;19255:1;19252:81;19249:107;;;19336:18;;:::i;:::-;19249:107;19380:1;19377;19373:9;19366:16;;19083:305;;;;:::o;19394:441::-;19534:34;19530:1;19522:6;19518:14;19511:58;19603:34;19598:2;19590:6;19586:15;19579:59;19672:34;19667:2;19659:6;19655:15;19648:59;19741:34;19736:2;19728:6;19724:15;19717:59;19811:16;19805:3;19797:6;19793:16;19786:42;19394:441;:::o;19841:368::-;19983:3;20004:68;20068:3;20063;20004:68;:::i;:::-;19997:75;;20081:93;20170:3;20081:93;:::i;:::-;20199:3;20194;20190:13;20183:20;;19841:368;;;:::o;20215:419::-;20381:4;20419:2;20408:9;20404:18;20396:26;;20468:9;20462:4;20458:20;20454:1;20443:9;20439:17;20432:47;20496:131;20622:4;20496:131;:::i;:::-;20488:139;;20215:419;;;:::o;20640:229::-;20780:34;20776:1;20768:6;20764:14;20757:58;20849:12;20844:2;20836:6;20832:15;20825:37;20640:229;:::o;20875:366::-;21017:3;21038:67;21102:2;21097:3;21038:67;:::i;:::-;21031:74;;21114:93;21203:3;21114:93;:::i;:::-;21232:2;21227:3;21223:12;21216:19;;20875:366;;;:::o;21247:419::-;21413:4;21451:2;21440:9;21436:18;21428:26;;21500:9;21494:4;21490:20;21486:1;21475:9;21471:17;21464:47;21528:131;21654:4;21528:131;:::i;:::-;21520:139;;21247:419;;;:::o;21672:297::-;21812:34;21808:1;21800:6;21796:14;21789:58;21881:34;21876:2;21868:6;21864:15;21857:59;21950:11;21945:2;21937:6;21933:15;21926:36;21672:297;:::o;21975:366::-;22117:3;22138:67;22202:2;22197:3;22138:67;:::i;:::-;22131:74;;22214:93;22303:3;22214:93;:::i;:::-;22332:2;22327:3;22323:12;22316:19;;21975:366;;;:::o;22347:419::-;22513:4;22551:2;22540:9;22536:18;22528:26;;22600:9;22594:4;22590:20;22586:1;22575:9;22571:17;22564:47;22628:131;22754:4;22628:131;:::i;:::-;22620:139;;22347:419;;;:::o;22772:348::-;22812:7;22835:20;22853:1;22835:20;:::i;:::-;22830:25;;22869:20;22887:1;22869:20;:::i;:::-;22864:25;;23057:1;22989:66;22985:74;22982:1;22979:81;22974:1;22967:9;22960:17;22956:105;22953:131;;;23064:18;;:::i;:::-;22953:131;23112:1;23109;23105:9;23094:20;;22772:348;;;;:::o;23126:577::-;23266:34;23262:1;23254:6;23250:14;23243:58;23335:34;23330:2;23322:6;23318:15;23311:59;23404:34;23399:2;23391:6;23387:15;23380:59;23473:34;23468:2;23460:6;23456:15;23449:59;23543:34;23537:3;23529:6;23525:16;23518:60;23613:34;23607:3;23599:6;23595:16;23588:60;23683:12;23677:3;23669:6;23665:16;23658:38;23126:577;:::o;23709:368::-;23851:3;23872:68;23936:3;23931;23872:68;:::i;:::-;23865:75;;23949:93;24038:3;23949:93;:::i;:::-;24067:3;24062;24058:13;24051:20;;23709:368;;;:::o;24083:419::-;24249:4;24287:2;24276:9;24272:18;24264:26;;24336:9;24330:4;24326:20;24322:1;24311:9;24307:17;24300:47;24364:131;24490:4;24364:131;:::i;:::-;24356:139;;24083:419;;;:::o;24508:230::-;24648:34;24644:1;24636:6;24632:14;24625:58;24717:13;24712:2;24704:6;24700:15;24693:38;24508:230;:::o;24744:366::-;24886:3;24907:67;24971:2;24966:3;24907:67;:::i;:::-;24900:74;;24983:93;25072:3;24983:93;:::i;:::-;25101:2;25096:3;25092:12;25085:19;;24744:366;;;:::o;25116:419::-;25282:4;25320:2;25309:9;25305:18;25297:26;;25369:9;25363:4;25359:20;25355:1;25344:9;25340:17;25333:47;25397:131;25523:4;25397:131;:::i;:::-;25389:139;;25116:419;;;:::o;25541:225::-;25681:34;25677:1;25669:6;25665:14;25658:58;25750:8;25745:2;25737:6;25733:15;25726:33;25541:225;:::o;25772:366::-;25914:3;25935:67;25999:2;25994:3;25935:67;:::i;:::-;25928:74;;26011:93;26100:3;26011:93;:::i;:::-;26129:2;26124:3;26120:12;26113:19;;25772:366;;;:::o;26144:419::-;26310:4;26348:2;26337:9;26333:18;26325:26;;26397:9;26391:4;26387:20;26383:1;26372:9;26368:17;26361:47;26425:131;26551:4;26425:131;:::i;:::-;26417:139;;26144:419;;;:::o;26569:231::-;26709:34;26705:1;26697:6;26693:14;26686:58;26778:14;26773:2;26765:6;26761:15;26754:39;26569:231;:::o;26806:366::-;26948:3;26969:67;27033:2;27028:3;26969:67;:::i;:::-;26962:74;;27045:93;27134:3;27045:93;:::i;:::-;27163:2;27158:3;27154:12;27147:19;;26806:366;;;:::o;27178:419::-;27344:4;27382:2;27371:9;27367:18;27359:26;;27431:9;27425:4;27421:20;27417:1;27406:9;27402:17;27395:47;27459:131;27585:4;27459:131;:::i;:::-;27451:139;;27178:419;;;:::o;27603:232::-;27743:34;27739:1;27731:6;27727:14;27720:58;27812:15;27807:2;27799:6;27795:15;27788:40;27603:232;:::o;27841:366::-;27983:3;28004:67;28068:2;28063:3;28004:67;:::i;:::-;27997:74;;28080:93;28169:3;28080:93;:::i;:::-;28198:2;28193:3;28189:12;28182:19;;27841:366;;;:::o;28213:419::-;28379:4;28417:2;28406:9;28402:18;28394:26;;28466:9;28460:4;28456:20;28452:1;28441:9;28437:17;28430:47;28494:131;28620:4;28494:131;:::i;:::-;28486:139;;28213:419;;;:::o;28638:428::-;28778:34;28774:1;28766:6;28762:14;28755:58;28847:34;28842:2;28834:6;28830:15;28823:59;28916:34;28911:2;28903:6;28899:15;28892:59;28985:34;28980:2;28972:6;28968:15;28961:59;29055:3;29049;29041:6;29037:16;29030:29;28638:428;:::o;29072:368::-;29214:3;29235:68;29299:3;29294;29235:68;:::i;:::-;29228:75;;29312:93;29401:3;29312:93;:::i;:::-;29430:3;29425;29421:13;29414:20;;29072:368;;;:::o;29446:419::-;29612:4;29650:2;29639:9;29635:18;29627:26;;29699:9;29693:4;29689:20;29685:1;29674:9;29670:17;29663:47;29727:131;29853:4;29727:131;:::i;:::-;29719:139;;29446:419;;;:::o;29871:233::-;29910:3;29933:24;29951:5;29933:24;:::i;:::-;29924:33;;29979:66;29972:5;29969:77;29966:103;;30049:18;;:::i;:::-;29966:103;30096:1;30089:5;30085:13;30078:20;;29871:233;;;:::o;30110:454::-;30250:34;30246:1;30238:6;30234:14;30227:58;30319:34;30314:2;30306:6;30302:15;30295:59;30388:34;30383:2;30375:6;30371:15;30364:59;30457:34;30452:2;30444:6;30440:15;30433:59;30527:29;30521:3;30513:6;30509:16;30502:55;30110:454;:::o;30570:368::-;30712:3;30733:68;30797:3;30792;30733:68;:::i;:::-;30726:75;;30810:93;30899:3;30810:93;:::i;:::-;30928:3;30923;30919:13;30912:20;;30570:368;;;:::o;30944:419::-;31110:4;31148:2;31137:9;31133:18;31125:26;;31197:9;31191:4;31187:20;31183:1;31172:9;31168:17;31161:47;31225:131;31351:4;31225:131;:::i;:::-;31217:139;;30944:419;;;:::o;31369:191::-;31409:4;31429:20;31447:1;31429:20;:::i;:::-;31424:25;;31463:20;31481:1;31463:20;:::i;:::-;31458:25;;31502:1;31499;31496:8;31493:34;;;31507:18;;:::i;:::-;31493:34;31552:1;31549;31545:9;31537:17;;31369:191;;;;:::o;31566:180::-;31614:77;31611:1;31604:88;31711:4;31708:1;31701:15;31735:4;31732:1;31725:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\nenum Status { RUNNING, CANCELED, PENDING_BUYER_CONFIRMATION, PENDING_SELLER_CONFIRMATION, CONFLICT, SUCCESSFUL, FAILED }\n\nstruct Trade {\n    uint id; \n    address buyer;\n    uint amountEnergyNeeded;\n    uint numOfMins; // uint numOfHours;\n    uint sellingPrice;\n    address seller;\n    uint bidAt;\n    uint biddingEndedAt;\n    Status status;\n}\n\ncontract EnergyTrading {\n    address public admin;\n    constructor() { admin = msg.sender; }\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin is allowed to perform this action!\");\n        _;\n    }\n\n    Trade[] internal openedTrades;\n    uint internal currentNumOfAllTrades;\n\n    event TradeClosed(Trade trade);\n\n    function createTrade(uint _amountEnergyNeeded, uint _numOfMins) external payable { // _numOfHours\n        require(msg.value == 100000000000000000, \"You must send a value of 0.1 ETH as deposit!\");\n        Trade memory newTrade;\n        newTrade.id = currentNumOfAllTrades++;\n        newTrade.buyer = msg.sender;\n        newTrade.amountEnergyNeeded = _amountEnergyNeeded;\n        newTrade.numOfMins = _numOfMins; // newTrade.numOfHours = _numOfHours;\n        newTrade.status = Status.RUNNING;\n        openedTrades.push(newTrade);\n    }\n\n    function cancelTrade(uint _id) external {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(msg.sender == targetedTrade.buyer, \"You aren't allowed to perform this action\");\n        require(targetedTrade.status == Status.RUNNING, \"The bidding has already ended\");\n\n        if (targetedTrade.seller != address(0)) {\n            payable(targetedTrade.seller).transfer(150000000000000000); // 0.15 ETH\n            payable(targetedTrade.buyer).transfer(50000000000000000); // 0.05 ETH\n        } else {\n            payable(targetedTrade.buyer).transfer(100000000000000000); // 0.1 ETH\n        }\n        targetedTrade.status = Status.CANCELED;\n        emit TradeClosed({trade: targetedTrade});\n        removeFromOpenedTrades(tradeIndex);\n\n        require(findTrade(_id) == openedTrades.length, \"ERROR: Transation reverted.\");\n    }\n\n    function bid(uint _id, uint _price) external payable {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(msg.sender != targetedTrade.buyer, \"You can't bid on a trade you have created!!\");\n        require(targetedTrade.status == Status.RUNNING, \"The bidding has already ended\");\n        require(targetedTrade.sellingPrice == 0 || targetedTrade.sellingPrice > _price, \"There is already a lower or equal bid!\");\n        require(msg.value == 100000000000000000, \"You must send a value of 0.1 ETH as deposit!\");\n\n        if (targetedTrade.seller != address(0)) {\n            payable(targetedTrade.seller).transfer(100000000000000000); // 0.1 ETH (deposit)\n        }\n        targetedTrade.sellingPrice = _price;\n        targetedTrade.seller = msg.sender;\n        targetedTrade.bidAt = block.timestamp;\n    }\n\n    function withdrawBid(uint _id) external {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(msg.sender == targetedTrade.seller, \"You aren't allowed to perform this action\");\n        require(targetedTrade.status == Status.RUNNING, \"The bidding has already ended\");\n        require(block.timestamp >= targetedTrade.bidAt + 20, \"You can withdraw your bid ONLY if the creator of this trade doesn't end bidding within 1 minute from the time you successfully placed your bid\");\n\n        payable(targetedTrade.seller).transfer(150000000000000000); // 0.15 ETH\n        payable(targetedTrade.buyer).transfer(50000000000000000); // 0.05 ETH\n        targetedTrade.status = Status.CANCELED;\n        emit TradeClosed({trade: targetedTrade});\n        removeFromOpenedTrades(tradeIndex);\n\n        require(findTrade(_id) == openedTrades.length, \"ERROR: Transation reverted.\");\n    }\n\n    function endBidding(uint _id) external payable {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(msg.sender == targetedTrade.buyer, \"You aren't allowed to perform this action\");\n        require(targetedTrade.seller != address(0), \"You cannot end bidding if you haven't received any bid. Use \\\"Cancel\\\" instead\");\n        require(targetedTrade.status == Status.RUNNING, \"The bidding has already ended\");\n        require(msg.value == targetedTrade.sellingPrice, \"You must transfer the money in advance\");\n\n        targetedTrade.sellingPrice = msg.value;\n        targetedTrade.biddingEndedAt = block.timestamp;\n        targetedTrade.status = Status.PENDING_BUYER_CONFIRMATION;        \n        /** We may emit an event here, if we want to notify an IoT component that is listening to this kind of event to act accordingly (Start tranfering energy!) */\n    }\n\n    function buyerConfirmSuccessfulTrade(uint _id) external {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(msg.sender == targetedTrade.buyer, \"You're not allowed to perform this action!\");\n        require(targetedTrade.status == Status.PENDING_BUYER_CONFIRMATION, \"The current status of the trade doesn't permit you to perform this action\");\n\n        payable(targetedTrade.seller).transfer(targetedTrade.sellingPrice + 100000000000000000); // selling price + 0.1 ETH (deposit)\n        payable(targetedTrade.buyer).transfer(100000000000000000); // 0.1 ETH (deposit)\n        targetedTrade.status = Status.SUCCESSFUL;\n        emit TradeClosed({trade: targetedTrade});\n        removeFromOpenedTrades(tradeIndex);\n\n        require(findTrade(_id) == openedTrades.length, \"ERROR: Transation reverted.\");        \n    }\n\n    function buyerMarkFailedTrade(uint _id) external {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(msg.sender == targetedTrade.buyer, \"You're not allowed to perform this action!\");\n        require(targetedTrade.status == Status.PENDING_BUYER_CONFIRMATION, \"The current status of the trade doesn't permit you to perform this action\");\n        // require(block.timestamp >= targetedTrade.timeBiddingEnded + targetedTrade.numOfHours * 60 * 60, \"You can't mark a trade as FAILED before the number of hours specified in the trade starting from the time you ended the bidding\");\n        require(block.timestamp >= targetedTrade.biddingEndedAt + targetedTrade.numOfMins * 60, \"You can't mark a trade as FAILED before the number of minutes specified in the trade starting from the time you ended the bidding\");\n\n        targetedTrade.status = Status.PENDING_SELLER_CONFIRMATION;\n    }\n\n    function buyerClaimMoneyBack(uint _id) external {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(msg.sender == targetedTrade.buyer, \"You're not allowed to perform this action!\");\n        require(targetedTrade.status == Status.PENDING_SELLER_CONFIRMATION, \"The current status of the trade doesn't permit you to perform this action\");\n        // require(block.timestamp >= targetedTrade.timeBiddingEnded + 72 * 60 * 60, \"You can claim your money back only if the seller doesn't confirm failure nor request admin's intervention within 3 days from the time he won the bidding\");\n        require(block.timestamp >= targetedTrade.biddingEndedAt + 3 * 60, \"You can claim your money back only if the seller doesn't confirm failure nor request admin's intervention within 3 minutes from the time he won the bidding\");\n\n        payable(targetedTrade.buyer).transfer(targetedTrade.sellingPrice + 200000000000000000); // 0.2 ETH (deposit of both buyer + seller)\n        targetedTrade.status = Status.FAILED;\n        emit TradeClosed({trade: targetedTrade});\n        removeFromOpenedTrades(tradeIndex);\n\n        require(findTrade(_id) == openedTrades.length, \"ERROR: Transation reverted.\");           \n    }\n\n    function sellerConfirmFailedTrade(uint _id) external {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(msg.sender == targetedTrade.seller, \"You're not allowed to perform this action!\");\n        require(targetedTrade.status == Status.PENDING_SELLER_CONFIRMATION, \"The current status of the trade doesn't permit you to perform this action\");\n\n        payable(targetedTrade.seller).transfer(50000000000000000); // 0.05 ETH (50% of seller deposit)\n        payable(targetedTrade.buyer).transfer(targetedTrade.sellingPrice + 150000000000000000); // refund + 0.15 ETH (buyer deposit + 50% of seller deposit)\n        targetedTrade.status = Status.FAILED;\n        emit TradeClosed({trade: targetedTrade});\n        removeFromOpenedTrades(tradeIndex);\n\n        require(findTrade(_id) == openedTrades.length, \"ERROR: Transation reverted.\"); \n    }\n\n    function sellerMarkConflict(uint _id) external {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(msg.sender == targetedTrade.seller, \"You're not allowed to perform this action!\");\n        require(targetedTrade.status == Status.PENDING_SELLER_CONFIRMATION, \"The current status of the trade doesn't permit you to perform this action\");\n\n        targetedTrade.status = Status.CONFLICT;\n    }\n\n    function sellerClaimMoney(uint _id) external {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        \n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(msg.sender == targetedTrade.seller, \"You're not allowed to perform this action!\");\n        require(targetedTrade.status == Status.PENDING_BUYER_CONFIRMATION, \"The current status of the trade doesn't permit you to perform this action\");\n        // require(block.timestamp >= targetedTrade.timeBiddingEnded + targetedTrade.numOfHours * 60 * 60, \"You can claim your money back only if the buyer doesn't confirm success nor mark the trade as a failed one within the number of hours specified in the trade starting from the time he ended the bidding\");\n        require(block.timestamp >= targetedTrade.biddingEndedAt + targetedTrade.numOfMins * 60, \"You can claim your money back only if the buyer doesn't confirm success nor mark the trade as a failed one within the number of minutes specified in the trade starting from the time he ended the bidding\");\n\n        payable(targetedTrade.buyer).transfer(50000000000000000); // 0.05 ETH (50% of buyer deposit)\n        payable(targetedTrade.seller).transfer(targetedTrade.sellingPrice + 150000000000000000); // selling price + 0.15 ETH (seller deposit + 50% of buyer deposit)\n        targetedTrade.status = Status.SUCCESSFUL;\n        emit TradeClosed({trade: targetedTrade});\n        removeFromOpenedTrades(tradeIndex);\n\n        require(findTrade(_id) == openedTrades.length, \"ERROR: Transation reverted.\"); \n    }\n\n    function adminResolveConflict(uint _id, bool _isSuccessfulTrade) onlyAdmin external {\n        uint tradeIndex = findTrade(_id);\n        require(tradeIndex < openedTrades.length, \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\");\n        Trade storage targetedTrade = openedTrades[tradeIndex];\n        require(targetedTrade.status == Status.CONFLICT, \"The current status of the trade doesn't permit you to perform this action\");\n        \n        if (_isSuccessfulTrade) {\n            payable(admin).transfer(50000000000000000); // 0.05 ETH (50% of buyer deposit)\n            payable(targetedTrade.seller).transfer(targetedTrade.sellingPrice + 150000000000000000); // selling price + 0.15 ETH (seller deposit + 50% of buyer deposit)\n            targetedTrade.status = Status.SUCCESSFUL;\n        } else {\n            payable(admin).transfer(50000000000000000); // 0.05 ETH (50% of seller deposit)\n            payable(targetedTrade.buyer).transfer(targetedTrade.sellingPrice + 150000000000000000); // refund + 0.15 ETH (buyer deposit + 50% of seller deposit)\n            targetedTrade.status = Status.FAILED;\n        }\n        emit TradeClosed({trade: targetedTrade});\n        removeFromOpenedTrades(tradeIndex);\n\n        require(findTrade(_id) == openedTrades.length, \"ERROR: Transation reverted.\");\n    }\n\n    function findTrade(uint _id) internal view returns(uint) {\n        uint i = 0;\n        for (; i < openedTrades.length; i++) {\n            if (openedTrades[i].id == _id) {\n                break;\n            }      \n        }\n        return i;\n    }\n\n    function removeFromOpenedTrades(uint _index) internal {\n        openedTrades[_index] = openedTrades[openedTrades.length - 1];\n        openedTrades.pop();\n    }\n\n    /* Show contract state */\n\n    function showContractBalance() external view returns(uint) { return address(this).balance; }\n\n    function fetchAllOpenedTrades() external view returns(Trade[] memory) { return openedTrades; }\n}\n",
  "sourcePath": "/home/hany/Ethereum-Projects/fyp-energy-trading/contracts/EnergyTrading.sol",
  "ast": {
    "absolutePath": "project:/contracts/EnergyTrading.sol",
    "exportedSymbols": {
      "EnergyTrading": [
        1213
      ],
      "Status": [
        9
      ],
      "Trade": [
        29
      ]
    },
    "id": 1214,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:0"
      },
      {
        "canonicalName": "Status",
        "id": 9,
        "members": [
          {
            "id": 2,
            "name": "RUNNING",
            "nameLocation": "79:7:0",
            "nodeType": "EnumValue",
            "src": "79:7:0"
          },
          {
            "id": 3,
            "name": "CANCELED",
            "nameLocation": "88:8:0",
            "nodeType": "EnumValue",
            "src": "88:8:0"
          },
          {
            "id": 4,
            "name": "PENDING_BUYER_CONFIRMATION",
            "nameLocation": "98:26:0",
            "nodeType": "EnumValue",
            "src": "98:26:0"
          },
          {
            "id": 5,
            "name": "PENDING_SELLER_CONFIRMATION",
            "nameLocation": "126:27:0",
            "nodeType": "EnumValue",
            "src": "126:27:0"
          },
          {
            "id": 6,
            "name": "CONFLICT",
            "nameLocation": "155:8:0",
            "nodeType": "EnumValue",
            "src": "155:8:0"
          },
          {
            "id": 7,
            "name": "SUCCESSFUL",
            "nameLocation": "165:10:0",
            "nodeType": "EnumValue",
            "src": "165:10:0"
          },
          {
            "id": 8,
            "name": "FAILED",
            "nameLocation": "177:6:0",
            "nodeType": "EnumValue",
            "src": "177:6:0"
          }
        ],
        "name": "Status",
        "nameLocation": "70:6:0",
        "nodeType": "EnumDefinition",
        "src": "65:120:0"
      },
      {
        "canonicalName": "Trade",
        "id": 29,
        "members": [
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "id",
            "nameLocation": "211:2:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "206:7:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "206:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "228:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "220:13:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "220:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "amountEnergyNeeded",
            "nameLocation": "244:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "239:23:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "239:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "numOfMins",
            "nameLocation": "273:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "268:14:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "268:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "sellingPrice",
            "nameLocation": "313:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "308:17:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "308:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "339:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "331:14:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "331:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "bidAt",
            "nameLocation": "356:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "351:10:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "351:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "biddingEndedAt",
            "nameLocation": "372:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "367:19:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "367:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "status",
            "nameLocation": "399:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "392:13:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Status_$9",
              "typeString": "enum Status"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Status",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9,
                "src": "392:6:0"
              },
              "referencedDeclaration": 9,
              "src": "392:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Status_$9",
                "typeString": "enum Status"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Trade",
        "nameLocation": "194:5:0",
        "nodeType": "StructDefinition",
        "scope": 1214,
        "src": "187:221:0",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EnergyTrading",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1213,
        "linearizedBaseContracts": [
          1213
        ],
        "name": "EnergyTrading",
        "nameLocation": "419:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 31,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "454:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "439:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "439:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "479:23:0",
              "statements": [
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "481:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 35,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "489:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "489:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "481:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "481:18:0"
                }
              ]
            },
            "id": 40,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:2:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:0"
            },
            "scope": 1213,
            "src": "465:37:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "529:105:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "547:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "547:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 45,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "561:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "547:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e20697320616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "568:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef",
                          "typeString": "literal_string \"Only admin is allowed to perform this action!\""
                        },
                        "value": "Only admin is allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef",
                          "typeString": "literal_string \"Only admin is allowed to perform this action!\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "539:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "539:77:0"
                },
                {
                  "id": 50,
                  "nodeType": "PlaceholderStatement",
                  "src": "626:1:0"
                }
              ]
            },
            "id": 52,
            "name": "onlyAdmin",
            "nameLocation": "517:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:2:0"
            },
            "src": "508:126:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "openedTrades",
            "nameLocation": "657:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "640:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
              "typeString": "struct Trade[]"
            },
            "typeName": {
              "baseType": {
                "id": 54,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 53,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29,
                  "src": "640:5:0"
                },
                "referencedDeclaration": 29,
                "src": "640:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                  "typeString": "struct Trade"
                }
              },
              "id": 55,
              "nodeType": "ArrayTypeName",
              "src": "640:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr",
                "typeString": "struct Trade[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "currentNumOfAllTrades",
            "nameLocation": "689:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "675:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 57,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "675:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c",
            "id": 63,
            "name": "TradeClosed",
            "nameLocation": "723:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "trade",
                  "nameLocation": "741:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "735:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                    "typeString": "struct Trade"
                  },
                  "typeName": {
                    "id": 60,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59,
                      "name": "Trade",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29,
                      "src": "735:5:0"
                    },
                    "referencedDeclaration": 29,
                    "src": "735:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                      "typeString": "struct Trade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "734:13:0"
            },
            "src": "717:31:0"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "835:452:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 71,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "868:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "868:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "313030303030303030303030303030303030",
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "881:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "100000000000000000"
                        },
                        "src": "868:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742073656e6420612076616c7565206f6620302e3120455448206173206465706f73697421",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "901:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3",
                          "typeString": "literal_string \"You must send a value of 0.1 ETH as deposit!\""
                        },
                        "value": "You must send a value of 0.1 ETH as deposit!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3",
                          "typeString": "literal_string \"You must send a value of 0.1 ETH as deposit!\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "860:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "860:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "860:88:0"
                },
                {
                  "assignments": [
                    80
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "newTrade",
                      "nameLocation": "971:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 121,
                      "src": "958:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 79,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "958:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "958:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "958:21:0"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 82,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "989:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "989:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1003:23:0",
                      "subExpression": {
                        "id": 85,
                        "name": "currentNumOfAllTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1003:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "989:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "989:37:0"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 89,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1036:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1036:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 92,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1053:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1053:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1036:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:27:0"
                },
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 96,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1073:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountEnergyNeeded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1073:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99,
                      "name": "_amountEnergyNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1103:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1073:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:49:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 102,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1132:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numOfMins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "1132:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 105,
                      "name": "_numOfMins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1153:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1132:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:31:0"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 108,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1211:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "1211:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 111,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1229:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "RUNNING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2,
                      "src": "1229:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "1211:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1271:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      ],
                      "expression": {
                        "id": 115,
                        "name": "openedTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1253:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                          "typeString": "struct Trade storage ref[] storage ref"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1253:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr_$_t_struct$_Trade_$29_storage_$returns$__$bound_to$_t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Trade storage ref[] storage pointer,struct Trade storage ref)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1253:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:27:0"
                }
              ]
            },
            "functionSelector": "96463fc6",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTrade",
            "nameLocation": "763:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_amountEnergyNeeded",
                  "nameLocation": "780:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "775:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_numOfMins",
                  "nameLocation": "806:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "801:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "774:43:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:0:0"
            },
            "scope": 1213,
            "src": "754:533:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "1333:986:0",
              "statements": [
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "1348:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "1343:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1343:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 130,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "1371:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 129,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "1361:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1343:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 134,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "1393:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 135,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "1406:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1406:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1393:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1427:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1385:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:120:0"
                },
                {
                  "assignments": [
                    143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 143,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "1529:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "1515:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 142,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 141,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "1515:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "1515:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "baseExpression": {
                      "id": 144,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1545:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 146,
                    "indexExpression": {
                      "id": 145,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "1558:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1545:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1515:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 149,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1587:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1587:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 151,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "1601:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1601:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1587:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e277420616c6c6f77656420746f20706572666f726d207468697320616374696f6e",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1622:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        },
                        "value": "You aren't allowed to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1579:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1579:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 158,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "1684:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "1684:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 160,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "1708:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "1708:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "1684:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652062696464696e672068617320616c726561647920656e646564",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1724:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        },
                        "value": "The bidding has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1676:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:80:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 166,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "1771:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1771:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1803:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1795:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1795:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1795:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1771:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 201,
                    "nodeType": "Block",
                    "src": "1990:93:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030303030303030303030",
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2042:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "100000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 194,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 143,
                                    "src": "2012:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 195,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "2012:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2004:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 192,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2004:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2004:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2004:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2004:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 200,
                        "nodeType": "ExpressionStatement",
                        "src": "2004:57:0"
                      }
                    ]
                  },
                  "id": 202,
                  "nodeType": "IfStatement",
                  "src": "1767:316:0",
                  "trueBody": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "1807:177:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "313530303030303030303030303030303030",
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1860:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_150000000000000000_by_1",
                                "typeString": "int_const 150000000000000000"
                              },
                              "value": "150000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_150000000000000000_by_1",
                                "typeString": "int_const 150000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 175,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 143,
                                    "src": "1829:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 176,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "seller",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21,
                                  "src": "1829:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1821:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 173,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1821:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1821:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1821:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1821:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 181,
                        "nodeType": "ExpressionStatement",
                        "src": "1821:58:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3530303030303030303030303030303030",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1943:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              },
                              "value": "50000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 184,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 143,
                                    "src": "1913:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 185,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "1913:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1905:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 182,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1905:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1905:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1905:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1905:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 190,
                        "nodeType": "ExpressionStatement",
                        "src": "1905:56:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 203,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2092:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "2092:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 206,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2115:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CANCELED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "2115:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "2092:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "2092:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 211,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2165:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 210,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2145:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2145:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "EmitStatement",
                  "src": "2140:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 215,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "2213:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 214,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "2190:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2190:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2190:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 220,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "2253:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 219,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "2243:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2243:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 222,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2261:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2261:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2243:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2282:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2235:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2235:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:77:0"
                }
              ]
            },
            "functionSelector": "09ec6cc7",
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTrade",
            "nameLocation": "1302:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1319:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1314:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1313:10:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1333:0:0"
            },
            "scope": 1213,
            "src": "1293:1026:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "2378:950:0",
              "statements": [
                {
                  "assignments": [
                    237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 237,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "2393:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 334,
                      "src": "2388:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 236,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2388:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 241,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 239,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "2416:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 238,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "2406:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2388:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 243,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "2438:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 244,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2451:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2451:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2438:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2472:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2430:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2430:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:120:0"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "2574:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 334,
                      "src": "2560:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 251,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 250,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "2560:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "2560:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "initialValue": {
                    "baseExpression": {
                      "id": 253,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2590:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 255,
                    "indexExpression": {
                      "id": 254,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "2603:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2590:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2560:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 258,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2632:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2632:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 260,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "2646:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "2646:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2632:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420626964206f6e206120747261646520796f75206861766520637265617465642121",
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2667:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a",
                          "typeString": "literal_string \"You can't bid on a trade you have created!!\""
                        },
                        "value": "You can't bid on a trade you have created!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a",
                          "typeString": "literal_string \"You can't bid on a trade you have created!!\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2624:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "2624:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 267,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "2731:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "2731:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 269,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "2755:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "2755:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "2731:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652062696464696e672068617320616c726561647920656e646564",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2771:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        },
                        "value": "The bidding has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        }
                      ],
                      "id": 266,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2723:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 276,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "2821:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sellingPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "2821:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2851:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2821:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 280,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "2856:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sellingPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "2856:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 282,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "2885:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2856:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2821:70:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865726520697320616c72656164792061206c6f776572206f7220657175616c2062696421",
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2893:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7",
                          "typeString": "literal_string \"There is already a lower or equal bid!\""
                        },
                        "value": "There is already a lower or equal bid!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7",
                          "typeString": "literal_string \"There is already a lower or equal bid!\""
                        }
                      ],
                      "id": 275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2813:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2813:121:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:121:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 289,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2952:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2952:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "313030303030303030303030303030303030",
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2965:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "100000000000000000"
                        },
                        "src": "2952:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742073656e6420612076616c7565206f6620302e3120455448206173206465706f73697421",
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2985:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3",
                          "typeString": "literal_string \"You must send a value of 0.1 ETH as deposit!\""
                        },
                        "value": "You must send a value of 0.1 ETH as deposit!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3",
                          "typeString": "literal_string \"You must send a value of 0.1 ETH as deposit!\""
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2944:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2944:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "2944:88:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 296,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3047:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "3047:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3079:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3071:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3071:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3071:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3047:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 313,
                  "nodeType": "IfStatement",
                  "src": "3043:144:0",
                  "trueBody": {
                    "id": 312,
                    "nodeType": "Block",
                    "src": "3083:104:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030303030303030303030",
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3136:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "100000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 305,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 252,
                                    "src": "3105:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 306,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "seller",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21,
                                  "src": "3105:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3097:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 303,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3097:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3097:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "3097:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3097:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 311,
                        "nodeType": "ExpressionStatement",
                        "src": "3097:58:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 314,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3196:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sellingPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "3196:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 317,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "3225:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3196:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:35:0"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 320,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3241:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "3241:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 323,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3264:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3264:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3241:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "3241:33:0"
                },
                {
                  "expression": {
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 327,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3284:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bidAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "3284:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 330,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3306:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3306:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3284:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3284:37:0"
                }
              ]
            },
            "functionSelector": "598647f8",
            "id": 335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bid",
            "nameLocation": "2334:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "2343:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "2338:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "2353:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "2348:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2337:23:0"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2378:0:0"
            },
            "scope": 1213,
            "src": "2325:1003:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "3374:1028:0",
              "statements": [
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "3389:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 433,
                      "src": "3384:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3384:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 343,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "3412:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 342,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "3402:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3402:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 347,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "3434:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 348,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "3447:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3447:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3434:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3468:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3426:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3426:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "3426:120:0"
                },
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "3570:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 433,
                      "src": "3556:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 355,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 354,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "3556:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "3556:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 360,
                  "initialValue": {
                    "baseExpression": {
                      "id": 357,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "3586:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 359,
                    "indexExpression": {
                      "id": 358,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "3599:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3586:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3556:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 362,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3628:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3628:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 364,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3642:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "3642:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3628:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e277420616c6c6f77656420746f20706572666f726d207468697320616374696f6e",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3664:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        },
                        "value": "You aren't allowed to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3620:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3620:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "3620:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 371,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3726:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "3726:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 373,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "3750:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "3750:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "3726:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652062696464696e672068617320616c726561647920656e646564",
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3766:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        },
                        "value": "The bidding has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3718:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3718:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "3718:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 380,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3816:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3816:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 382,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "3835:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "bidAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "3835:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3230",
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3857:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "3835:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3816:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e20776974686472617720796f757220626964204f4e4c59206966207468652063726561746f72206f66207468697320747261646520646f65736e277420656e642062696464696e672077697468696e2031206d696e7574652066726f6d207468652074696d6520796f75207375636365737366756c6c7920706c6163656420796f757220626964",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3861:144:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde",
                          "typeString": "literal_string \"You can withdraw your bid ONLY if the creator of this trade doesn't end bidding within 1 minute from the time you successfully placed your bid\""
                        },
                        "value": "You can withdraw your bid ONLY if the creator of this trade doesn't end bidding within 1 minute from the time you successfully placed your bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde",
                          "typeString": "literal_string \"You can withdraw your bid ONLY if the creator of this trade doesn't end bidding within 1 minute from the time you successfully placed your bid\""
                        }
                      ],
                      "id": 379,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3808:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3808:198:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "3808:198:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313530303030303030303030303030303030",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4056:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "150000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 392,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "4025:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "4025:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4017:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 390,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4017:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4017:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4017:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4017:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "4017:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3530303030303030303030303030303030",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4135:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "50000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 401,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "4105:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "4105:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4097:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 399,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4097:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4097:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4097:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4097:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "4097:56:0"
                },
                {
                  "expression": {
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 408,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4175:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "4175:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 411,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "4198:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CANCELED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "4198:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "4175:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 416,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4248:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 415,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "4228:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4228:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "EmitStatement",
                  "src": "4223:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 420,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "4296:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 419,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "4273:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4273:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "4273:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 425,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "4336:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 424,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "4326:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4326:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 427,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "4344:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4344:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4326:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4365:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4318:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4318:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "4318:77:0"
                }
              ]
            },
            "functionSelector": "0eaaf4c8",
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawBid",
            "nameLocation": "3343:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3360:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "3355:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3354:10:0"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3374:0:0"
            },
            "scope": 1213,
            "src": "3334:1068:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 519,
              "nodeType": "Block",
              "src": "4455:1010:0",
              "statements": [
                {
                  "assignments": [
                    440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 440,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "4470:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 519,
                      "src": "4465:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 439,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4465:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 442,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "4493:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 441,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "4483:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4483:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4465:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 446,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 440,
                          "src": "4515:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 447,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "4528:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4528:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4515:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4549:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4507:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4507:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4507:120:0"
                },
                {
                  "assignments": [
                    455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 455,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "4651:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 519,
                      "src": "4637:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 454,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 453,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "4637:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "4637:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 459,
                  "initialValue": {
                    "baseExpression": {
                      "id": 456,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "4667:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 458,
                    "indexExpression": {
                      "id": 457,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "4680:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4667:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4637:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 461,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4709:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4709:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 463,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "4723:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "4723:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4709:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e277420616c6c6f77656420746f20706572666f726d207468697320616374696f6e",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4744:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        },
                        "value": "You aren't allowed to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4701:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4701:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "4701:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 470,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "4806:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "4806:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4838:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 472,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4830:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4830:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4806:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f7420656e642062696464696e6720696620796f7520686176656e277420726563656976656420616e79206269642e20557365202243616e63656c2220696e7374656164",
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4842:80:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988",
                          "typeString": "literal_string \"You cannot end bidding if you haven't received any bid. Use \"Cancel\" instead\""
                        },
                        "value": "You cannot end bidding if you haven't received any bid. Use \"Cancel\" instead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988",
                          "typeString": "literal_string \"You cannot end bidding if you haven't received any bid. Use \"Cancel\" instead\""
                        }
                      ],
                      "id": 469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4798:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4798:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "4798:125:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 481,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "4941:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "4941:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 483,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "4965:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "4965:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "4941:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652062696464696e672068617320616c726561647920656e646564",
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4981:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        },
                        "value": "The bidding has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        }
                      ],
                      "id": 480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4933:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4933:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "4933:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 490,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5031:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5031:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 492,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "5044:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 493,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "5044:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5031:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d757374207472616e7366657220746865206d6f6e657920696e20616476616e6365",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5072:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27",
                          "typeString": "literal_string \"You must transfer the money in advance\""
                        },
                        "value": "You must transfer the money in advance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27",
                          "typeString": "literal_string \"You must transfer the money in advance\""
                        }
                      ],
                      "id": 489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5023:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5023:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "5023:90:0"
                },
                {
                  "expression": {
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 498,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "5124:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sellingPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "5124:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 501,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5153:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "5153:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5124:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "5124:38:0"
                },
                {
                  "expression": {
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 505,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "5172:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "biddingEndedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "5172:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 508,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5203:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5203:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5172:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "5172:46:0"
                },
                {
                  "expression": {
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 512,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "5228:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "5228:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 515,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5251:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PENDING_BUYER_CONFIRMATION",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "5251:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "5228:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "5228:56:0"
                }
              ]
            },
            "functionSelector": "093755ad",
            "id": 520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endBidding",
            "nameLocation": "4417:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "4433:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "4428:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4427:10:0"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4455:0:0"
            },
            "scope": 1213,
            "src": "4408:1057:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 610,
              "nodeType": "Block",
              "src": "5527:957:0",
              "statements": [
                {
                  "assignments": [
                    526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 526,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "5542:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 610,
                      "src": "5537:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 525,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5537:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 530,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 528,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "5565:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 527,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "5555:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5555:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5537:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 532,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "5587:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 533,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "5600:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5600:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5587:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5621:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5579:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5579:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "5579:120:0"
                },
                {
                  "assignments": [
                    541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 541,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "5723:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 610,
                      "src": "5709:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 540,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 539,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "5709:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "5709:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 545,
                  "initialValue": {
                    "baseExpression": {
                      "id": 542,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "5739:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 544,
                    "indexExpression": {
                      "id": 543,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "5752:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5739:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5709:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 547,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5781:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5781:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 549,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "5795:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "5795:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5781:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5816:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5773:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5773:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "5773:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 556,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "5879:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "5879:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 558,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "5903:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_BUYER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4,
                          "src": "5903:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "5879:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5938:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5871:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5871:143:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "5871:143:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 570,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "6064:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "6064:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313030303030303030303030303030303030",
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6093:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "100000000000000000"
                        },
                        "src": "6064:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 566,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "6033:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "6033:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6025:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 564,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6025:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6025:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6025:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6025:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "6025:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030303030303030303030303030303030",
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6197:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "100000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 578,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "6167:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 579,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "6167:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6159:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 576,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6159:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6159:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6159:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6159:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "6159:57:0"
                },
                {
                  "expression": {
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 585,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "6247:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "6247:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 588,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6270:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SUCCESSFUL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "6270:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "6247:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "6247:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 593,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "6322:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 592,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "6302:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6302:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "EmitStatement",
                  "src": "6297:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 597,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "6370:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 596,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "6347:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6347:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "6347:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 602,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "6410:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 601,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "6400:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6400:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 604,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "6418:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6418:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6400:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6439:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6392:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6392:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "6392:77:0"
                }
              ]
            },
            "functionSelector": "f6819ecf",
            "id": 611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyerConfirmSuccessfulTrade",
            "nameLocation": "5480:27:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "5513:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 611,
                  "src": "5508:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5508:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5507:10:0"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5527:0:0"
            },
            "scope": 1213,
            "src": "5471:1013:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "6539:1031:0",
              "statements": [
                {
                  "assignments": [
                    617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 617,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "6554:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 676,
                      "src": "6549:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 616,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6549:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 619,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "6577:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 618,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "6567:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6567:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6549:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 623,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "6599:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 624,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "6612:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6612:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6599:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6633:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6591:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6591:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "6591:120:0"
                },
                {
                  "assignments": [
                    632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 632,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "6735:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 676,
                      "src": "6721:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 631,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 630,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "6721:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "6721:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 636,
                  "initialValue": {
                    "baseExpression": {
                      "id": 633,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "6751:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 635,
                    "indexExpression": {
                      "id": 634,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "6764:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6751:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6721:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 638,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6793:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6793:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 640,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "6807:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "6807:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6793:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6828:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6785:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6785:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "6785:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 647,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "6891:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "6891:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 649,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "6915:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_BUYER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4,
                          "src": "6915:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "6891:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6950:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6883:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6883:143:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "6883:143:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 656,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "7283:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7283:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 658,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
                              "src": "7302:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "biddingEndedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "7302:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 660,
                                "name": "targetedTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "7333:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                  "typeString": "struct Trade storage pointer"
                                }
                              },
                              "id": 661,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "numOfMins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17,
                              "src": "7333:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7359:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "7333:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7302:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7283:78:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e2774206d61726b2061207472616465206173204641494c4544206265666f726520746865206e756d626572206f66206d696e757465732073706563696669656420696e20746865207472616465207374617274696e672066726f6d207468652074696d6520796f7520656e646564207468652062696464696e67",
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7363:131:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629",
                          "typeString": "literal_string \"You can't mark a trade as FAILED before the number of minutes specified in the trade starting from the time you ended the bidding\""
                        },
                        "value": "You can't mark a trade as FAILED before the number of minutes specified in the trade starting from the time you ended the bidding"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629",
                          "typeString": "literal_string \"You can't mark a trade as FAILED before the number of minutes specified in the trade starting from the time you ended the bidding\""
                        }
                      ],
                      "id": 655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7275:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7275:220:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "7275:220:0"
                },
                {
                  "expression": {
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 669,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "7506:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "7506:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 672,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "7529:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PENDING_SELLER_CONFIRMATION",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "7529:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "7506:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "7506:57:0"
                }
              ]
            },
            "functionSelector": "8cb02ef4",
            "id": 677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyerMarkFailedTrade",
            "nameLocation": "6499:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "6525:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "6520:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6520:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6519:10:0"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6539:0:0"
            },
            "scope": 1213,
            "src": "6490:1080:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "7624:1351:0",
              "statements": [
                {
                  "assignments": [
                    683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 683,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "7639:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 771,
                      "src": "7634:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 682,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7634:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 687,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 685,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "7662:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 684,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "7652:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7652:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7634:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 689,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 683,
                          "src": "7684:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 690,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "7697:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7697:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7684:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7718:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7676:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7676:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "7676:120:0"
                },
                {
                  "assignments": [
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "7820:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 771,
                      "src": "7806:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 697,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 696,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "7806:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "7806:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 702,
                  "initialValue": {
                    "baseExpression": {
                      "id": 699,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "7836:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 701,
                    "indexExpression": {
                      "id": 700,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "7849:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7836:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7806:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 704,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7878:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7878:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 706,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "7892:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "7892:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7878:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7913:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7870:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7870:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "7870:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 713,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "7976:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 714,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "7976:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 715,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "8000:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_SELLER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "8000:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "7976:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8036:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7968:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7968:144:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "7968:144:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 722,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "8372:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8372:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 724,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 698,
                              "src": "8391:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 725,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "biddingEndedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "8391:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_180_by_1",
                              "typeString": "int_const 180"
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "33",
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8422:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8426:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "8422:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_180_by_1",
                              "typeString": "int_const 180"
                            }
                          },
                          "src": "8391:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8372:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e20636c61696d20796f7572206d6f6e6579206261636b206f6e6c79206966207468652073656c6c657220646f65736e277420636f6e6669726d206661696c757265206e6f7220726571756573742061646d696e277320696e74657276656e74696f6e2077697468696e2033206d696e757465732066726f6d207468652074696d6520686520776f6e207468652062696464696e67",
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8430:157:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf",
                          "typeString": "literal_string \"You can claim your money back only if the seller doesn't confirm failure nor request admin's intervention within 3 minutes from the time he won the bidding\""
                        },
                        "value": "You can claim your money back only if the seller doesn't confirm failure nor request admin's intervention within 3 minutes from the time he won the bidding"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf",
                          "typeString": "literal_string \"You can claim your money back only if the seller doesn't confirm failure nor request admin's intervention within 3 minutes from the time he won the bidding\""
                        }
                      ],
                      "id": 721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8364:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8364:224:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "8364:224:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 740,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "8637:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "8637:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "323030303030303030303030303030303030",
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8666:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "200000000000000000"
                        },
                        "src": "8637:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 736,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 698,
                              "src": "8607:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 737,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "8607:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8599:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 734,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8599:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8599:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "8599:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8599:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "8599:86:0"
                },
                {
                  "expression": {
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 746,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "8739:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 748,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "8739:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 749,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "8762:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "FAILED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "8762:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "8739:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "8739:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 754,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "8810:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 753,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "8790:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "8790:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "EmitStatement",
                  "src": "8785:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 758,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "8858:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 757,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "8835:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8835:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "8835:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 763,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "8898:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 762,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "8888:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8888:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 765,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "8906:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8906:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8888:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8927:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 761,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8880:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8880:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "8880:77:0"
                }
              ]
            },
            "functionSelector": "b117a106",
            "id": 772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyerClaimMoneyBack",
            "nameLocation": "7585:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "7610:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "7605:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7605:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7604:10:0"
            },
            "returnParameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7624:0:0"
            },
            "scope": 1213,
            "src": "7576:1399:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "9034:986:0",
              "statements": [
                {
                  "assignments": [
                    778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 778,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "9049:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "9044:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 777,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9044:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 782,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 780,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "9072:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 779,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "9062:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9062:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9044:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 784,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "9094:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 785,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9107:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9107:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9094:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9128:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9086:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9086:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "9086:120:0"
                },
                {
                  "assignments": [
                    793
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 793,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "9230:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "9216:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 792,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 791,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "9216:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "9216:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 797,
                  "initialValue": {
                    "baseExpression": {
                      "id": 794,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "9246:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 796,
                    "indexExpression": {
                      "id": 795,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "9259:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9246:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9216:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 799,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9288:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9288:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 801,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "9302:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "9302:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9288:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9324:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9280:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9280:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "9280:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 808,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "9387:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 809,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "9387:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 810,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "9411:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_SELLER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "9411:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "9387:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9447:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9379:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9379:144:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "9379:144:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3530303030303030303030303030303030",
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9573:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "50000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 818,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "9542:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 819,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "9542:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9534:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 816,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9534:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9534:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9534:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9534:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "9534:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 831,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "9675:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 832,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "9675:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313530303030303030303030303030303030",
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9704:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000000000000000_by_1",
                            "typeString": "int_const 150000000000000000"
                          },
                          "value": "150000000000000000"
                        },
                        "src": "9675:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 827,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "9645:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 828,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "9645:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9637:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 825,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9637:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9637:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9637:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9637:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "9637:86:0"
                },
                {
                  "expression": {
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 837,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "9794:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "9794:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 840,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "9817:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "FAILED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "9817:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "9794:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "9794:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 845,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "9865:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 844,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "9845:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9845:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 847,
                  "nodeType": "EmitStatement",
                  "src": "9840:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 849,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "9913:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 848,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "9890:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9890:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "9890:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 854,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 774,
                              "src": "9953:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 853,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "9943:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9943:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 856,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9961:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9961:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9943:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9982:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9935:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9935:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "9935:77:0"
                }
              ]
            },
            "functionSelector": "4f63f69e",
            "id": 863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerConfirmFailedTrade",
            "nameLocation": "8990:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "9020:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "9015:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9015:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9014:10:0"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9034:0:0"
            },
            "scope": 1213,
            "src": "8981:1039:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "10073:545:0",
              "statements": [
                {
                  "assignments": [
                    869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 869,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "10088:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "10083:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 868,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10083:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 873,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 871,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "10111:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 870,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "10101:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10101:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10083:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 875,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "10133:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 876,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "10146:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10146:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10133:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10167:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10125:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10125:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "10125:120:0"
                },
                {
                  "assignments": [
                    884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 884,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "10269:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "10255:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 883,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 882,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "10255:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "10255:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 888,
                  "initialValue": {
                    "baseExpression": {
                      "id": 885,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "10285:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 887,
                    "indexExpression": {
                      "id": 886,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "10298:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10285:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10255:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 890,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10327:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10327:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 892,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "10341:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "10341:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10327:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10363:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10319:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10319:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "10319:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 899,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "10426:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "10426:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 901,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "10450:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_SELLER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "10450:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "10426:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10486:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10418:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10418:144:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "10418:144:0"
                },
                {
                  "expression": {
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 907,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "10573:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 909,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "10573:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 910,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "10596:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CONFLICT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "10596:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "10573:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "10573:38:0"
                }
              ]
            },
            "functionSelector": "e40ebc3a",
            "id": 915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerMarkConflict",
            "nameLocation": "10035:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "10059:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "10054:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10054:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10053:10:0"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10073:0:0"
            },
            "scope": 1213,
            "src": "10026:592:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1019,
              "nodeType": "Block",
              "src": "10669:1619:0",
              "statements": [
                {
                  "assignments": [
                    921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 921,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "10684:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1019,
                      "src": "10679:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 920,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10679:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 925,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 923,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "10707:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 922,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "10697:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10697:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10679:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 927,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "10729:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 928,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "10742:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10742:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10729:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10763:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10721:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10721:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "10721:120:0"
                },
                {
                  "assignments": [
                    936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 936,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "10874:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1019,
                      "src": "10860:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 935,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 934,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "10860:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "10860:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 940,
                  "initialValue": {
                    "baseExpression": {
                      "id": 937,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "10890:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 939,
                    "indexExpression": {
                      "id": 938,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 921,
                      "src": "10903:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10890:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10860:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 942,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10932:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10932:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 944,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "10946:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "10946:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10932:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10968:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10924:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10924:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "10924:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 951,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "11031:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "11031:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 953,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "11055:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_BUYER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4,
                          "src": "11055:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "11031:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11090:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11023:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11023:143:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "11023:143:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 960,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "11496:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11496:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 962,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "11515:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 963,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "biddingEndedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "11515:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 964,
                                "name": "targetedTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 936,
                                "src": "11546:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                  "typeString": "struct Trade storage pointer"
                                }
                              },
                              "id": 965,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "numOfMins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17,
                              "src": "11546:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11572:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "11546:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11515:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11496:78:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e20636c61696d20796f7572206d6f6e6579206261636b206f6e6c792069662074686520627579657220646f65736e277420636f6e6669726d2073756363657373206e6f72206d61726b207468652074726164652061732061206661696c6564206f6e652077697468696e20746865206e756d626572206f66206d696e757465732073706563696669656420696e20746865207472616465207374617274696e672066726f6d207468652074696d6520686520656e646564207468652062696464696e67",
                        "id": 970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11576:204:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0",
                          "typeString": "literal_string \"You can claim your money back only if the buyer doesn't confirm success nor mark the trade as a failed one within the number of minutes specified in the trade starting from the time he ended the bidding\""
                        },
                        "value": "You can claim your money back only if the buyer doesn't confirm success nor mark the trade as a failed one within the number of minutes specified in the trade starting from the time he ended the bidding"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0",
                          "typeString": "literal_string \"You can claim your money back only if the buyer doesn't confirm success nor mark the trade as a failed one within the number of minutes specified in the trade starting from the time he ended the bidding\""
                        }
                      ],
                      "id": 959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11488:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11488:293:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 972,
                  "nodeType": "ExpressionStatement",
                  "src": "11488:293:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3530303030303030303030303030303030",
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11830:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "50000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 975,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "11800:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 976,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "11800:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11792:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 973,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11792:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11792:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11792:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11792:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 981,
                  "nodeType": "ExpressionStatement",
                  "src": "11792:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 988,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "11932:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "11932:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313530303030303030303030303030303030",
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11961:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000000000000000_by_1",
                            "typeString": "int_const 150000000000000000"
                          },
                          "value": "150000000000000000"
                        },
                        "src": "11932:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 984,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "11901:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 985,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "11901:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11893:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 982,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11893:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11893:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11893:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11893:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "11893:87:0"
                },
                {
                  "expression": {
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 994,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 936,
                        "src": "12058:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 996,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "12058:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 997,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "12081:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SUCCESSFUL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "12081:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "12058:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "12058:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1002,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 936,
                        "src": "12133:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 1001,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "12113:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "12113:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1004,
                  "nodeType": "EmitStatement",
                  "src": "12108:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1006,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "12181:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1005,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "12158:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12158:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "12158:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1011,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "12221:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1010,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "12211:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12211:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1013,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "12229:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12229:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12211:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12250:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 1009,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12203:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12203:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1018,
                  "nodeType": "ExpressionStatement",
                  "src": "12203:77:0"
                }
              ]
            },
            "functionSelector": "21af7a81",
            "id": 1020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerClaimMoney",
            "nameLocation": "10633:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "10655:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "10650:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10650:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10649:10:0"
            },
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10669:0:0"
            },
            "scope": 1213,
            "src": "10624:1664:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "12378:1247:0",
              "statements": [
                {
                  "assignments": [
                    1030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1030,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "12393:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1135,
                      "src": "12388:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1029,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12388:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1034,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1032,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1022,
                        "src": "12416:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1031,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "12406:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12406:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12388:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1036,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1030,
                          "src": "12438:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1037,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "12451:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12451:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12438:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12472:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 1035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12430:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12430:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "12430:120:0"
                },
                {
                  "assignments": [
                    1045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1045,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "12574:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1135,
                      "src": "12560:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 1044,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1043,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "12560:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "12560:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1049,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1046,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "12590:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 1048,
                    "indexExpression": {
                      "id": 1047,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "12603:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12590:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12560:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1051,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "12632:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "12632:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1053,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "12656:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CONFLICT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "12656:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "12632:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12673:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 1050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12624:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12624:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "12624:125:0"
                },
                {
                  "condition": {
                    "id": 1059,
                    "name": "_isSuccessfulTrade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1024,
                    "src": "12772:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1115,
                    "nodeType": "Block",
                    "src": "13123:314:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3530303030303030303030303030303030",
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13161:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              },
                              "value": "50000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1090,
                                  "name": "admin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "13145:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13137:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1088,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13137:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13137:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "13137:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13137:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1095,
                        "nodeType": "ExpressionStatement",
                        "src": "13137:42:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1102,
                                  "name": "targetedTrade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "13267:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                    "typeString": "struct Trade storage pointer"
                                  }
                                },
                                "id": 1103,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sellingPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19,
                                "src": "13267:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "313530303030303030303030303030303030",
                                "id": 1104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13296:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_150000000000000000_by_1",
                                  "typeString": "int_const 150000000000000000"
                                },
                                "value": "150000000000000000"
                              },
                              "src": "13267:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1098,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "13237:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 1099,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "13237:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13229:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1096,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13229:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13229:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "13229:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13229:86:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1107,
                        "nodeType": "ExpressionStatement",
                        "src": "13229:86:0"
                      },
                      {
                        "expression": {
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1108,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "13390:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "13390:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$9",
                              "typeString": "enum Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1111,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "13413:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                                "typeString": "type(enum Status)"
                              }
                            },
                            "id": 1112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FAILED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "13413:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$9",
                              "typeString": "enum Status"
                            }
                          },
                          "src": "13390:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "id": 1114,
                        "nodeType": "ExpressionStatement",
                        "src": "13390:36:0"
                      }
                    ]
                  },
                  "id": 1116,
                  "nodeType": "IfStatement",
                  "src": "12768:669:0",
                  "trueBody": {
                    "id": 1087,
                    "nodeType": "Block",
                    "src": "12792:325:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3530303030303030303030303030303030",
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12830:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              },
                              "value": "50000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1062,
                                  "name": "admin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "12814:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12806:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1060,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12806:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12806:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "12806:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12806:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1067,
                        "nodeType": "ExpressionStatement",
                        "src": "12806:42:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1074,
                                  "name": "targetedTrade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "12936:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                    "typeString": "struct Trade storage pointer"
                                  }
                                },
                                "id": 1075,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sellingPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19,
                                "src": "12936:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "313530303030303030303030303030303030",
                                "id": 1076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12965:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_150000000000000000_by_1",
                                  "typeString": "int_const 150000000000000000"
                                },
                                "value": "150000000000000000"
                              },
                              "src": "12936:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1070,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "12905:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 1071,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "seller",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21,
                                  "src": "12905:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12897:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1068,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12897:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12897:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "12897:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12897:87:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1079,
                        "nodeType": "ExpressionStatement",
                        "src": "12897:87:0"
                      },
                      {
                        "expression": {
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1080,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "13066:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "13066:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$9",
                              "typeString": "enum Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1083,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "13089:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                                "typeString": "type(enum Status)"
                              }
                            },
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "SUCCESSFUL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "13089:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$9",
                              "typeString": "enum Status"
                            }
                          },
                          "src": "13066:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "id": 1086,
                        "nodeType": "ExpressionStatement",
                        "src": "13066:40:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1118,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "13471:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 1117,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "13451:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "13451:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1120,
                  "nodeType": "EmitStatement",
                  "src": "13446:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1122,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1030,
                        "src": "13519:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1121,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "13496:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13496:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1124,
                  "nodeType": "ExpressionStatement",
                  "src": "13496:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1127,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1022,
                              "src": "13559:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1126,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "13549:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13549:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1129,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "13567:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 1130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13567:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13549:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13588:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 1125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13541:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13541:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "13541:77:0"
                }
              ]
            },
            "functionSelector": "6e82386e",
            "id": 1136,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1027,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1026,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52,
                  "src": "12359:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12359:9:0"
              }
            ],
            "name": "adminResolveConflict",
            "nameLocation": "12303:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "12329:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "12324:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "_isSuccessfulTrade",
                  "nameLocation": "12339:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "12334:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12334:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12323:35:0"
            },
            "returnParameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12378:0:0"
            },
            "scope": 1213,
            "src": "12294:1331:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1167,
              "nodeType": "Block",
              "src": "13688:190:0",
              "statements": [
                {
                  "assignments": [
                    1144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1144,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "13703:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1167,
                      "src": "13698:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1143,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13698:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1146,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13707:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13698:10:0"
                },
                {
                  "body": {
                    "id": 1163,
                    "nodeType": "Block",
                    "src": "13755:99:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1154,
                                "name": "openedTrades",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "13773:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                                  "typeString": "struct Trade storage ref[] storage ref"
                                }
                              },
                              "id": 1156,
                              "indexExpression": {
                                "id": 1155,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1144,
                                "src": "13786:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13773:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage",
                                "typeString": "struct Trade storage ref"
                              }
                            },
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "13773:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1158,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "13795:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13773:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1162,
                        "nodeType": "IfStatement",
                        "src": "13769:69:0",
                        "trueBody": {
                          "id": 1161,
                          "nodeType": "Block",
                          "src": "13800:38:0",
                          "statements": [
                            {
                              "id": 1160,
                              "nodeType": "Break",
                              "src": "13818:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1147,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "13725:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1148,
                        "name": "openedTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "13729:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                          "typeString": "struct Trade storage ref[] storage ref"
                        }
                      },
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13729:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13725:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1164,
                  "loopExpression": {
                    "expression": {
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13750:3:0",
                      "subExpression": {
                        "id": 1151,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1144,
                        "src": "13750:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1153,
                    "nodeType": "ExpressionStatement",
                    "src": "13750:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "13718:136:0"
                },
                {
                  "expression": {
                    "id": 1165,
                    "name": "i",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1144,
                    "src": "13870:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1142,
                  "id": 1166,
                  "nodeType": "Return",
                  "src": "13863:8:0"
                }
              ]
            },
            "id": 1168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findTrade",
            "nameLocation": "13640:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "13655:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "13650:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13650:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13649:10:0"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "13682:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13682:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13681:6:0"
            },
            "scope": 1213,
            "src": "13631:247:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "13938:105:0",
              "statements": [
                {
                  "expression": {
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1173,
                        "name": "openedTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "13948:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                          "typeString": "struct Trade storage ref[] storage ref"
                        }
                      },
                      "id": 1175,
                      "indexExpression": {
                        "id": 1174,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "13961:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13948:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage",
                        "typeString": "struct Trade storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 1176,
                        "name": "openedTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "13971:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                          "typeString": "struct Trade storage ref[] storage ref"
                        }
                      },
                      "id": 1181,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1177,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "13984:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13984:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14006:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13984:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13971:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage",
                        "typeString": "struct Trade storage ref"
                      }
                    },
                    "src": "13948:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "id": 1183,
                  "nodeType": "ExpressionStatement",
                  "src": "13948:60:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1184,
                        "name": "openedTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "14018:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                          "typeString": "struct Trade storage ref[] storage ref"
                        }
                      },
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "14018:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Trade storage ref[] storage pointer)"
                      }
                    },
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14018:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1188,
                  "nodeType": "ExpressionStatement",
                  "src": "14018:18:0"
                }
              ]
            },
            "id": 1190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromOpenedTrades",
            "nameLocation": "13893:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "13921:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "13916:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13916:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13915:13:0"
            },
            "returnParameters": {
              "id": 1172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13938:0:0"
            },
            "scope": 1213,
            "src": "13884:159:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1201,
              "nodeType": "Block",
              "src": "14139:33:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1197,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "14156:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EnergyTrading_$1213",
                            "typeString": "contract EnergyTrading"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_EnergyTrading_$1213",
                            "typeString": "contract EnergyTrading"
                          }
                        ],
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14148:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14148:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14148:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "14148:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1194,
                  "id": 1200,
                  "nodeType": "Return",
                  "src": "14141:28:0"
                }
              ]
            },
            "functionSelector": "901c947f",
            "id": 1202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "showContractBalance",
            "nameLocation": "14089:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14108:2:0"
            },
            "returnParameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "14133:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14133:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14132:6:0"
            },
            "scope": 1213,
            "src": "14080:92:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1211,
              "nodeType": "Block",
              "src": "14248:24:0",
              "statements": [
                {
                  "expression": {
                    "id": 1209,
                    "name": "openedTrades",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "14257:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                      "typeString": "struct Trade storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1208,
                  "id": 1210,
                  "nodeType": "Return",
                  "src": "14250:19:0"
                }
              ]
            },
            "functionSelector": "0160a13c",
            "id": 1212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchAllOpenedTrades",
            "nameLocation": "14187:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14207:2:0"
            },
            "returnParameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "14232:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Trade[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1205,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1204,
                        "name": "Trade",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 29,
                        "src": "14232:5:0"
                      },
                      "referencedDeclaration": 29,
                      "src": "14232:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      }
                    },
                    "id": 1206,
                    "nodeType": "ArrayTypeName",
                    "src": "14232:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr",
                      "typeString": "struct Trade[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14231:16:0"
            },
            "scope": 1213,
            "src": "14178:94:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1214,
        "src": "410:13864:0",
        "usedErrors": []
      }
    ],
    "src": "32:14243:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/EnergyTrading.sol",
    "exportedSymbols": {
      "EnergyTrading": [
        1213
      ],
      "Status": [
        9
      ],
      "Trade": [
        29
      ]
    },
    "id": 1214,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:0"
      },
      {
        "canonicalName": "Status",
        "id": 9,
        "members": [
          {
            "id": 2,
            "name": "RUNNING",
            "nameLocation": "79:7:0",
            "nodeType": "EnumValue",
            "src": "79:7:0"
          },
          {
            "id": 3,
            "name": "CANCELED",
            "nameLocation": "88:8:0",
            "nodeType": "EnumValue",
            "src": "88:8:0"
          },
          {
            "id": 4,
            "name": "PENDING_BUYER_CONFIRMATION",
            "nameLocation": "98:26:0",
            "nodeType": "EnumValue",
            "src": "98:26:0"
          },
          {
            "id": 5,
            "name": "PENDING_SELLER_CONFIRMATION",
            "nameLocation": "126:27:0",
            "nodeType": "EnumValue",
            "src": "126:27:0"
          },
          {
            "id": 6,
            "name": "CONFLICT",
            "nameLocation": "155:8:0",
            "nodeType": "EnumValue",
            "src": "155:8:0"
          },
          {
            "id": 7,
            "name": "SUCCESSFUL",
            "nameLocation": "165:10:0",
            "nodeType": "EnumValue",
            "src": "165:10:0"
          },
          {
            "id": 8,
            "name": "FAILED",
            "nameLocation": "177:6:0",
            "nodeType": "EnumValue",
            "src": "177:6:0"
          }
        ],
        "name": "Status",
        "nameLocation": "70:6:0",
        "nodeType": "EnumDefinition",
        "src": "65:120:0"
      },
      {
        "canonicalName": "Trade",
        "id": 29,
        "members": [
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "id",
            "nameLocation": "211:2:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "206:7:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "206:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "228:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "220:13:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "220:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "amountEnergyNeeded",
            "nameLocation": "244:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "239:23:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "239:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "numOfMins",
            "nameLocation": "273:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "268:14:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "268:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "sellingPrice",
            "nameLocation": "313:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "308:17:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "308:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "339:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "331:14:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "331:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "bidAt",
            "nameLocation": "356:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "351:10:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "351:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "biddingEndedAt",
            "nameLocation": "372:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "367:19:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "367:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "status",
            "nameLocation": "399:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "392:13:0",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Status_$9",
              "typeString": "enum Status"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Status",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9,
                "src": "392:6:0"
              },
              "referencedDeclaration": 9,
              "src": "392:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Status_$9",
                "typeString": "enum Status"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Trade",
        "nameLocation": "194:5:0",
        "nodeType": "StructDefinition",
        "scope": 1214,
        "src": "187:221:0",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EnergyTrading",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1213,
        "linearizedBaseContracts": [
          1213
        ],
        "name": "EnergyTrading",
        "nameLocation": "419:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 31,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "454:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "439:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "439:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "479:23:0",
              "statements": [
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "481:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 35,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "489:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "489:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "481:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "481:18:0"
                }
              ]
            },
            "id": 40,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:2:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:0"
            },
            "scope": 1213,
            "src": "465:37:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "529:105:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "547:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "547:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 45,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "561:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "547:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e20697320616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "568:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef",
                          "typeString": "literal_string \"Only admin is allowed to perform this action!\""
                        },
                        "value": "Only admin is allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dd036ba460be1a97d9ac56c91e9edf340ebe10be23ad1006a0a56230d5240ef",
                          "typeString": "literal_string \"Only admin is allowed to perform this action!\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "539:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "539:77:0"
                },
                {
                  "id": 50,
                  "nodeType": "PlaceholderStatement",
                  "src": "626:1:0"
                }
              ]
            },
            "id": 52,
            "name": "onlyAdmin",
            "nameLocation": "517:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:2:0"
            },
            "src": "508:126:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "openedTrades",
            "nameLocation": "657:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "640:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
              "typeString": "struct Trade[]"
            },
            "typeName": {
              "baseType": {
                "id": 54,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 53,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29,
                  "src": "640:5:0"
                },
                "referencedDeclaration": 29,
                "src": "640:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                  "typeString": "struct Trade"
                }
              },
              "id": 55,
              "nodeType": "ArrayTypeName",
              "src": "640:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr",
                "typeString": "struct Trade[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "currentNumOfAllTrades",
            "nameLocation": "689:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 1213,
            "src": "675:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 57,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "675:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "970f95a69657c356fb5fab65a4555c4a1571711b016e0d0f2c288114b4c5493c",
            "id": 63,
            "name": "TradeClosed",
            "nameLocation": "723:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "trade",
                  "nameLocation": "741:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "735:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                    "typeString": "struct Trade"
                  },
                  "typeName": {
                    "id": 60,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59,
                      "name": "Trade",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29,
                      "src": "735:5:0"
                    },
                    "referencedDeclaration": 29,
                    "src": "735:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                      "typeString": "struct Trade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "734:13:0"
            },
            "src": "717:31:0"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "835:452:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 71,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "868:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "868:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "313030303030303030303030303030303030",
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "881:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "100000000000000000"
                        },
                        "src": "868:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742073656e6420612076616c7565206f6620302e3120455448206173206465706f73697421",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "901:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3",
                          "typeString": "literal_string \"You must send a value of 0.1 ETH as deposit!\""
                        },
                        "value": "You must send a value of 0.1 ETH as deposit!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3",
                          "typeString": "literal_string \"You must send a value of 0.1 ETH as deposit!\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "860:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "860:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "860:88:0"
                },
                {
                  "assignments": [
                    80
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "newTrade",
                      "nameLocation": "971:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 121,
                      "src": "958:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 79,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "958:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "958:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "958:21:0"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 82,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "989:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "989:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1003:23:0",
                      "subExpression": {
                        "id": 85,
                        "name": "currentNumOfAllTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1003:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "989:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "989:37:0"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 89,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1036:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1036:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 92,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1053:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1053:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1036:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:27:0"
                },
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 96,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1073:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountEnergyNeeded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1073:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99,
                      "name": "_amountEnergyNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1103:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1073:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:49:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 102,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1132:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numOfMins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "1132:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 105,
                      "name": "_numOfMins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1153:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1132:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:31:0"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 108,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1211:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "1211:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 111,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1229:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "RUNNING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2,
                      "src": "1229:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "1211:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "newTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1271:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_memory_ptr",
                          "typeString": "struct Trade memory"
                        }
                      ],
                      "expression": {
                        "id": 115,
                        "name": "openedTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1253:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                          "typeString": "struct Trade storage ref[] storage ref"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1253:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr_$_t_struct$_Trade_$29_storage_$returns$__$bound_to$_t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Trade storage ref[] storage pointer,struct Trade storage ref)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1253:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:27:0"
                }
              ]
            },
            "functionSelector": "96463fc6",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTrade",
            "nameLocation": "763:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_amountEnergyNeeded",
                  "nameLocation": "780:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "775:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_numOfMins",
                  "nameLocation": "806:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "801:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "774:43:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:0:0"
            },
            "scope": 1213,
            "src": "754:533:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "1333:986:0",
              "statements": [
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "1348:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "1343:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1343:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 130,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "1371:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 129,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "1361:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1343:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 134,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "1393:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 135,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "1406:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1406:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1393:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1427:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1385:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:120:0"
                },
                {
                  "assignments": [
                    143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 143,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "1529:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "1515:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 142,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 141,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "1515:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "1515:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "baseExpression": {
                      "id": 144,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1545:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 146,
                    "indexExpression": {
                      "id": 145,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "1558:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1545:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1515:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 149,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1587:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1587:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 151,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "1601:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1601:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1587:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e277420616c6c6f77656420746f20706572666f726d207468697320616374696f6e",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1622:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        },
                        "value": "You aren't allowed to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1579:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1579:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 158,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "1684:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "1684:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 160,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "1708:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "1708:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "1684:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652062696464696e672068617320616c726561647920656e646564",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1724:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        },
                        "value": "The bidding has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1676:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:80:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 166,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "1771:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1771:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1803:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1795:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1795:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1795:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1771:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 201,
                    "nodeType": "Block",
                    "src": "1990:93:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030303030303030303030",
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2042:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "100000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 194,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 143,
                                    "src": "2012:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 195,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "2012:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2004:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 192,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2004:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2004:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2004:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2004:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 200,
                        "nodeType": "ExpressionStatement",
                        "src": "2004:57:0"
                      }
                    ]
                  },
                  "id": 202,
                  "nodeType": "IfStatement",
                  "src": "1767:316:0",
                  "trueBody": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "1807:177:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "313530303030303030303030303030303030",
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1860:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_150000000000000000_by_1",
                                "typeString": "int_const 150000000000000000"
                              },
                              "value": "150000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_150000000000000000_by_1",
                                "typeString": "int_const 150000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 175,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 143,
                                    "src": "1829:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 176,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "seller",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21,
                                  "src": "1829:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1821:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 173,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1821:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1821:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1821:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1821:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 181,
                        "nodeType": "ExpressionStatement",
                        "src": "1821:58:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3530303030303030303030303030303030",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1943:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              },
                              "value": "50000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 184,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 143,
                                    "src": "1913:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 185,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "1913:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1905:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 182,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1905:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1905:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1905:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1905:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 190,
                        "nodeType": "ExpressionStatement",
                        "src": "1905:56:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 203,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2092:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "2092:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 206,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2115:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CANCELED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "2115:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "2092:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "2092:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 211,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2165:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 210,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2145:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2145:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "EmitStatement",
                  "src": "2140:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 215,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "2213:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 214,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "2190:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2190:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2190:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 220,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "2253:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 219,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "2243:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2243:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 222,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2261:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2261:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2243:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2282:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2235:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2235:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:77:0"
                }
              ]
            },
            "functionSelector": "09ec6cc7",
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTrade",
            "nameLocation": "1302:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1319:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1314:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1313:10:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1333:0:0"
            },
            "scope": 1213,
            "src": "1293:1026:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "2378:950:0",
              "statements": [
                {
                  "assignments": [
                    237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 237,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "2393:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 334,
                      "src": "2388:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 236,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2388:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 241,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 239,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "2416:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 238,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "2406:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2388:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 243,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "2438:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 244,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2451:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2451:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2438:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2472:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2430:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2430:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:120:0"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "2574:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 334,
                      "src": "2560:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 251,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 250,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "2560:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "2560:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "initialValue": {
                    "baseExpression": {
                      "id": 253,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2590:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 255,
                    "indexExpression": {
                      "id": 254,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "2603:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2590:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2560:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 258,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2632:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2632:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 260,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "2646:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "2646:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2632:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420626964206f6e206120747261646520796f75206861766520637265617465642121",
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2667:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a",
                          "typeString": "literal_string \"You can't bid on a trade you have created!!\""
                        },
                        "value": "You can't bid on a trade you have created!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c17ec48a3d732d7b6aab2d7ed7ea191889726bc31676ef88521532ede23c720a",
                          "typeString": "literal_string \"You can't bid on a trade you have created!!\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2624:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "2624:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 267,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "2731:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "2731:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 269,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "2755:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "2755:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "2731:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652062696464696e672068617320616c726561647920656e646564",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2771:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        },
                        "value": "The bidding has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        }
                      ],
                      "id": 266,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2723:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 276,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "2821:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 277,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sellingPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "2821:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2851:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2821:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 280,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "2856:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sellingPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19,
                            "src": "2856:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 282,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "2885:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2856:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2821:70:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865726520697320616c72656164792061206c6f776572206f7220657175616c2062696421",
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2893:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7",
                          "typeString": "literal_string \"There is already a lower or equal bid!\""
                        },
                        "value": "There is already a lower or equal bid!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7159ca8dccfe352292b005c652aea2812ab750b316aca770ac7c1d3bd3bc7eb7",
                          "typeString": "literal_string \"There is already a lower or equal bid!\""
                        }
                      ],
                      "id": 275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2813:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2813:121:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:121:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 289,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2952:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2952:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "313030303030303030303030303030303030",
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2965:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "100000000000000000"
                        },
                        "src": "2952:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742073656e6420612076616c7565206f6620302e3120455448206173206465706f73697421",
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2985:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3",
                          "typeString": "literal_string \"You must send a value of 0.1 ETH as deposit!\""
                        },
                        "value": "You must send a value of 0.1 ETH as deposit!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd043bf00fd43cd60cac89dbd318921372dcfb27521f757f789e9260758642a3",
                          "typeString": "literal_string \"You must send a value of 0.1 ETH as deposit!\""
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2944:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2944:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "2944:88:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 296,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3047:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "3047:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3079:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3071:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3071:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3071:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3047:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 313,
                  "nodeType": "IfStatement",
                  "src": "3043:144:0",
                  "trueBody": {
                    "id": 312,
                    "nodeType": "Block",
                    "src": "3083:104:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030303030303030303030",
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3136:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "100000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 305,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 252,
                                    "src": "3105:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 306,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "seller",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21,
                                  "src": "3105:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3097:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 303,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3097:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3097:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "3097:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3097:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 311,
                        "nodeType": "ExpressionStatement",
                        "src": "3097:58:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 314,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3196:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sellingPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "3196:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 317,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "3225:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3196:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:35:0"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 320,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3241:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "3241:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 323,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3264:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3264:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3241:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "3241:33:0"
                },
                {
                  "expression": {
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 327,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3284:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bidAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "3284:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 330,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3306:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3306:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3284:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3284:37:0"
                }
              ]
            },
            "functionSelector": "598647f8",
            "id": 335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bid",
            "nameLocation": "2334:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "2343:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "2338:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "2353:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "2348:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2337:23:0"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2378:0:0"
            },
            "scope": 1213,
            "src": "2325:1003:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "3374:1028:0",
              "statements": [
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "3389:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 433,
                      "src": "3384:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3384:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 343,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "3412:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 342,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "3402:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3402:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 347,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "3434:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 348,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "3447:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3447:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3434:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3468:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3426:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3426:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "3426:120:0"
                },
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "3570:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 433,
                      "src": "3556:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 355,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 354,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "3556:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "3556:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 360,
                  "initialValue": {
                    "baseExpression": {
                      "id": 357,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "3586:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 359,
                    "indexExpression": {
                      "id": 358,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "3599:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3586:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3556:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 362,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3628:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3628:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 364,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3642:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "3642:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3628:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e277420616c6c6f77656420746f20706572666f726d207468697320616374696f6e",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3664:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        },
                        "value": "You aren't allowed to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3620:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3620:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "3620:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 371,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3726:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "3726:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 373,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "3750:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "3750:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "3726:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652062696464696e672068617320616c726561647920656e646564",
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3766:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        },
                        "value": "The bidding has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3718:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3718:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "3718:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 380,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3816:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3816:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 382,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "3835:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "bidAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "3835:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3230",
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3857:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "3835:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3816:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e20776974686472617720796f757220626964204f4e4c59206966207468652063726561746f72206f66207468697320747261646520646f65736e277420656e642062696464696e672077697468696e2031206d696e7574652066726f6d207468652074696d6520796f75207375636365737366756c6c7920706c6163656420796f757220626964",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3861:144:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde",
                          "typeString": "literal_string \"You can withdraw your bid ONLY if the creator of this trade doesn't end bidding within 1 minute from the time you successfully placed your bid\""
                        },
                        "value": "You can withdraw your bid ONLY if the creator of this trade doesn't end bidding within 1 minute from the time you successfully placed your bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4104af0c84d08e6f5a48228f80d4eeb96056b37826501f654bf5d3b7c3b0cfde",
                          "typeString": "literal_string \"You can withdraw your bid ONLY if the creator of this trade doesn't end bidding within 1 minute from the time you successfully placed your bid\""
                        }
                      ],
                      "id": 379,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3808:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3808:198:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "3808:198:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313530303030303030303030303030303030",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4056:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "150000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 392,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "4025:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "4025:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4017:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 390,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4017:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4017:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4017:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4017:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "4017:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3530303030303030303030303030303030",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4135:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "50000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 401,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "4105:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "4105:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4097:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 399,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4097:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4097:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4097:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4097:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "4097:56:0"
                },
                {
                  "expression": {
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 408,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4175:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "4175:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 411,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "4198:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CANCELED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "4198:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "4175:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 416,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4248:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 415,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "4228:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4228:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "EmitStatement",
                  "src": "4223:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 420,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "4296:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 419,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "4273:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4273:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "4273:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 425,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "4336:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 424,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "4326:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4326:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 427,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "4344:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4344:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4326:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4365:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4318:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4318:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "4318:77:0"
                }
              ]
            },
            "functionSelector": "0eaaf4c8",
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawBid",
            "nameLocation": "3343:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3360:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "3355:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3354:10:0"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3374:0:0"
            },
            "scope": 1213,
            "src": "3334:1068:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 519,
              "nodeType": "Block",
              "src": "4455:1010:0",
              "statements": [
                {
                  "assignments": [
                    440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 440,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "4470:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 519,
                      "src": "4465:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 439,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4465:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 442,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "4493:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 441,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "4483:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4483:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4465:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 446,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 440,
                          "src": "4515:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 447,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "4528:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4528:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4515:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4549:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4507:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4507:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "4507:120:0"
                },
                {
                  "assignments": [
                    455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 455,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "4651:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 519,
                      "src": "4637:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 454,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 453,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "4637:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "4637:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 459,
                  "initialValue": {
                    "baseExpression": {
                      "id": 456,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "4667:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 458,
                    "indexExpression": {
                      "id": 457,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "4680:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4667:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4637:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 461,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4709:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4709:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 463,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "4723:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "4723:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4709:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206172656e277420616c6c6f77656420746f20706572666f726d207468697320616374696f6e",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4744:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        },
                        "value": "You aren't allowed to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d590bd93b855dd87f80d3d4e0584c5e86b8712b9ae96698f9e8855ba1946064e",
                          "typeString": "literal_string \"You aren't allowed to perform this action\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4701:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4701:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "4701:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 470,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "4806:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "4806:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4838:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 472,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4830:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4830:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4806:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f7420656e642062696464696e6720696620796f7520686176656e277420726563656976656420616e79206269642e20557365202243616e63656c2220696e7374656164",
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4842:80:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988",
                          "typeString": "literal_string \"You cannot end bidding if you haven't received any bid. Use \"Cancel\" instead\""
                        },
                        "value": "You cannot end bidding if you haven't received any bid. Use \"Cancel\" instead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_832b0186d45240e8c47364916fcafa9c32a42eb85b9a4a32855e292d535d5988",
                          "typeString": "literal_string \"You cannot end bidding if you haven't received any bid. Use \"Cancel\" instead\""
                        }
                      ],
                      "id": 469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4798:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4798:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "4798:125:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 481,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "4941:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "4941:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 483,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "4965:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "4965:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "4941:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652062696464696e672068617320616c726561647920656e646564",
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4981:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        },
                        "value": "The bidding has already ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8efd24904ad94ba29e2a20963f6d215cf7dfd0a0607b129fdd35af3abd2ab46",
                          "typeString": "literal_string \"The bidding has already ended\""
                        }
                      ],
                      "id": 480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4933:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4933:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "4933:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 490,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5031:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5031:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 492,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "5044:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 493,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "5044:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5031:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d757374207472616e7366657220746865206d6f6e657920696e20616476616e6365",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5072:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27",
                          "typeString": "literal_string \"You must transfer the money in advance\""
                        },
                        "value": "You must transfer the money in advance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e8b4e8228c508f13cd6062d2a6889336d75ed07f6442e82ab840ce0bb94bf27",
                          "typeString": "literal_string \"You must transfer the money in advance\""
                        }
                      ],
                      "id": 489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5023:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5023:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "5023:90:0"
                },
                {
                  "expression": {
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 498,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "5124:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sellingPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "5124:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 501,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5153:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "5153:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5124:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "5124:38:0"
                },
                {
                  "expression": {
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 505,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "5172:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "biddingEndedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "5172:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 508,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5203:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5203:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5172:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "5172:46:0"
                },
                {
                  "expression": {
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 512,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "5228:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "5228:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 515,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5251:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PENDING_BUYER_CONFIRMATION",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "5251:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "5228:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "5228:56:0"
                }
              ]
            },
            "functionSelector": "093755ad",
            "id": 520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endBidding",
            "nameLocation": "4417:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "4433:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "4428:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4427:10:0"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4455:0:0"
            },
            "scope": 1213,
            "src": "4408:1057:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 610,
              "nodeType": "Block",
              "src": "5527:957:0",
              "statements": [
                {
                  "assignments": [
                    526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 526,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "5542:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 610,
                      "src": "5537:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 525,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5537:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 530,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 528,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "5565:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 527,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "5555:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5555:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5537:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 532,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "5587:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 533,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "5600:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5600:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5587:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5621:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5579:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5579:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "5579:120:0"
                },
                {
                  "assignments": [
                    541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 541,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "5723:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 610,
                      "src": "5709:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 540,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 539,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "5709:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "5709:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 545,
                  "initialValue": {
                    "baseExpression": {
                      "id": 542,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "5739:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 544,
                    "indexExpression": {
                      "id": 543,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "5752:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5739:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5709:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 547,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5781:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5781:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 549,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "5795:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "5795:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5781:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5816:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5773:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5773:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "5773:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 556,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "5879:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "5879:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 558,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "5903:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_BUYER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4,
                          "src": "5903:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "5879:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5938:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5871:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5871:143:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "5871:143:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 570,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "6064:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "6064:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313030303030303030303030303030303030",
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6093:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "100000000000000000"
                        },
                        "src": "6064:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 566,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "6033:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "6033:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6025:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 564,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6025:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6025:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6025:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6025:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "6025:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030303030303030303030303030303030",
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6197:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "100000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 578,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "6167:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 579,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "6167:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6159:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 576,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6159:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6159:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6159:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6159:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "6159:57:0"
                },
                {
                  "expression": {
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 585,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "6247:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "6247:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 588,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6270:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SUCCESSFUL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "6270:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "6247:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "6247:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 593,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "6322:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 592,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "6302:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6302:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "EmitStatement",
                  "src": "6297:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 597,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "6370:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 596,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "6347:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6347:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "6347:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 602,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "6410:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 601,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "6400:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6400:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 604,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "6418:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6418:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6400:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6439:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6392:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6392:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "6392:77:0"
                }
              ]
            },
            "functionSelector": "f6819ecf",
            "id": 611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyerConfirmSuccessfulTrade",
            "nameLocation": "5480:27:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "5513:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 611,
                  "src": "5508:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5508:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5507:10:0"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5527:0:0"
            },
            "scope": 1213,
            "src": "5471:1013:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "6539:1031:0",
              "statements": [
                {
                  "assignments": [
                    617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 617,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "6554:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 676,
                      "src": "6549:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 616,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6549:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 619,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "6577:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 618,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "6567:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6567:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6549:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 623,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "6599:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 624,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "6612:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6612:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6599:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6633:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6591:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6591:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "6591:120:0"
                },
                {
                  "assignments": [
                    632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 632,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "6735:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 676,
                      "src": "6721:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 631,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 630,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "6721:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "6721:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 636,
                  "initialValue": {
                    "baseExpression": {
                      "id": 633,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "6751:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 635,
                    "indexExpression": {
                      "id": 634,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "6764:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6751:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6721:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 638,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6793:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6793:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 640,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "6807:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "6807:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6793:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6828:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6785:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6785:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "6785:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 647,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "6891:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "6891:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 649,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "6915:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_BUYER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4,
                          "src": "6915:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "6891:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6950:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6883:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6883:143:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "6883:143:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 656,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "7283:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7283:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 658,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
                              "src": "7302:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "biddingEndedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "7302:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 660,
                                "name": "targetedTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "7333:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                  "typeString": "struct Trade storage pointer"
                                }
                              },
                              "id": 661,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "numOfMins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17,
                              "src": "7333:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7359:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "7333:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7302:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7283:78:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e2774206d61726b2061207472616465206173204641494c4544206265666f726520746865206e756d626572206f66206d696e757465732073706563696669656420696e20746865207472616465207374617274696e672066726f6d207468652074696d6520796f7520656e646564207468652062696464696e67",
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7363:131:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629",
                          "typeString": "literal_string \"You can't mark a trade as FAILED before the number of minutes specified in the trade starting from the time you ended the bidding\""
                        },
                        "value": "You can't mark a trade as FAILED before the number of minutes specified in the trade starting from the time you ended the bidding"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd9dee03e768657954ae3d1d76360610416dbeb0b4ca23554540a3bab963d629",
                          "typeString": "literal_string \"You can't mark a trade as FAILED before the number of minutes specified in the trade starting from the time you ended the bidding\""
                        }
                      ],
                      "id": 655,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7275:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7275:220:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "7275:220:0"
                },
                {
                  "expression": {
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 669,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "7506:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "7506:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 672,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "7529:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PENDING_SELLER_CONFIRMATION",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "7529:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "7506:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "7506:57:0"
                }
              ]
            },
            "functionSelector": "8cb02ef4",
            "id": 677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyerMarkFailedTrade",
            "nameLocation": "6499:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "6525:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "6520:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6520:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6519:10:0"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6539:0:0"
            },
            "scope": 1213,
            "src": "6490:1080:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "7624:1351:0",
              "statements": [
                {
                  "assignments": [
                    683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 683,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "7639:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 771,
                      "src": "7634:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 682,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7634:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 687,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 685,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "7662:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 684,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "7652:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7652:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7634:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 689,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 683,
                          "src": "7684:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 690,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "7697:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7697:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7684:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7718:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7676:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7676:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "7676:120:0"
                },
                {
                  "assignments": [
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "7820:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 771,
                      "src": "7806:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 697,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 696,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "7806:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "7806:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 702,
                  "initialValue": {
                    "baseExpression": {
                      "id": 699,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "7836:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 701,
                    "indexExpression": {
                      "id": 700,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "7849:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7836:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7806:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 704,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7878:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7878:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 706,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "7892:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "7892:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7878:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7913:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7870:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7870:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "7870:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 713,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "7976:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 714,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "7976:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 715,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "8000:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_SELLER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "8000:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "7976:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8036:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7968:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7968:144:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "7968:144:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 722,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "8372:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8372:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 724,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 698,
                              "src": "8391:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 725,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "biddingEndedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "8391:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_180_by_1",
                              "typeString": "int_const 180"
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "33",
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8422:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8426:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "8422:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_180_by_1",
                              "typeString": "int_const 180"
                            }
                          },
                          "src": "8391:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8372:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e20636c61696d20796f7572206d6f6e6579206261636b206f6e6c79206966207468652073656c6c657220646f65736e277420636f6e6669726d206661696c757265206e6f7220726571756573742061646d696e277320696e74657276656e74696f6e2077697468696e2033206d696e757465732066726f6d207468652074696d6520686520776f6e207468652062696464696e67",
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8430:157:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf",
                          "typeString": "literal_string \"You can claim your money back only if the seller doesn't confirm failure nor request admin's intervention within 3 minutes from the time he won the bidding\""
                        },
                        "value": "You can claim your money back only if the seller doesn't confirm failure nor request admin's intervention within 3 minutes from the time he won the bidding"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8f85f5d3f9c5a0b3cde0723a61f403706562e66293c2083bd68f214f68ecebf",
                          "typeString": "literal_string \"You can claim your money back only if the seller doesn't confirm failure nor request admin's intervention within 3 minutes from the time he won the bidding\""
                        }
                      ],
                      "id": 721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8364:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8364:224:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "8364:224:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 740,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "8637:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "8637:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "323030303030303030303030303030303030",
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8666:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "200000000000000000"
                        },
                        "src": "8637:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 736,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 698,
                              "src": "8607:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 737,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "8607:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8599:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 734,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8599:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8599:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "8599:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8599:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "8599:86:0"
                },
                {
                  "expression": {
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 746,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "8739:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 748,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "8739:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 749,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "8762:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "FAILED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "8762:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "8739:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "8739:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 754,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "8810:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 753,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "8790:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "8790:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "EmitStatement",
                  "src": "8785:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 758,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "8858:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 757,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "8835:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8835:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "8835:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 763,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "8898:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 762,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "8888:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8888:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 765,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "8906:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8906:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8888:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8927:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 761,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8880:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8880:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "8880:77:0"
                }
              ]
            },
            "functionSelector": "b117a106",
            "id": 772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyerClaimMoneyBack",
            "nameLocation": "7585:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "7610:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "7605:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7605:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7604:10:0"
            },
            "returnParameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7624:0:0"
            },
            "scope": 1213,
            "src": "7576:1399:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "9034:986:0",
              "statements": [
                {
                  "assignments": [
                    778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 778,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "9049:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "9044:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 777,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9044:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 782,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 780,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "9072:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 779,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "9062:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9062:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9044:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 784,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 778,
                          "src": "9094:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 785,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9107:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9107:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9094:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9128:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9086:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9086:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "9086:120:0"
                },
                {
                  "assignments": [
                    793
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 793,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "9230:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "9216:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 792,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 791,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "9216:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "9216:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 797,
                  "initialValue": {
                    "baseExpression": {
                      "id": 794,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "9246:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 796,
                    "indexExpression": {
                      "id": 795,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "9259:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9246:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9216:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 799,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9288:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9288:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 801,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "9302:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "9302:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9288:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9324:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9280:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9280:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "9280:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 808,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "9387:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 809,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "9387:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 810,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "9411:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_SELLER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "9411:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "9387:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9447:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9379:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9379:144:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "9379:144:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3530303030303030303030303030303030",
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9573:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "50000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 818,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "9542:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 819,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "9542:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9534:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 816,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9534:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9534:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9534:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9534:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "9534:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 831,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "9675:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 832,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "9675:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313530303030303030303030303030303030",
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9704:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000000000000000_by_1",
                            "typeString": "int_const 150000000000000000"
                          },
                          "value": "150000000000000000"
                        },
                        "src": "9675:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 827,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "9645:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 828,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "9645:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9637:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 825,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9637:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9637:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9637:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9637:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "9637:86:0"
                },
                {
                  "expression": {
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 837,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "9794:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "9794:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 840,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "9817:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "FAILED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "9817:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "9794:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "9794:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 845,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "9865:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 844,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "9845:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9845:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 847,
                  "nodeType": "EmitStatement",
                  "src": "9840:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 849,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 778,
                        "src": "9913:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 848,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "9890:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9890:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "9890:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 854,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 774,
                              "src": "9953:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 853,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "9943:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9943:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 856,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9961:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9961:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9943:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9982:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9935:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9935:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "9935:77:0"
                }
              ]
            },
            "functionSelector": "4f63f69e",
            "id": 863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerConfirmFailedTrade",
            "nameLocation": "8990:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "9020:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "9015:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9015:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9014:10:0"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9034:0:0"
            },
            "scope": 1213,
            "src": "8981:1039:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 914,
              "nodeType": "Block",
              "src": "10073:545:0",
              "statements": [
                {
                  "assignments": [
                    869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 869,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "10088:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "10083:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 868,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10083:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 873,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 871,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "10111:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 870,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "10101:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10101:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10083:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 875,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "10133:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 876,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "10146:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10146:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10133:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10167:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10125:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10125:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "10125:120:0"
                },
                {
                  "assignments": [
                    884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 884,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "10269:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 914,
                      "src": "10255:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 883,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 882,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "10255:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "10255:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 888,
                  "initialValue": {
                    "baseExpression": {
                      "id": 885,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "10285:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 887,
                    "indexExpression": {
                      "id": 886,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "10298:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10285:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10255:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 890,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10327:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10327:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 892,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "10341:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "10341:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10327:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10363:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10319:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10319:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "ExpressionStatement",
                  "src": "10319:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 899,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "10426:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "10426:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 901,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "10450:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_SELLER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "10450:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "10426:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10486:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10418:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10418:144:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "10418:144:0"
                },
                {
                  "expression": {
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 907,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "10573:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 909,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "10573:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 910,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "10596:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CONFLICT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "10596:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "10573:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "10573:38:0"
                }
              ]
            },
            "functionSelector": "e40ebc3a",
            "id": 915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerMarkConflict",
            "nameLocation": "10035:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "10059:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 915,
                  "src": "10054:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10054:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10053:10:0"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10073:0:0"
            },
            "scope": 1213,
            "src": "10026:592:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1019,
              "nodeType": "Block",
              "src": "10669:1619:0",
              "statements": [
                {
                  "assignments": [
                    921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 921,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "10684:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1019,
                      "src": "10679:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 920,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10679:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 925,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 923,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "10707:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 922,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "10697:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10697:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10679:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 927,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "10729:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 928,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "10742:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "10742:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10729:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10763:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10721:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10721:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "10721:120:0"
                },
                {
                  "assignments": [
                    936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 936,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "10874:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1019,
                      "src": "10860:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 935,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 934,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "10860:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "10860:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 940,
                  "initialValue": {
                    "baseExpression": {
                      "id": 937,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "10890:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 939,
                    "indexExpression": {
                      "id": 938,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 921,
                      "src": "10903:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10890:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10860:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 942,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10932:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10932:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 944,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "10946:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "10946:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10932:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420616c6c6f77656420746f20706572666f726d207468697320616374696f6e21",
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10968:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        },
                        "value": "You're not allowed to perform this action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3708f79af12649fb3aa0d5d2001d07da7965d80ce2e62e5e0086ccf7f773f0",
                          "typeString": "literal_string \"You're not allowed to perform this action!\""
                        }
                      ],
                      "id": 941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10924:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10924:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "10924:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 951,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "11031:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "11031:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 953,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "11055:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING_BUYER_CONFIRMATION",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4,
                          "src": "11055:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "11031:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11090:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11023:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11023:143:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "11023:143:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 960,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "11496:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11496:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 962,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "11515:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 963,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "biddingEndedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "11515:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 964,
                                "name": "targetedTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 936,
                                "src": "11546:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                  "typeString": "struct Trade storage pointer"
                                }
                              },
                              "id": 965,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "numOfMins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17,
                              "src": "11546:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11572:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "11546:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11515:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11496:78:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e20636c61696d20796f7572206d6f6e6579206261636b206f6e6c792069662074686520627579657220646f65736e277420636f6e6669726d2073756363657373206e6f72206d61726b207468652074726164652061732061206661696c6564206f6e652077697468696e20746865206e756d626572206f66206d696e757465732073706563696669656420696e20746865207472616465207374617274696e672066726f6d207468652074696d6520686520656e646564207468652062696464696e67",
                        "id": 970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11576:204:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0",
                          "typeString": "literal_string \"You can claim your money back only if the buyer doesn't confirm success nor mark the trade as a failed one within the number of minutes specified in the trade starting from the time he ended the bidding\""
                        },
                        "value": "You can claim your money back only if the buyer doesn't confirm success nor mark the trade as a failed one within the number of minutes specified in the trade starting from the time he ended the bidding"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d17890abc54b4b692c6600d6f079b0bb30667d44745f3417f17deb9d5289fff0",
                          "typeString": "literal_string \"You can claim your money back only if the buyer doesn't confirm success nor mark the trade as a failed one within the number of minutes specified in the trade starting from the time he ended the bidding\""
                        }
                      ],
                      "id": 959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11488:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11488:293:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 972,
                  "nodeType": "ExpressionStatement",
                  "src": "11488:293:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3530303030303030303030303030303030",
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11830:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "50000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 975,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "11800:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 976,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "11800:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11792:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 973,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11792:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11792:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11792:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11792:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 981,
                  "nodeType": "ExpressionStatement",
                  "src": "11792:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 988,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "11932:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "11932:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313530303030303030303030303030303030",
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11961:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000000000000000_by_1",
                            "typeString": "int_const 150000000000000000"
                          },
                          "value": "150000000000000000"
                        },
                        "src": "11932:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 984,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "11901:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 985,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "11901:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11893:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 982,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11893:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11893:29:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "11893:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11893:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "11893:87:0"
                },
                {
                  "expression": {
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 994,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 936,
                        "src": "12058:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      },
                      "id": 996,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "12058:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 997,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "12081:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SUCCESSFUL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "12081:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$9",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "12058:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$9",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "12058:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1002,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 936,
                        "src": "12133:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 1001,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "12113:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "12113:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1004,
                  "nodeType": "EmitStatement",
                  "src": "12108:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1006,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "12181:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1005,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "12158:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12158:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "12158:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1011,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "12221:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1010,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "12211:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12211:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1013,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "12229:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12229:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12211:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12250:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 1009,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12203:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12203:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1018,
                  "nodeType": "ExpressionStatement",
                  "src": "12203:77:0"
                }
              ]
            },
            "functionSelector": "21af7a81",
            "id": 1020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellerClaimMoney",
            "nameLocation": "10633:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "10655:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "10650:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10650:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10649:10:0"
            },
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10669:0:0"
            },
            "scope": 1213,
            "src": "10624:1664:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "12378:1247:0",
              "statements": [
                {
                  "assignments": [
                    1030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1030,
                      "mutability": "mutable",
                      "name": "tradeIndex",
                      "nameLocation": "12393:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1135,
                      "src": "12388:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1029,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12388:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1034,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1032,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1022,
                        "src": "12416:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1031,
                      "name": "findTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "12406:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12406:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12388:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1036,
                          "name": "tradeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1030,
                          "src": "12438:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1037,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "12451:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12451:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12438:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465204e6f7420466f756e6420284d6f73742070726f6261626c792069742773206e6f206c6f6e676572206f70656e65642c20636865636b20636c6f736564207472616465732129",
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12472:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        },
                        "value": "Trade Not Found (Most probably it's no longer opened, check closed trades!)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2414512a9a35c5aae1c4639f58d73d45630142f17ac06bd29f61a76149b6911a",
                          "typeString": "literal_string \"Trade Not Found (Most probably it's no longer opened, check closed trades!)\""
                        }
                      ],
                      "id": 1035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12430:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12430:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "12430:120:0"
                },
                {
                  "assignments": [
                    1045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1045,
                      "mutability": "mutable",
                      "name": "targetedTrade",
                      "nameLocation": "12574:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1135,
                      "src": "12560:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      },
                      "typeName": {
                        "id": 1044,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1043,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29,
                          "src": "12560:5:0"
                        },
                        "referencedDeclaration": 29,
                        "src": "12560:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1049,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1046,
                      "name": "openedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "12590:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                        "typeString": "struct Trade storage ref[] storage ref"
                      }
                    },
                    "id": 1048,
                    "indexExpression": {
                      "id": 1047,
                      "name": "tradeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "12603:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12590:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12560:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$9",
                          "typeString": "enum Status"
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1051,
                            "name": "targetedTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "12632:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                              "typeString": "struct Trade storage pointer"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28,
                          "src": "12632:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1053,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "12656:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CONFLICT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "12656:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "12632:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063757272656e7420737461747573206f662074686520747261646520646f65736e2774207065726d697420796f7520746f20706572666f726d207468697320616374696f6e",
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12673:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        },
                        "value": "The current status of the trade doesn't permit you to perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fad8b890577ef064d1dc30638163fa4f6c9437a8629499ff71cab051ffa7ed6d",
                          "typeString": "literal_string \"The current status of the trade doesn't permit you to perform this action\""
                        }
                      ],
                      "id": 1050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12624:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12624:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "12624:125:0"
                },
                {
                  "condition": {
                    "id": 1059,
                    "name": "_isSuccessfulTrade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1024,
                    "src": "12772:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1115,
                    "nodeType": "Block",
                    "src": "13123:314:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3530303030303030303030303030303030",
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13161:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              },
                              "value": "50000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1090,
                                  "name": "admin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "13145:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13137:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1088,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13137:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13137:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "13137:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13137:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1095,
                        "nodeType": "ExpressionStatement",
                        "src": "13137:42:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1102,
                                  "name": "targetedTrade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "13267:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                    "typeString": "struct Trade storage pointer"
                                  }
                                },
                                "id": 1103,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sellingPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19,
                                "src": "13267:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "313530303030303030303030303030303030",
                                "id": 1104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13296:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_150000000000000000_by_1",
                                  "typeString": "int_const 150000000000000000"
                                },
                                "value": "150000000000000000"
                              },
                              "src": "13267:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1098,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "13237:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 1099,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "13237:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13229:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1096,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13229:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13229:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "13229:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13229:86:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1107,
                        "nodeType": "ExpressionStatement",
                        "src": "13229:86:0"
                      },
                      {
                        "expression": {
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1108,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "13390:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "13390:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$9",
                              "typeString": "enum Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1111,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "13413:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                                "typeString": "type(enum Status)"
                              }
                            },
                            "id": 1112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "FAILED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "13413:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$9",
                              "typeString": "enum Status"
                            }
                          },
                          "src": "13390:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "id": 1114,
                        "nodeType": "ExpressionStatement",
                        "src": "13390:36:0"
                      }
                    ]
                  },
                  "id": 1116,
                  "nodeType": "IfStatement",
                  "src": "12768:669:0",
                  "trueBody": {
                    "id": 1087,
                    "nodeType": "Block",
                    "src": "12792:325:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3530303030303030303030303030303030",
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12830:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              },
                              "value": "50000000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1062,
                                  "name": "admin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "12814:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12806:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1060,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12806:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12806:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "12806:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12806:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1067,
                        "nodeType": "ExpressionStatement",
                        "src": "12806:42:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1074,
                                  "name": "targetedTrade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "12936:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                    "typeString": "struct Trade storage pointer"
                                  }
                                },
                                "id": 1075,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sellingPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19,
                                "src": "12936:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "313530303030303030303030303030303030",
                                "id": 1076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12965:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_150000000000000000_by_1",
                                  "typeString": "int_const 150000000000000000"
                                },
                                "value": "150000000000000000"
                              },
                              "src": "12936:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1070,
                                    "name": "targetedTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1045,
                                    "src": "12905:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                      "typeString": "struct Trade storage pointer"
                                    }
                                  },
                                  "id": 1071,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "seller",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21,
                                  "src": "12905:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12897:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1068,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12897:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12897:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "12897:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12897:87:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1079,
                        "nodeType": "ExpressionStatement",
                        "src": "12897:87:0"
                      },
                      {
                        "expression": {
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1080,
                              "name": "targetedTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "13066:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                                "typeString": "struct Trade storage pointer"
                              }
                            },
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "13066:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$9",
                              "typeString": "enum Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1083,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "13089:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$9_$",
                                "typeString": "type(enum Status)"
                              }
                            },
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "SUCCESSFUL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7,
                            "src": "13089:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$9",
                              "typeString": "enum Status"
                            }
                          },
                          "src": "13066:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$9",
                            "typeString": "enum Status"
                          }
                        },
                        "id": 1086,
                        "nodeType": "ExpressionStatement",
                        "src": "13066:40:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1118,
                        "name": "targetedTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "13471:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                          "typeString": "struct Trade storage pointer"
                        }
                      ],
                      "id": 1117,
                      "name": "TradeClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "13451:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Trade_$29_memory_ptr_$returns$__$",
                        "typeString": "function (struct Trade memory)"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "trade"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "13451:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1120,
                  "nodeType": "EmitStatement",
                  "src": "13446:40:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1122,
                        "name": "tradeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1030,
                        "src": "13519:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1121,
                      "name": "removeFromOpenedTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "13496:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13496:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1124,
                  "nodeType": "ExpressionStatement",
                  "src": "13496:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1127,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1022,
                              "src": "13559:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1126,
                            "name": "findTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "13549:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13549:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1129,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "13567:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 1130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13567:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13549:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a205472616e736174696f6e2072657665727465642e",
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13588:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        },
                        "value": "ERROR: Transation reverted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eef142779220ba356547d6db9e1268d9b835ee8c2841c32076fdf89c28eed2f",
                          "typeString": "literal_string \"ERROR: Transation reverted.\""
                        }
                      ],
                      "id": 1125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13541:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13541:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "13541:77:0"
                }
              ]
            },
            "functionSelector": "6e82386e",
            "id": 1136,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1027,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1026,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52,
                  "src": "12359:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12359:9:0"
              }
            ],
            "name": "adminResolveConflict",
            "nameLocation": "12303:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "12329:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "12324:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12324:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "_isSuccessfulTrade",
                  "nameLocation": "12339:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "12334:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12334:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12323:35:0"
            },
            "returnParameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12378:0:0"
            },
            "scope": 1213,
            "src": "12294:1331:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1167,
              "nodeType": "Block",
              "src": "13688:190:0",
              "statements": [
                {
                  "assignments": [
                    1144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1144,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "13703:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1167,
                      "src": "13698:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1143,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13698:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1146,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13707:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13698:10:0"
                },
                {
                  "body": {
                    "id": 1163,
                    "nodeType": "Block",
                    "src": "13755:99:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1154,
                                "name": "openedTrades",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "13773:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                                  "typeString": "struct Trade storage ref[] storage ref"
                                }
                              },
                              "id": 1156,
                              "indexExpression": {
                                "id": 1155,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1144,
                                "src": "13786:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13773:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$29_storage",
                                "typeString": "struct Trade storage ref"
                              }
                            },
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "13773:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1158,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "13795:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13773:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1162,
                        "nodeType": "IfStatement",
                        "src": "13769:69:0",
                        "trueBody": {
                          "id": 1161,
                          "nodeType": "Block",
                          "src": "13800:38:0",
                          "statements": [
                            {
                              "id": 1160,
                              "nodeType": "Break",
                              "src": "13818:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1147,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "13725:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1148,
                        "name": "openedTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "13729:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                          "typeString": "struct Trade storage ref[] storage ref"
                        }
                      },
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13729:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13725:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1164,
                  "loopExpression": {
                    "expression": {
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13750:3:0",
                      "subExpression": {
                        "id": 1151,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1144,
                        "src": "13750:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1153,
                    "nodeType": "ExpressionStatement",
                    "src": "13750:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "13718:136:0"
                },
                {
                  "expression": {
                    "id": 1165,
                    "name": "i",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1144,
                    "src": "13870:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1142,
                  "id": 1166,
                  "nodeType": "Return",
                  "src": "13863:8:0"
                }
              ]
            },
            "id": 1168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findTrade",
            "nameLocation": "13640:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "13655:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "13650:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13650:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13649:10:0"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "13682:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13682:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13681:6:0"
            },
            "scope": 1213,
            "src": "13631:247:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "13938:105:0",
              "statements": [
                {
                  "expression": {
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1173,
                        "name": "openedTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "13948:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                          "typeString": "struct Trade storage ref[] storage ref"
                        }
                      },
                      "id": 1175,
                      "indexExpression": {
                        "id": 1174,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "13961:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13948:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage",
                        "typeString": "struct Trade storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 1176,
                        "name": "openedTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "13971:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                          "typeString": "struct Trade storage ref[] storage ref"
                        }
                      },
                      "id": 1181,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1177,
                            "name": "openedTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "13984:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                              "typeString": "struct Trade storage ref[] storage ref"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13984:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14006:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13984:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13971:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage",
                        "typeString": "struct Trade storage ref"
                      }
                    },
                    "src": "13948:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$29_storage",
                      "typeString": "struct Trade storage ref"
                    }
                  },
                  "id": 1183,
                  "nodeType": "ExpressionStatement",
                  "src": "13948:60:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1184,
                        "name": "openedTrades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "14018:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                          "typeString": "struct Trade storage ref[] storage ref"
                        }
                      },
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "14018:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Trade storage ref[] storage pointer)"
                      }
                    },
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14018:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1188,
                  "nodeType": "ExpressionStatement",
                  "src": "14018:18:0"
                }
              ]
            },
            "id": 1190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromOpenedTrades",
            "nameLocation": "13893:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "13921:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "13916:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13916:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13915:13:0"
            },
            "returnParameters": {
              "id": 1172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13938:0:0"
            },
            "scope": 1213,
            "src": "13884:159:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1201,
              "nodeType": "Block",
              "src": "14139:33:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1197,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "14156:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EnergyTrading_$1213",
                            "typeString": "contract EnergyTrading"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_EnergyTrading_$1213",
                            "typeString": "contract EnergyTrading"
                          }
                        ],
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14148:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14148:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14148:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "14148:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1194,
                  "id": 1200,
                  "nodeType": "Return",
                  "src": "14141:28:0"
                }
              ]
            },
            "functionSelector": "901c947f",
            "id": 1202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "showContractBalance",
            "nameLocation": "14089:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14108:2:0"
            },
            "returnParameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "14133:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14133:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14132:6:0"
            },
            "scope": 1213,
            "src": "14080:92:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1211,
              "nodeType": "Block",
              "src": "14248:24:0",
              "statements": [
                {
                  "expression": {
                    "id": 1209,
                    "name": "openedTrades",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "14257:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage",
                      "typeString": "struct Trade storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1208,
                  "id": 1210,
                  "nodeType": "Return",
                  "src": "14250:19:0"
                }
              ]
            },
            "functionSelector": "0160a13c",
            "id": 1212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchAllOpenedTrades",
            "nameLocation": "14187:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14207:2:0"
            },
            "returnParameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "14232:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Trade_$29_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Trade[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1205,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1204,
                        "name": "Trade",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 29,
                        "src": "14232:5:0"
                      },
                      "referencedDeclaration": 29,
                      "src": "14232:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$29_storage_ptr",
                        "typeString": "struct Trade"
                      }
                    },
                    "id": 1206,
                    "nodeType": "ArrayTypeName",
                    "src": "14232:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trade_$29_storage_$dyn_storage_ptr",
                      "typeString": "struct Trade[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14231:16:0"
            },
            "scope": 1213,
            "src": "14178:94:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1214,
        "src": "410:13864:0",
        "usedErrors": []
      }
    ],
    "src": "32:14243:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x425cf89af39019aD9fDFdb5808Ee067584BA4a0f",
      "transactionHash": "0x60d7b286fa8d219da1aa132cf9a2253391de73713fec66206d35e2af9a852aa5"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-06-02T05:05:56.743Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}